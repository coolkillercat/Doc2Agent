2025-06-16 18:00:24,823 - opendevin - INFO - Processing glycan task 4
2025-06-16 18:00:24,824 - opendevin - INFO - Question: How many lectins with known structures are available that have been derived from the species 'Homo sapiens' in the UniLectin3D database, and what are their associated Protein Data Bank (PDB) IDs and fold types?
2025-06-16 18:00:24,824 - opendevin - INFO - Expected trajectory: get_lectins
2025-06-16 18:00:24,824 - opendevin.core.config - INFO - Loading llm config from llm
2025-06-16 18:00:24,826 - opendevin - INFO - Running agent CodeActAgent (model: gpt-4o, llm_config: llm) with task: "You are a glycomics research assistant with access to comprehensive glycan research APIs.

RESEARCH QUESTION: How many lectins with known structures are available that have been derived from the species 'Homo sapiens' in the UniLectin3D database, and what are their associated Protein Data Bank (PDB) IDs and fold types?

You have access to 12 specialized glycan API modules:
- WURCSFramework: Structure validation and mass calculation
- GlycanFormatConverter: Format conversions (IUPAC, WURCS, etc.)
- GlyGen: Protein-glycan interaction data
- UniLectin: Lectin-glycan binding analysis
- PubChem: Chemical properties and bioassays
- SwaggerProteinAPI: Comprehensive protein analysis
- GlyTouCanData: Glycan registry and identification
- GlycanImage: Glycan structure visualization
- GlycoSMOS-OtherAPIs: Multi-format conversion tools
- Composition: Composition-based analysis
- KEGG: Pathway and metabolic context
- O-GlcNAc: Specific PTM analysis

CRITICAL WORKFLOW:
1. Start with list_tools(site='glycan') to see all available modules
2. Use list_tools(site='glycan', module='MODULE_NAME') to see tools in specific modules
3. Use get_documentation(tool_name, site='glycan', module='MODULE_NAME') for tool details
4. Use call_function(tool_name, site='glycan', module='MODULE_NAME', **parameters) to execute APIs

IMPORTANT: You MUST use Python code blocks to call these functions. Always format your code as:

<execute_ipython>
from utils import list_tools, get_documentation, call_function

# Example calls:
result = list_tools(site='glycan')
print(result)

# For specific modules:
tools = list_tools(site='glycan', module='GlycanFormatConverter')
print(tools)

# For documentation:
doc = get_documentation('convert_iupac_to_wurcs', site='glycan', module='GlycanFormatConverter')
print(doc)

# For function calls:
response = call_function('convert_iupac_to_wurcs', site='glycan', module='GlycanFormatConverter', iupac_string='your_input')
print(response)
</execute_ipython>

Remember: Always specify both site='glycan' and module='MODULE_NAME' when calling glycan functions.


Please solve this glycan research question step by step.When you think you have completed the request, please run the following command: <execute_bash> exit </execute_bash>.
"
2025-06-16 18:00:24,828 - opendevin - INFO - Initializing LLM with model: gpt-4o
2025-06-16 18:00:24,830 - opendevin - WARNING - model_name: gpt-4o; api_key: [API_KEY_REMOVED]; base_url: http://localhost:4000; custom_llm_provider: None
2025-06-16 18:00:24,851 - opendevin - INFO - SSHBox is running as opendevin user with USER_ID=502 in the sandbox
2025-06-16 18:00:24,883 - opendevin - INFO - Detected initial session.
2025-06-16 18:00:24,884 - opendevin - INFO - Creating new Docker container
2025-06-16 18:00:24,887 - opendevin - WARNING - Using port forwarding till the enable host network mode of Docker is out of experimental mode.Check the 897th issue on https://github.com/OpenDevin/OpenDevin/issues/ for more information.
2025-06-16 18:00:24,887 - opendevin - INFO - Mounting workspace directory: /Users/jianhaonan/Desktop/API-Based-Agent/workspace
2025-06-16 18:00:24,887 - opendevin - INFO - Mounting volumes: {'/Users/jianhaonan/Desktop/API-Based-Agent/workspace': {'bind': '/workspace', 'mode': 'rw'}, '/tmp/cache': {'bind': '/home/opendevin/.cache', 'mode': 'rw'}}
2025-06-16 18:00:24,887 - opendevin - INFO - Mounting workspace directory: /Users/jianhaonan/Desktop/API-Based-Agent/workspace
2025-06-16 18:00:25,143 - opendevin - INFO - Container started
2025-06-16 18:00:26,154 - opendevin - INFO - waiting for container to start: 1, container status: running
2025-06-16 18:00:26,478 - opendevin - INFO - Connecting to SSH session...
2025-06-16 18:00:26,478 - opendevin - INFO - You can debug the SSH connection by running: `ssh -v -p 60217 opendevin@localhost` using the password 'dd26ee39-418a-43bf-b362-5040125eb40a'
2025-06-16 18:00:27,817 - opendevin - INFO - Connected to SSH session
2025-06-16 18:00:28,554 - opendevin - INFO - Initializing plugins in the sandbox
2025-06-16 18:00:28,831 - opendevin - INFO - Copied files from [/Users/jianhaonan/Desktop/API-Based-Agent/opendevin/runtime/plugins/agent_skills] to [/opendevin/plugins/agent_skills] inside sandbox.
2025-06-16 18:00:28,831 - opendevin - INFO - Initializing plugin [agent_skills] by executing [/opendevin/plugins/agent_skills/setup.sh] in the sandbox.
2025-06-16 18:00:34,579 - opendevin - INFO - Plugin agent_skills initialized successfully
2025-06-16 18:00:34,668 - opendevin - INFO - Copied files from [/Users/jianhaonan/Desktop/API-Based-Agent/opendevin/runtime/plugins/jupyter] to [/opendevin/plugins/jupyter] inside sandbox.
2025-06-16 18:00:34,668 - opendevin - INFO - Initializing plugin [jupyter] by executing [/opendevin/plugins/jupyter/setup.sh] in the sandbox.
2025-06-16 18:00:46,712 - opendevin - INFO - Plugin jupyter initialized successfully
2025-06-16 18:00:46,923 - opendevin - INFO - Sourced ~/.bashrc successfully
2025-06-16 18:00:46,927 - opendevin - INFO - Starting browser env...
2025-06-16 18:00:55,046 - opendevin - INFO - **MessageAction** (source=EventSource.USER)
CONTENT: You are a glycomics research assistant with access to comprehensive glycan research APIs.

RESEARCH QUESTION: How many lectins with known structures are available that have been derived from the species 'Homo sapiens' in the UniLectin3D database, and what are their associated Protein Data Bank (PDB) IDs and fold types?

You have access to 12 specialized glycan API modules:
- WURCSFramework: Structure validation and mass calculation
- GlycanFormatConverter: Format conversions (IUPAC, WURCS, etc.)
- GlyGen: Protein-glycan interaction data
- UniLectin: Lectin-glycan binding analysis
- PubChem: Chemical properties and bioassays
- SwaggerProteinAPI: Comprehensive protein analysis
- GlyTouCanData: Glycan registry and identification
- GlycanImage: Glycan structure visualization
- GlycoSMOS-OtherAPIs: Multi-format conversion tools
- Composition: Composition-based analysis
- KEGG: Pathway and metabolic context
- O-GlcNAc: Specific PTM analysis

CRITICAL WORKFLOW:
1. Start with list_tools(site='glycan') to see all available modules
2. Use list_tools(site='glycan', module='MODULE_NAME') to see tools in specific modules
3. Use get_documentation(tool_name, site='glycan', module='MODULE_NAME') for tool details
4. Use call_function(tool_name, site='glycan', module='MODULE_NAME', **parameters) to execute APIs

IMPORTANT: You MUST use Python code blocks to call these functions. Always format your code as:

<execute_ipython>
from utils import list_tools, get_documentation, call_function

# Example calls:
result = list_tools(site='glycan')
print(result)

# For specific modules:
tools = list_tools(site='glycan', module='GlycanFormatConverter')
print(tools)

# For documentation:
doc = get_documentation('convert_iupac_to_wurcs', site='glycan', module='GlycanFormatConverter')
print(doc)

# For function calls:
response = call_function('convert_iupac_to_wurcs', site='glycan', module='GlycanFormatConverter', iupac_string='your_input')
print(response)
</execute_ipython>

Remember: Always specify both site='glycan' and module='MODULE_NAME' when calling glycan functions.


Please solve this glycan research question step by step.When you think you have completed the request, please run the following command: <execute_bash> exit </execute_bash>.

2025-06-16 18:00:55,047 - opendevin - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.LOADING to AgentState.RUNNING
2025-06-16 18:00:55,048 - opendevin - INFO - [Agent Controller default] Starting step loop...
2025-06-16 18:00:55,048 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 0
2025-06-16 18:00:55,048 - opendevin - INFO - History string sample: [(MessageAction(content="You are a glycomics research assistant with access to comprehensive glycan research APIs.\n\nRESEARCH QUESTION: How many lectins with known structures are available that have ...
2025-06-16 18:00:55,048 - opendevin - INFO - Checking for site URLs in history: MAP_URL=False, SHOPPING_ADMIN_URL=False
2025-06-16 18:00:55,048 - opendevin - INFO - Is likely map task: False, api_tools_checked_this_session=False
2025-06-16 18:00:55,048 - opendevin - INFO - Initializing glycan API tools
2025-06-16 18:00:55,048 - opendevin - WARNING - Detected Python code in MessageAction - converting to IPythonRunCellAction
2025-06-16 18:00:55,048 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: Converting message with Python code to IPythonRunCellAction
CODE:
from utils import list_tools, get_documentation, call_function
print("\n==== CHECKING GLYCAN API TOOLS ====\n")
print("Available glycan modules:")
result = list_tools(site="glycan")
print(result)
2025-06-16 18:00:55,695 - opendevin - INFO - **IPythonRunCellObservation**

==== CHECKING GLYCAN API TOOLS ====

Available glycan modules:
Available glycan modules:
- WURCSFramework (3 tools)
- composition (1 tools)
- glycam (1 tools)
- glycanformatconverter (1 tools)
- glycanimage (1 tools)
- glycosmos-otherapis (3 tools)
- glygen (2 tools)
- glytoucandata (2 tools)
- kegg (7 tools)
- o-glcnac (1 tools)
- pubchem (5 tools)
- swaggerProteinAPI (35 tools)
- unilectin (8 tools)

Use list_tools(site="glycan", module="<module_name>") to see tools in a specific module.
DEBUG: Starting list_tools for site 'glycan'
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: /workspace/../evaluation/webarena
DEBUG: Added glycan path to sys.path: /Users/jianhaonan/Desktop/API-Based-Agent/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: evaluation/webarena
DEBUG: Successfully imported glycan_utils

2025-06-16 18:00:55,798 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 1
2025-06-16 18:00:55,798 - opendevin - INFO - History string sample: [(MessageAction(content="You are a glycomics research assistant with access to comprehensive glycan research APIs.\n\nRESEARCH QUESTION: How many lectins with known structures are available that have ...
2025-06-16 18:00:55,798 - opendevin - INFO - Checking for site URLs in history: MAP_URL=False, SHOPPING_ADMIN_URL=False
2025-06-16 18:00:55,798 - opendevin - INFO - Is likely map task: False, api_tools_checked_this_session=False
2025-06-16 18:00:55,798 - opendevin - INFO - Glycan API task detected (history <= 2) - calling LLM directly
2025-06-16 18:00:59,875 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:00:59,876 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: To address the research question, we need to find lectins with known structures derived from 'Homo sapiens' in the UniLectin3D database. Let's start by exploring the available tools in the glycan site to identify the relevant module and tools for this task.

I'll begin by listing all available modules in the glycan site.
CODE:
from utils import list_tools

# List all available modules in the glycan site
modules = list_tools(site='glycan')
print(modules)
2025-06-16 18:01:00,440 - opendevin - INFO - **IPythonRunCellObservation**
Available glycan modules:
- WURCSFramework (3 tools)
- composition (1 tools)
- glycam (1 tools)
- glycanformatconverter (1 tools)
- glycanimage (1 tools)
- glycosmos-otherapis (3 tools)
- glygen (2 tools)
- glytoucandata (2 tools)
- kegg (7 tools)
- o-glcnac (1 tools)
- pubchem (5 tools)
- swaggerProteinAPI (35 tools)
- unilectin (8 tools)

Use list_tools(site="glycan", module="<module_name>") to see tools in a specific module.
DEBUG: Starting list_tools for site 'glycan'
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: /workspace/../evaluation/webarena
DEBUG: Added glycan path to sys.path: /Users/jianhaonan/Desktop/API-Based-Agent/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: evaluation/webarena
DEBUG: Successfully imported glycan_utils

2025-06-16 18:01:00,543 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 2
2025-06-16 18:01:00,543 - opendevin - INFO - History string sample: [(MessageAction(content="You are a glycomics research assistant with access to comprehensive glycan research APIs.\n\nRESEARCH QUESTION: How many lectins with known structures are available that have ...
2025-06-16 18:01:00,544 - opendevin - INFO - Checking for site URLs in history: MAP_URL=False, SHOPPING_ADMIN_URL=False
2025-06-16 18:01:00,544 - opendevin - INFO - Is likely map task: False, api_tools_checked_this_session=False
2025-06-16 18:01:00,544 - opendevin - INFO - Glycan API task detected - calling LLM directly
2025-06-16 18:01:03,741 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:03,741 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: To address the research question, we need to find lectins with known structures derived from 'Homo sapiens' in the UniLectin3D database. Let's start by listing the available tools in the glycan site to identify the relevant module and tools.
CODE:
from utils import list_tools

# List all available modules in the glycan site
list_tools(site='glycan')
2025-06-16 18:01:04,331 - opendevin - INFO - **IPythonRunCellObservation**
DEBUG: Starting list_tools for site 'glycan'
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: /workspace/../evaluation/webarena
DEBUG: Added glycan path to sys.path: /Users/jianhaonan/Desktop/API-Based-Agent/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: evaluation/webarena
DEBUG: Successfully imported glycan_utils
'Available glycan modules:\n- WURCSFramework (3 tools)\n- composition (1 tools)\n- glycam (1 tools)\n- glycanformatconverter (1 tools)\n- glycanimage (1 tools)\n- glycosmos-otherapis (3 tools)\n- glygen (2 tools)\n- glytoucandata (2 tools)\n- kegg (7 tools)\n- o-glcnac (1 tools)\n- pubchem (5 tools)\n- swaggerProteinAPI (35 tools)\n- unilectin (8 tools)\n\nUse list_tools(site="glycan", module="<module_name>") to see tools in a specific module.'
2025-06-16 18:01:04,434 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 3
2025-06-16 18:01:07,671 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:07,672 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: To address the research question, we need to find lectins with known structures derived from 'Homo sapiens' in the UniLectin3D database. Let's start by listing the available tools in the glycan site to identify the relevant module and tools.
CODE:
from utils import list_tools

# List all available modules in the glycan site
list_tools(site='glycan')
2025-06-16 18:01:08,230 - opendevin - INFO - **IPythonRunCellObservation**
DEBUG: Starting list_tools for site 'glycan'
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: /workspace/../evaluation/webarena
DEBUG: Added glycan path to sys.path: /Users/jianhaonan/Desktop/API-Based-Agent/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: evaluation/webarena
DEBUG: Successfully imported glycan_utils
'Available glycan modules:\n- WURCSFramework (3 tools)\n- composition (1 tools)\n- glycam (1 tools)\n- glycanformatconverter (1 tools)\n- glycanimage (1 tools)\n- glycosmos-otherapis (3 tools)\n- glygen (2 tools)\n- glytoucandata (2 tools)\n- kegg (7 tools)\n- o-glcnac (1 tools)\n- pubchem (5 tools)\n- swaggerProteinAPI (35 tools)\n- unilectin (8 tools)\n\nUse list_tools(site="glycan", module="<module_name>") to see tools in a specific module.'
2025-06-16 18:01:08,330 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 4
2025-06-16 18:01:10,768 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:10,769 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: The module we are interested in is "unilectin" since it deals with lectin-glycan binding analysis. Let's list the tools available in the UniLectin module to find the one that can help us retrieve lectins derived from 'Homo sapiens'.
CODE:
# List tools in the UniLectin module
list_tools(site='glycan', module='unilectin')
2025-06-16 18:01:11,351 - opendevin - INFO - **IPythonRunCellObservation**
DEBUG: Starting list_tools for site 'glycan'
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: /workspace/../evaluation/webarena
DEBUG: Added glycan path to sys.path: /Users/jianhaonan/Desktop/API-Based-Agent/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace/evaluation/webarena
DEBUG: Added glycan path to sys.path: /workspace
DEBUG: Added glycan path to sys.path: evaluation/webarena
DEBUG: Successfully imported glycan_utils
'Available tools in glycan module "unilectin":\n- get_biotech_lectins_POST: Retrieve lectin information relevant to biotechnology applications from the UniLectin3D database.\n- get_fungal_lectins_POST: Get information about lectins from fungal species, including structural and functional data from the UniLectin3D database.\n- get_human_lectome_POST: Retrieve comprehensive information about human lectins (human lectome) including their glycan-binding specificities and biological roles.\n- get_lectins_POST: Get general lectin information from the UniLectin3D database based on various search criteria and parameters.\n- get_ligands_POST: Retrieve information about lectin ligands and their binding characteristics for glycan-lectin interaction studies.\n- get_predicted_lectins_POST: Get information about computationally predicted lectins and their potential glycan-binding capabilities.\n- get_propeller_lectins_POST: Retrieve information about lectins with propeller fold structures and their carbohydrate-binding properties.\n- get_trefoil_lectins_POST: Get information about trefoil lectins and their specific glycan recognition patterns and biological functions.'
2025-06-16 18:01:11,454 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 5
2025-06-16 18:01:14,942 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:14,942 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: To find lectins derived from 'Homo sapiens' with known structures, we should use the `get_human_lectome_POST` tool, as it is specifically designed to retrieve comprehensive information about human lectins. Let's check the documentation for this tool to understand the parameters required for the API call.
CODE:
from utils import get_documentation

# Get documentation for the get_human_lectome_POST tool
get_documentation('get_human_lectome_POST', site='glycan', module='unilectin')
2025-06-16 18:01:15,515 - opendevin - INFO - **IPythonRunCellObservation**
'"""\nRetrieve human lectome data from the UniLectin database.\n    \n    This function queries the UniLectin API to get information about human lectins\n    based on specified filtering criteria.\n    \n    Parameters:\n        getcolumns (str): Comma-separated list of columns to retrieve (e.g., "RefSeqID,UniProt_ID")\n        wherecolumn (str): Column to filter on (e.g., "lectinStatus", "common_protein_name")\n        isvalue (str): Value to match in the wherecolumn (supports wildcards like "%SIGLEC%")\n        limit (int): Maximum number of results to return (default: 1000, use -1 for all)\n    \n    Returns:\n        Returns information about human lectins from the UniLectin database based on specified filtering criteria.\n    Example:\n        # Get all human lectins with curated status\n        response = get_human_lectome(\n            getcolumns="RefSeqID,UniProt_ID",\n            wherecolumn="lectinStatus",\n            isvalue="Curated",\n            limit=1000\n        )\n        \n        # Get all SIGLEC lectins\n        response = get_human_lectome(\n            getcolumns="RefSeqID,UniProt_ID",\n            wherecolumn="common_protein_name",\n            isvalue="%SIGLEC%",\n            limit=1000\n        )\n"""'
2025-06-16 18:01:15,618 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 6
2025-06-16 18:01:21,626 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:21,626 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: The `get_human_lectome_POST` tool allows us to retrieve information about human lectins from the UniLectin database. We can specify the columns we want to retrieve, the column to filter on, and the value to match. For our research question, we need to find lectins with known structures, so we should filter by a relevant column such as "lectinStatus" with a value like "Curated" or "Known Structure".

Let's proceed to call this function to retrieve the lectins derived from 'Homo sapiens' with known structures, and include the PDB IDs and fold types in the results.
CODE:
from utils import call_function

# Call the get_human_lectome_POST function to retrieve human lectins with known structures
response = call_function(
    'get_human_lectome_POST',
    site='glycan',
    module='unilectin',
    getcolumns="RefSeqID,UniProt_ID,PDB_ID,FoldType",
    wherecolumn="lectinStatus",
    isvalue="Known Structure",
    limit=-1
)

print(response)
2025-06-16 18:01:22,803 - opendevin - INFO - **IPythonRunCellObservation**
DEBUG: Successfully imported glycan_utils for call_function
Response stored as response_1
{
  "status_code": 400,
  "text": "ERROR: Server Error with gethumanlectome endpoint",
  "json": null,
  "content": "ERROR: Server Error with gethumanlectome endpoint"
}

[Response stored as 'response_1' - use get_response('response_1', 'search_term') to search within it]

2025-06-16 18:01:22,905 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 7
2025-06-16 18:01:27,071 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:27,072 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: It seems there was a server error when attempting to retrieve data using the `get_human_lectome_POST` tool. This might be due to an issue with the endpoint or the parameters used. Let's try using the `get_lectins_POST` tool instead, which provides general lectin information and might allow us to filter by species and structure status.

First, I'll check the documentation for the `get_lectins_POST` tool to understand the parameters we can use.
CODE:
# Get documentation for the get_lectins_POST tool
get_documentation('get_lectins_POST', site='glycan', module='unilectin')
2025-06-16 18:01:27,671 - opendevin - INFO - **IPythonRunCellObservation**
'"""\nRetrieve lectin data from UniLectin3D database based on specified column filters and criteria.\n    \n    Parameters:\n        getcolumns (str): Comma-separated list of columns to retrieve (e.g., "pdb,uniprot")\n        wherecolumn (str): Column to filter on (e.g., "pdb", "species", "uniprot")\n        isvalue (str): Value to match in the wherecolumn (supports wildcards like "%%" for all)\n        limit (int): Maximum number of results to return (default: 1000, use -1 for all)\n    \n    Returns:\n        Returns lectin data from UniLectin3D database including specified columns like PDB IDs, UniProt IDs, fold, class, and other properties based on filtering criteria.\n    Examples:\n        # Get all PDB IDs and their UniProt IDs\n        get_lectins(getcolumns="pdb,uniprot", wherecolumn="pdb", isvalue="%%")\n        \n        # Get lectins from a specific species\n        get_lectins(getcolumns="pdb,uniprot", wherecolumn="species", isvalue="Rattus norvegicus")\n        \n        # Get lectins with a specific UniProt ID\n        get_lectins(getcolumns="pdb,fold,class", wherecolumn="uniprot", isvalue="P19999")\n"""'
2025-06-16 18:01:27,774 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 8
2025-06-16 18:01:31,728 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:31,728 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: The `get_lectins_POST` tool allows us to retrieve lectin data from the UniLectin3D database based on specified column filters and criteria. We can filter by species and retrieve columns such as PDB IDs and fold types.

Let's proceed to call this function to retrieve lectins derived from 'Homo sapiens' with known structures, including their PDB IDs and fold types.
CODE:
# Call the get_lectins_POST function to retrieve lectins from Homo sapiens with known structures
response = call_function(
    'get_lectins_POST',
    site='glycan',
    module='unilectin',
    getcolumns="pdb,fold",
    wherecolumn="species",
    isvalue="Homo sapiens",
    limit=-1
)

print(response)
2025-06-16 18:01:32,669 - opendevin - INFO - **IPythonRunCellObservation**
DEBUG: Successfully imported glycan_utils for call_function
Response stored as response_2
{
  "status_code": 200,
  "text": "[[\"pdb\", \"fold\"], [\"1A3K\", \"b-sandwich / ConA-like\"], [\"1B08\", \"a/b mixed / C-type lectin-like\"], [\"1B09\", \"b-sandwich / ConA-like\"], [\"1BKZ\", \"b-sandwich / ConA-like\"], [\"1CRV\", \"b-sandwich / ConA-like\"], [\"1DV8\", \"a/b mixed / C-type lectin-like\"], [\"1EGG\", \"a/b mixed / C-type lectin-like\"], [\"1EGI\", \"a/b mixed / C-type lectin-like\"], [\"1ESL\", \"a/b mixed / C-type lectin-like\"], [\"1G1Q\", \"a/b mixed / C-type lectin-like

... [Response truncated - showing first 500 of 75590 total characters]
[Use get_response('response_2') to view the full response or get_response('response_2', 'search_term') to search within it]

2025-06-16 18:01:32,774 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 9
2025-06-16 18:01:35,900 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:35,901 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: The response contains a list of lectins derived from 'Homo sapiens' with their PDB IDs and fold types, but it has been truncated. Let's retrieve the full response to analyze the data and count the number of lectins available.
CODE:
from utils import get_response

# Retrieve the full response to analyze the lectins data
full_response = get_response('response_2')
print("Full response length:", len(full_response))
# Display the first few entries for verification
print(full_response[:1000])
2025-06-16 18:01:36,809 - opendevin - INFO - **IPythonRunCellObservation**
Full response length: 75620
Full response for response_2:
{
  "status_code": 200,
  "text": "[[\"pdb\", \"fold\"], [\"1A3K\", \"b-sandwich / ConA-like\"], [\"1B08\", \"a/b mixed / C-type lectin-like\"], [\"1B09\", \"b-sandwich / ConA-like\"], [\"1BKZ\", \"b-sandwich / ConA-like\"], [\"1CRV\", \"b-sandwich / ConA-like\"], [\"1DV8\", \"a/b mixed / C-type lectin-like\"], [\"1EGG\", \"a/b mixed / C-type lectin-like\"], [\"1EGI\", \"a/b mixed / C-type lectin-like\"], [\"1ESL\", \"a/b mixed / C-type lectin-like\"], [\"1G1Q\", \"a/b mixed / C-type lectin-like\"], [\"1G1R\", \"a/b mixed / C-type lectin-like\"], [\"1G1S\", \"a/b mixed / C-type lectin-like\"], [\"1G1T\", \"a/b mixed / C-type lectin-like\"], [\"1G86\", \"b-sandwich / ConA-like\"], [\"1GNH\", \"b-sandwich / ConA-like\"], [\"1GZW\", \"b-sandwich / ConA-like\"], [\"1HDK\", \"b-sandwich / ConA-like\"], [\"1HJV\", \"a/b barrel / TIM\"], [\"1HJW\", \"a/b barrel / TIM\"], [\"1HJX\", \"a/b barrel / TIM\"], [\"1HLC\", \"b-sandwich / ConA-like\"], [\"1HTN\", \"a/b mi

2025-06-16 18:01:36,912 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 10
2025-06-16 18:01:41,867 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:41,867 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: The full response contains a list of lectins with their PDB IDs and fold types. Let's process this data to count the number of lectins and list their associated PDB IDs and fold types.

I'll extract and count the entries from the response.
CODE:
import json

# Load the full response as JSON
lectins_data = json.loads(full_response['text'])

# Extract the lectin entries (excluding the header)
lectin_entries = lectins_data[1:]

# Count the number of lectins
num_lectins = len(lectin_entries)

# Display the number of lectins and a sample of the entries
print(f"Number of lectins: {num_lectins}")
print("Sample entries:")
for entry in lectin_entries[:5]:
    print(f"PDB ID: {entry[0]}, Fold Type: {entry[1]}")
2025-06-16 18:01:42,616 - opendevin - INFO - **IPythonRunCellObservation**
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[1], line 4
      1 import json
      3 # Load the full response as JSON
----> 4 lectins_data = json.loads(full_response['text'])
      6 # Extract the lectin entries (excluding the header)
      7 lectin_entries = lectins_data[1:]

TypeError: string indices must be integers
2025-06-16 18:01:42,718 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 11
2025-06-16 18:01:46,884 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:46,885 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: It seems there was an error in processing the response. The response text is a string and needs to be parsed correctly. Let's correct this by directly parsing the JSON string from the response text.
CODE:
import json

# Correctly parse the JSON string from the response text
lectins_data = json.loads(full_response['text'])

# Extract the lectin entries (excluding the header)
lectin_entries = lectins_data[1:]

# Count the number of lectins
num_lectins = len(lectin_entries)

# Display the number of lectins and a sample of the entries
print(f"Number of lectins: {num_lectins}")
print("Sample entries:")
for entry in lectin_entries[:5]:
    print(f"PDB ID: {entry[0]}, Fold Type: {entry[1]}")
2025-06-16 18:01:47,501 - opendevin - INFO - **IPythonRunCellObservation**
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[1], line 4
      1 import json
      3 # Correctly parse the JSON string from the response text
----> 4 lectins_data = json.loads(full_response['text'])
      6 # Extract the lectin entries (excluding the header)
      7 lectin_entries = lectins_data[1:]

TypeError: string indices must be integers
2025-06-16 18:01:47,604 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 12
2025-06-16 18:01:51,229 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:51,229 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: It seems there was a mistake in accessing the response. Let's try accessing the response correctly and parse the JSON data.
CODE:
import json

# The response is stored as a string, so we need to parse it correctly
response_text = full_response['text']

# Parse the JSON string
lectins_data = json.loads(response_text)

# Extract the lectin entries (excluding the header)
lectin_entries = lectins_data[1:]

# Count the number of lectins
num_lectins = len(lectin_entries)

# Display the number of lectins and a sample of the entries
print(f"Number of lectins: {num_lectins}")
print("Sample entries:")
for entry in lectin_entries[:5]:
    print(f"PDB ID: {entry[0]}, Fold Type: {entry[1]}")
2025-06-16 18:01:51,871 - opendevin - INFO - **IPythonRunCellObservation**
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[1], line 4
      1 import json
      3 # The response is stored as a string, so we need to parse it correctly
----> 4 response_text = full_response['text']
      6 # Parse the JSON string
      7 lectins_data = json.loads(response_text)

TypeError: string indices must be integers
2025-06-16 18:01:51,973 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 13
2025-06-16 18:01:55,212 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:55,213 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: It seems there was a misunderstanding in accessing the response. Let's directly parse the response text without trying to access it as a dictionary.

I'll correct this and parse the JSON data directly from the response.
CODE:
import json

# Directly parse the JSON string from the full response
lectins_data = json.loads(full_response)

# Extract the lectin entries (excluding the header)
lectin_entries = lectins_data[1:]

# Count the number of lectins
num_lectins = len(lectin_entries)

# Display the number of lectins and a sample of the entries
print(f"Number of lectins: {num_lectins}")
print("Sample entries:")
for entry in lectin_entries[:5]:
    print(f"PDB ID: {entry[0]}, Fold Type: {entry[1]}")
2025-06-16 18:01:55,787 - opendevin - INFO - **IPythonRunCellObservation**
---------------------------------------------------------------------------
JSONDecodeError                           Traceback (most recent call last)
Cell In[1], line 4
      1 import json
      3 # Directly parse the JSON string from the full response
----> 4 lectins_data = json.loads(full_response)
      6 # Extract the lectin entries (excluding the header)
      7 lectin_entries = lectins_data[1:]

File /usr/lib/python3.10/json/__init__.py:346, in loads(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)
    341     s = s.decode(detect_encoding(s), 'surrogatepass')
    343 if (cls is None and object_hook is None and
    344         parse_int is None and parse_float is None and
    345         parse_constant is None and object_pairs_hook is None and not kw):
--> 346     return _default_decoder.decode(s)
    347 if cls is None:
    348     cls = JSONDecoder

File /usr/lib/python3.10/json/decoder.py:337, in JSONDecoder.decode(self, s, _w)
    332 def decode(self, s, _w=WHITESPACE.match):
    333     """Return the Python representation of ``s`` (a ``str`` instance
    334     containing a JSON document).
    335 
    336     """
--> 337     obj, end = self.raw_decode(s, idx=_w(s, 0).end())
    338     end = _w(s, end).end()
    339     if end != len(s):

File /usr/lib/python3.10/json/decoder.py:355, in JSONDecoder.raw_decode(self, s, idx)
    353     obj, end = self.scan_once(s, idx)
    354 except StopIteration as err:
--> 355     raise JSONDecodeError("Expecting value", s, err.value) from None
    356 return obj, end

JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2025-06-16 18:01:55,889 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 14
2025-06-16 18:01:57,524 - opendevin - INFO - Cost: 0.00 USD | Accumulated Cost: 0.00 USD
2025-06-16 18:01:57,525 - opendevin - INFO - **IPythonRunCellAction**
THOUGHT: It seems there was an error in parsing the response. Let's try to print the full response to understand its structure and then parse it correctly.

I'll print the full response to examine its content.
CODE:
# Print the full response to understand its structure
print(full_response)
2025-06-16 18:01:58,167 - opendevin - INFO - **IPythonRunCellObservation**
Full response for response_2:
{
  "status_code": 200,
  "text": "[[\"pdb\", \"fold\"], [\"1A3K\", \"b-sandwich / ConA-like\"], [\"1B08\", \"a/b mixed / C-type lectin-like\"], [\"1B09\", \"b-sandwich / ConA-like\"], [\"1BKZ\", \"b-sandwich / ConA-like\"], [\"1CRV\", \"b-sandwich / ConA-like\"], [\"1DV8\", \"a/b mixed / C-type lectin-like\"], [\"1EGG\", \"a/b mixed / C-type lectin-like\"], [\"1EGI\", \"a/b mixed / C-type lectin-like\"], [\"1ESL\", \"a/b mixed / C-type lectin-like\"], [\"1G1Q\", \"a/b mixed / C-type lectin-like\"], [\"1G1R\", \"a/b mixed / C-type lectin-like\"], [\"1G1S\", \"a/b mixed / C-type lectin-like\"], [\"1G1T\", \"a/b mixed / C-type lectin-like\"], [\"1G86\", \"b-sandwich / ConA-like\"], [\"1GNH\", \"b-sandwich / ConA-like\"], [\"1GZW\", \"b-sandwich / ConA-like\"], [\"1HDK\", \"b-sandwich / ConA-like\"], [\"1HJV\", \"a/b barrel / TIM\"], [\"1HJW\", \"a/b barrel / TIM\"], [\"1HJX\", \"a/b barrel / TIM\"], [\"1HLC\", \"b-sandwich / ConA-like\"], [\"1HTN\", \"a/b mixed / C-type lectin-like\"], [\"1HUP\", \"a/b mixed / C-type lectin-like\"], [\"1K9I\", \"a/b mixed / C-type lectin-like\"], [\"1K9J\", \"a/b mixed / C-type lectin-like\"], [\"1KJA\", \"a/b mixed / C-type lectin-like\"], [\"1KJB\", \"a/b mixed / C-type lectin-like\"], [\"1KJD\", \"a/b mixed / C-type lectin-like\"], [\"1KJL\", \"b-sandwich / ConA-like\"], [\"1KJR\", \"b-sandwich / ConA-like\"], [\"1LCL\", \"b-sandwich / ConA-like\"], [\"1LGN\", \"b-sandwich / ConA-like\"], [\"1NKO\", \"b-sandwich / Ig-like\"], [\"1NWR\", \"a/b barrel / TIM\"], [\"1NWS\", \"a/b barrel / TIM\"], [\"1NWT\", \"a/b barrel / TIM\"], [\"1NWU\", \"a/b barrel / TIM\"], [\"1O7S\", \"b-sandwich / Ig-like\"], [\"1O7V\", \"b-sandwich / Ig-like\"], [\"1PW9\", \"a/b mixed / C-type lectin-like\"], [\"1PWB\", \"a/b mixed / C-type lectin-like\"], [\"1QKQ\", \"b-sandwich / ConA-like\"], [\"1SAC\", \"b-sandwich / ConA-like\"], [\"1SL4\", \"a/b mixed / C-type lectin-like\"], [\"1SL5\", \"a/b mixed / C-type lectin-like\"], [\"1SL6\", \"a/b mixed / C-type lectin-like\"], [\"1TN3\", \"a/b mixed / C-type lectin-like\"], [\"1W6M\", \"b-sandwich / ConA-like\"], [\"1W6N\", \"b-sandwich / ConA-like\"], [\"1W6O\", \"b-sandwich / ConA-like\"], [\"1W6P\", \"b-sandwich / ConA-like\"], [\"1W6Q\", \"b-sandwich / ConA-like\"], [\"1X50\", \"b-sandwich / ConA-like\"], [\"1XAR\", \"a/b mixed / C-type lectin-like\"], [\"1XPH\", \"a/b mixed / C-type lectin-like\"], [\"2A3W\", \"b-sandwich / ConA-like\"], [\"2A3X\", \"b-sandwich / ConA-like\"], [\"2A3Y\", \"b-sandwich / ConA-like\"], [\"2B6B\", \"a/b mixed / C-type lectin-like\"], [\"2D39\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2DF3\", \"b-sandwich / Ig-like\"], [\"2EAK\", \"b-sandwich / ConA-like\"], [\"2EAL\", \"b-sandwich / ConA-like\"], [\"2G5R\", \"b-sandwich / Ig-like\"], [\"2GAL\", \"b-sandwich / ConA-like\"], [\"2GGU\", \"a/b mixed / C-type lectin-like\"], [\"2GGX\", \"a/b mixed / C-type lectin-like\"], [\"2HRL\", \"b-sandwich / Ig-like\"], [\"2IT5\", \"a/b mixed / C-type lectin-like\"], [\"2IT6\", \"a/b mixed / C-type lectin-like\"], [\"2J0G\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J0H\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J0Y\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J1G\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J2P\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J3F\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J3G\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J3O\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J3U\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J5Z\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J60\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J64\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J61\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHH\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHI\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHK\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHL\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHM\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2KM2\", \"b-sandwich / ConA-like\"], [\"2NMN\", \"b-sandwich / ConA-like\"], [\"2NMO\", \"b-sandwich / ConA-like\"], [\"2NN8\", \"b-sandwich / ConA-like\"], [\"2ORJ\", \"a/b mixed / C-type lectin-like\"], [\"2ORK\", \"a/b mixed / C-type lectin-like\"], [\"2OS9\", \"a/b mixed / C-type lectin-like\"], [\"2OX8\", \"a/b mixed / C-type lectin-like\"], [\"2RIA\", \"a/b mixed / C-type lectin-like\"], [\"2RIB\", \"a/b mixed / C-type lectin-like\"], [\"2RIC\", \"a/b mixed / C-type lectin-like\"], [\"2RID\", \"a/b mixed / C-type lectin-like\"], [\"2RIE\", \"a/b mixed / C-type lectin-like\"], [\"2WNP\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2XG3\", \"b-sandwich / ConA-like\"], [\"2YRO\", \"b-sandwich / ConA-like\"], [\"2YV8\", \"b-sandwich / ConA-like\"], [\"2YXS\", \"b-sandwich / ConA-like\"], [\"2YY1\", \"b-sandwich / ConA-like\"], [\"2ZG1\", \"b-sandwich / Ig-like\"], [\"2ZG2\", \"b-sandwich / Ig-like\"], [\"2ZG3\", \"b-sandwich / Ig-like\"], [\"2ZHK\", \"b-sandwich / ConA-like\"], [\"2ZHL\", \"b-sandwich / ConA-like\"], [\"2ZHM\", \"b-sandwich / ConA-like\"], [\"2ZHN\", \"b-sandwich / ConA-like\"], [\"2ZKN\", \"b-sandwich / ConA-like\"], [\"3AIH\", \"b-barrel\"], [\"3AP4\", \"b-sandwich / ConA-like\"], [\"3AP5\", \"b-sandwich / ConA-like\"], [\"3AP6\", \"b-sandwich / ConA-like\"], [\"3AP7\", \"b-sandwich / ConA-like\"], [\"3AP9\", \"b-sandwich / ConA-like\"], [\"3APB\", \"b-sandwich / ConA-like\"], [\"3AYA\", \"b-sandwich / ConA-like\"], [\"3AYD\", \"b-sandwich / ConA-like\"], [\"3AYE\", \"b-sandwich / ConA-like\"], [\"3C22\", \"a/b mixed / C-type lectin-like\"], [\"3CFW\", \"a/b mixed / C-type lectin-like\"], [\"3GAL\", \"b-sandwich / ConA-like\"], [\"3IKN\", \"a/b mixed / C-type lectin-like\"], [\"3IKP\", \"a/b mixed / C-type lectin-like\"], [\"3IKQ\", \"a/b mixed / C-type lectin-like\"], [\"3IKR\", \"a/b mixed / C-type lectin-like\"], [\"3KQG\", \"a/b mixed / C-type lectin-like\"], [\"3LSD\", \"b-sandwich / ConA-like\"], [\"3LSE\", \"b-sandwich / ConA-like\"], [\"3NV1\", \"b-sandwich / ConA-like\"], [\"3NV2\", \"b-sandwich / ConA-like\"], [\"3NV3\", \"b-sandwich / ConA-like\"], [\"3NV4\", \"b-sandwich / ConA-like\"], [\"3OJB\", \"b-sandwich / ConA-like\"], [\"3OY8\", \"b-sandwich / ConA-like\"], [\"3OYW\", \"b-sandwich / ConA-like\"], [\"3P5D\", \"a/b mixed / C-type lectin-like\"], [\"3P5E\", \"a/b mixed / C-type lectin-like\"], [\"3P5G\", \"a/b mixed / C-type lectin-like\"], [\"3P5H\", \"a/b mixed / C-type lectin-like\"], [\"3P5I\", \"a/b mixed / C-type lectin-like\"], [\"3P7F\", \"a/b mixed / C-type lectin-like\"], [\"3P7G\", \"a/b mixed / C-type lectin-like\"], [\"3P7H\", \"a/b mixed / C-type lectin-like\"], [\"3POW\", \"b-sandwich / ConA-like\"], [\"3T1L\", \"b-sandwich / ConA-like\"], [\"3T1M\", \"b-sandwich / ConA-like\"], [\"3T2T\", \"b-sandwich / ConA-like\"], [\"3VKL\", \"b-sandwich / ConA-like\"], [\"3VKM\", \"b-sandwich / ConA-like\"], [\"3VKN\", \"b-sandwich / ConA-like\"], [\"3VKO\", \"b-sandwich / ConA-like\"], [\"3ZSJ\", \"b-sandwich / ConA-like\"], [\"3ZSK\", \"b-sandwich / ConA-like\"], [\"3ZSL\", \"b-sandwich / ConA-like\"], [\"3ZSM\", \"b-sandwich / ConA-like\"], [\"3ZXE\", \"b-sandwich / ConA-like\"], [\"3ZXF\", \"b-sandwich / ConA-like\"], [\"4FQZ\", \"b-sandwich / ConA-like\"], [\"4GAL\", \"b-sandwich / ConA-like\"], [\"4GXL\", \"b-sandwich / ConA-like\"], [\"4HAN\", \"b-sandwich / ConA-like\"], [\"4JC1\", \"b-sandwich / ConA-like\"], [\"4JCK\", \"b-sandwich / ConA-like\"], [\"5GAL\", \"b-sandwich / ConA-like\"], [\"2XR5\", \"a/b mixed / C-type lectin-like\"], [\"2XR6\", \"a/b mixed / C-type lectin-like\"], [\"3WH2\", \"a/b mixed / C-type lectin-like\"], [\"3WH3\", \"a/b mixed / C-type lectin-like\"], [\"3WHD\", \"a/b mixed / C-type lectin-like\"], [\"4M17\", \"a/b mixed / C-type lectin-like\"], [\"4M18\", \"a/b mixed / C-type lectin-like\"], [\"4N32\", \"a/b mixed / C-type lectin-like\"], [\"4N33\", \"a/b mixed / C-type lectin-like\"], [\"4N34\", \"a/b mixed / C-type lectin-like\"], [\"4N35\", \"a/b mixed / C-type lectin-like\"], [\"4N36\", \"a/b mixed / C-type lectin-like\"], [\"4N37\", \"a/b mixed / C-type lectin-like\"], [\"4N38\", \"a/b mixed / C-type lectin-like\"], [\"4LBJ\", \"b-sandwich / ConA-like\"], [\"4LBK\", \"b-sandwich / ConA-like\"], [\"4LBL\", \"b-sandwich / ConA-like\"], [\"4LBM\", \"b-sandwich / ConA-like\"], [\"4LBN\", \"b-sandwich / ConA-like\"], [\"4LBO\", \"b-sandwich / ConA-like\"], [\"4UW3\", \"b-sandwich / ConA-like\"], [\"4UW4\", \"b-sandwich / ConA-like\"], [\"4UW5\", \"b-sandwich / ConA-like\"], [\"4UW6\", \"b-sandwich / ConA-like\"], [\"3VY7\", \"b-prism I\"], [\"3VZG\", \"b-prism I\"], [\"3VZF\", \"b-prism I\"], [\"3VZE\", \"b-prism I\"], [\"3VY6\", \"b-prism I\"], [\"4WMQ\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4WMY\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4CSY\", \"a/b mixed / C-type lectin-like\"], [\"4YMD\", \"a/b mixed / C-type lectin-like\"], [\"4YLI\", \"a/b mixed / C-type lectin-like\"], [\"3WLU\", \"b-sandwich / ConA-like\"], [\"4BMB\", \"b-sandwich / ConA-like\"], [\"4BME\", \"b-sandwich / ConA-like\"], [\"4R9A\", \"b-sandwich / ConA-like\"], [\"4R9B\", \"b-sandwich / ConA-like\"], [\"4R9C\", \"b-sandwich / ConA-like\"], [\"4R9D\", \"b-sandwich / ConA-like\"], [\"4RL7\", \"b-sandwich / ConA-like\"], [\"4XBL\", \"b-sandwich / ConA-like\"], [\"4XBN\", \"b-sandwich / ConA-like\"], [\"4XBQ\", \"b-sandwich / ConA-like\"], [\"4YLZ\", \"b-sandwich / ConA-like\"], [\"4YM0\", \"b-sandwich / ConA-like\"], [\"4YM1\", \"b-sandwich / ConA-like\"], [\"4YM2\", \"b-sandwich / ConA-like\"], [\"4YM3\", \"b-sandwich / ConA-like\"], [\"5E8A\", \"b-sandwich / ConA-like\"], [\"5E88\", \"b-sandwich / ConA-like\"], [\"5E89\", \"b-sandwich / ConA-like\"], [\"5EWS\", \"b-sandwich / ConA-like\"], [\"5DG1\", \"b-sandwich / ConA-like\"], [\"5DG2\", \"b-sandwich / ConA-like\"], [\"5EXO\", \"b-sandwich / ConA-like\"], [\"5GZC\", \"b-sandwich / ConA-like\"], [\"5GZD\", \"b-sandwich / ConA-like\"], [\"5GZE\", \"b-sandwich / ConA-like\"], [\"5GZF\", \"b-sandwich / ConA-like\"], [\"5GZG\", \"b-sandwich / ConA-like\"], [\"5DUX\", \"b-sandwich / ConA-like\"], [\"5DUW\", \"b-sandwich / ConA-like\"], [\"5DUV\", \"b-sandwich / ConA-like\"], [\"5DUU\", \"b-sandwich / ConA-like\"], [\"4XZP\", \"b-sandwich / ConA-like\"], [\"5CBL\", \"b-sandwich / ConA-like\"], [\"5H9P\", \"b-sandwich / ConA-like\"], [\"5H9Q\", \"b-sandwich / ConA-like\"], [\"5H9R\", \"b-sandwich / ConA-like\"], [\"5H9S\", \"b-sandwich / ConA-like\"], [\"4AK8\", \"a/b mixed / C-type lectin-like\"], [\"4E52\", \"a/b mixed / C-type lectin-like\"], [\"4MTH\", \"a/b mixed / C-type lectin-like\"], [\"4ZES\", \"a/b mixed / C-type lectin-like\"], [\"4ZET\", \"a/b mixed / C-type lectin-like\"], [\"5B1W\", \"a/b mixed / C-type lectin-like\"], [\"5B1X\", \"a/b mixed / C-type lectin-like\"], [\"5VYB\", \"a/b mixed / C-type lectin-like\"], [\"5JPV\", \"a/b mixed / C-type lectin-like\"], [\"5JQ1\", \"a/b mixed / C-type lectin-like\"], [\"5T7U\", \"b-sandwich / ConA-like\"], [\"5T7T\", \"b-sandwich / ConA-like\"], [\"5T7S\", \"b-sandwich / ConA-like\"], [\"5T7I\", \"b-sandwich / ConA-like\"], [\"5NFC\", \"b-sandwich / ConA-like\"], [\"5NFB\", \"b-sandwich / ConA-like\"], [\"5NFA\", \"b-sandwich / ConA-like\"], [\"5NF9\", \"b-sandwich / ConA-like\"], [\"5NF7\", \"b-sandwich / ConA-like\"], [\"5IUQ\", \"b-sandwich / ConA-like\"], [\"4Y26\", \"b-sandwich / ConA-like\"], [\"4Y24\", \"b-sandwich / ConA-like\"], [\"4Y22\", \"b-sandwich / ConA-like\"], [\"4Y20\", \"b-sandwich / ConA-like\"], [\"4Y1Z\", \"b-sandwich / ConA-like\"], [\"4Y1Y\", \"b-sandwich / ConA-like\"], [\"4Y1X\", \"b-sandwich / ConA-like\"], [\"4Y1V\", \"b-sandwich / ConA-like\"], [\"4Y1U\", \"b-sandwich / ConA-like\"], [\"4Q27\", \"b-sandwich / ConA-like\"], [\"4Q26\", \"b-sandwich / ConA-like\"], [\"4Q2F\", \"b-sandwich / ConA-like\"], [\"4Q1R\", \"b-sandwich / ConA-like\"], [\"4Q1P\", \"b-sandwich / ConA-like\"], [\"4BM8\", \"b-sandwich / ConA-like\"], [\"4BLJ\", \"b-sandwich / ConA-like\"], [\"4BLI\", \"b-sandwich / ConA-like\"], [\"3W59\", \"b-sandwich / ConA-like\"], [\"3W58\", \"b-sandwich / ConA-like\"], [\"5YT4\", \"b-sandwich / ConA-like\"], [\"5XRG\", \"b-sandwich / ConA-like\"], [\"5XRH\", \"b-sandwich / ConA-like\"], [\"5XRI\", \"b-sandwich / ConA-like\"], [\"5XRJ\", \"b-sandwich / ConA-like\"], [\"5XRK\", \"b-sandwich / ConA-like\"], [\"5XRL\", \"b-sandwich / ConA-like\"], [\"5XRM\", \"b-sandwich / ConA-like\"], [\"5XRN\", \"b-sandwich / ConA-like\"], [\"5XRO\", \"b-sandwich / ConA-like\"], [\"5XRP\", \"b-sandwich / ConA-like\"], [\"6FOF\", \"b-sandwich / ConA-like\"], [\"4M7F\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4M7H\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4R9J\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4R9T\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2N7A\", \"b-sandwich / Ig-like\"], [\"2N7B\", \"b-sandwich / Ig-like\"], [\"3WBP\", \"a/b mixed / C-type lectin-like\"], [\"3WBQ\", \"a/b mixed / C-type lectin-like\"], [\"3WBR\", \"a/b mixed / C-type lectin-like\"], [\"2YHF\", \"a/b mixed / C-type lectin-like\"], [\"5G6U\", \"a/b mixed / C-type lectin-like\"], [\"6FK2\", \"b-sandwich / ConA-like\"], [\"5J06\", \"b-sandwich / Ig-like\"], [\"5J0B\", \"b-sandwich / Ig-like\"], [\"3WUZ\", \"b-sandwich / Ig-like\"], [\"3WV0\", \"b-sandwich / Ig-like\"], [\"4NFB\", \"b-sandwich / Ig-like\"], [\"4NFC\", \"b-sandwich / Ig-like\"], [\"4NFD\", \"b-sandwich / Ig-like\"], [\"5XOF\", \"b-sandwich / Ig-like\"], [\"5XO2\", \"b-sandwich / Ig-like\"], [\"1GYK\", \"b-sandwich / ConA-like\"], [\"4P8V\", \"a/b barrel / TIM\"], [\"4P8X\", \"a/b barrel / TIM\"], [\"4GKX\", \"b-sandwich / ConA-like\"], [\"4GKY\", \"b-sandwich / ConA-like\"], [\"4YGB\", \"b-sandwich / ConA-like\"], [\"4YGC\", \"b-sandwich / ConA-like\"], [\"4YGD\", \"b-sandwich / ConA-like\"], [\"4YGE\", \"b-sandwich / ConA-like\"], [\"5MWT\", \"b-sandwich / ConA-like\"], [\"5MWX\", \"b-sandwich / ConA-like\"], [\"6B94\", \"b-sandwich / ConA-like\"], [\"6F83\", \"b-sandwich / ConA-like\"], [\"6A1S\", \"b-sandwich / ConA-like\"], [\"6A1T\", \"b-sandwich / ConA-like\"], [\"6A1U\", \"b-sandwich / ConA-like\"], [\"6A1V\", \"b-sandwich / ConA-like\"], [\"6A1X\", \"b-sandwich / ConA-like\"], [\"6A1Y\", \"b-sandwich / ConA-like\"], [\"5XG7\", \"b-sandwich / ConA-like\"], [\"5XG8\", \"b-sandwich / ConA-like\"], [\"5Y03\", \"b-sandwich / ConA-like\"], [\"6A62\", \"b-sandwich / ConA-like\"], [\"6A63\", \"b-sandwich / ConA-like\"], [\"6A64\", \"b-sandwich / ConA-like\"], [\"6A65\", \"b-sandwich / ConA-like\"], [\"6A66\", \"b-sandwich / ConA-like\"], [\"5OAX\", \"b-sandwich / ConA-like\"], [\"5ODY\", \"b-sandwich / ConA-like\"], [\"6B8K\", \"b-sandwich / ConA-like\"], [\"6F2Q\", \"b-sandwich / ConA-like\"], [\"6F6Y\", \"b-sandwich / ConA-like\"], [\"6I74\", \"b-sandwich / ConA-like\"], [\"6I75\", \"b-sandwich / ConA-like\"], [\"6I76\", \"b-sandwich / ConA-like\"], [\"6I77\", \"b-sandwich / ConA-like\"], [\"6I78\", \"b-sandwich / ConA-like\"], [\"6QGE\", \"b-sandwich / ConA-like\"], [\"6QGF\", \"b-sandwich / ConA-like\"], [\"5VWG\", \"b-sandwich / ConA-like\"], [\"6QLN\", \"b-sandwich / ConA-like\"], [\"6QLO\", \"b-sandwich / ConA-like\"], [\"6QLP\", \"b-sandwich / ConA-like\"], [\"6QLQ\", \"b-sandwich / ConA-like\"], [\"6QLR\", \"b-sandwich / ConA-like\"], [\"6QLS\", \"b-sandwich / ConA-like\"], [\"6QLT\", \"b-sandwich / ConA-like\"], [\"6QLU\", \"b-sandwich / ConA-like\"], [\"6RHM\", \"b-sandwich / ConA-like\"], [\"6RHL\", \"b-sandwich / ConA-like\"], [\"6V1C\", \"peptide\"], [\"6V1D\", \"peptide\"], [\"6USC\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6GHV\", \"a/b mixed / C-type lectin-like\"], [\"6KJX\", \"b-sandwich / ConA-like\"], [\"6KJY\", \"b-sandwich / ConA-like\"], [\"6KJW\", \"b-sandwich / ConA-like\"], [\"6QRN\", \"b-sandwich / ConA-like\"], [\"6GKQ\", \"b-sandwich / ConA-like\"], [\"6GKT\", \"b-sandwich / ConA-like\"], [\"6LJQ\", \"b-sandwich / ConA-like\"], [\"6LJP\", \"b-sandwich / ConA-like\"], [\"6LJR\", \"b-sandwich / ConA-like\"], [\"6KXA\", \"b-sandwich / ConA-like\"], [\"6KXB\", \"b-sandwich / ConA-like\"], [\"6K2Z\", \"b-sandwich / ConA-like\"], [\"6K2Y\", \"b-sandwich / ConA-like\"], [\"6Y4C\", \"b-sandwich / ConA-like\"], [\"6Q0Q\", \"b-sandwich / ConA-like\"], [\"6Q17\", \"b-sandwich / ConA-like\"], [\"6Z32\", \"b-barrel\"], [\"6Z30\", \"b-barrel\"], [\"6YAU\", \"a/b mixed / C-type lectin-like\"], [\"5IHB\", \"b-sandwich / Ig-like\"], [\"6D49\", \"b-sandwich / Ig-like\"], [\"6D4A\", \"b-sandwich / Ig-like\"], [\"6D48\", \"b-sandwich / Ig-like\"], [\"7AW6\", \"b-sandwich / Ig-like\"], [\"5VKM\", \"b-sandwich / Ig-like\"], [\"5VKJ\", \"b-sandwich / Ig-like\"], [\"7BE3\", \"b-sandwich / ConA-like\"], [\"2FFU\", \"b-trefoil\"], [\"2D7I\", \"b-trefoil\"], [\"2D7R\", \"b-trefoil\"], [\"2FFV\", \"b-trefoil\"], [\"5AJN\", \"b-trefoil\"], [\"5AJO\", \"b-trefoil\"], [\"5AJP\", \"b-trefoil\"], [\"5NQA\", \"b-trefoil\"], [\"6H0B\", \"b-trefoil\"], [\"6IWR\", \"b-trefoil\"], [\"6PXU\", \"b-trefoil\"], [\"6PUV\", \"a/b mixed / C-type lectin-like\"], [\"6PY1\", \"a/b mixed / C-type lectin-like\"], [\"6XIY\", \"a/b mixed / C-type lectin-like\"], [\"6W12\", \"a/b mixed / C-type lectin-like\"], [\"7JUB\", \"a/b mixed / C-type lectin-like\"], [\"7JUC\", \"a/b mixed / C-type lectin-like\"], [\"7JUD\", \"a/b mixed / C-type lectin-like\"], [\"7JUE\", \"a/b mixed / C-type lectin-like\"], [\"7JUF\", \"a/b mixed / C-type lectin-like\"], [\"7JUG\", \"a/b mixed / C-type lectin-like\"], [\"7JUH\", \"a/b mixed / C-type lectin-like\"], [\"7L61\", \"a/b mixed / C-type lectin-like\"], [\"7L62\", \"a/b mixed / C-type lectin-like\"], [\"7L63\", \"a/b mixed / C-type lectin-like\"], [\"7L64\", \"a/b mixed / C-type lectin-like\"], [\"7L65\", \"a/b mixed / C-type lectin-like\"], [\"7L66\", \"a/b mixed / C-type lectin-like\"], [\"7L67\", \"a/b mixed / C-type lectin-like\"], [\"7L68\", \"a/b mixed / C-type lectin-like\"], [\"3BXW\", \"a/b barrel / TIM\"], [\"3WHT\", \"b-sandwich / ConA-like\"], [\"3WHU\", \"b-sandwich / ConA-like\"], [\"3WNX\", \"b-sandwich / ConA-like\"], [\"5VC1\", \"a/b mixed / C-type lectin-like\"], [\"5OXR\", \"a/b mixed / C-type lectin-like\"], [\"5OXS\", \"a/b mixed / C-type lectin-like\"], [\"1HNF\", \"b-sandwich / Ig-like\"], [\"5MIX\", \"b-sandwich / Ig-like\"], [\"3OAI\", \"b-sandwich / Ig-like\"], [\"2WIM\", \"b-sandwich / Ig-like\"], [\"1IC1\", \"b-sandwich / Ig-like\"], [\"5AEA\", \"b-sandwich / Ig-like\"], [\"6QNV\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"5AFB\", \"b-sandwich / CUB-like\"], [\"7ZL1\", \"b-sandwich / ConA-like\"], [\"6YPE\", \"b-sandwich / ConA-like\"], [\"7NL7\", \"a/b mixed / C-type lectin-like\"], [\"7NL6\", \"a/b mixed / C-type lectin-like\"], [\"7QU6\", \"b-sandwich / Ig-like\"], [\"7QUI\", \"b-sandwich / Ig-like\"], [\"7RDP\", \"b-sandwich / ConA-like\"], [\"4IOP\", \"a/b mixed / C-type lectin-like\"], [\"5LK5\", \"b-sandwich / ConA-like\"], [\"5XTS\", \"b-trefoil\"], [\"5XTW\", \"b-trefoil\"], [\"6INN\", \"b-trefoil\"], [\"6INO\", \"b-trefoil\"], [\"6INU\", \"b-trefoil\"], [\"6INV\", \"b-trefoil\"], [\"6IOE\", \"b-trefoil\"], [\"5AO6\", \"a/b mixed / C-type lectin-like\"], [\"5AO5\", \"a/b mixed / C-type lectin-like\"], [\"1HI7\", \"peptide\"], [\"1E9T\", \"peptide\"], [\"1PE3\", \"peptide\"], [\"7ZOZ\", \"b-sandwich / Ig-like\"], [\"5MGR\", \"a/b mixed / C-type lectin-like\"], [\"2BRS\", \"a/b mixed / C-type lectin-like\"], [\"1H8U\", \"a/b mixed / C-type lectin-like\"], [\"2KV3\", \"a/b mixed / C-type lectin-like\"], [\"4QKH\", \"a/b mixed / C-type lectin-like\"], [\"3FF7\", \"a/b mixed / C-type lectin-like\"], [\"1MPU\", \"a/b mixed / C-type lectin-like\"], [\"7T4R\", \"a/b mixed / C-type lectin-like\"], [\"5XAU\", \"b-sandwich / ConA-like\"], [\"8S9P\", \"b-sandwich / ConA-like\"], [\"7ZC9\", \"b-sandwich / ConA-like\"], [\"3SH5\", \"b-sandwich / ConA-like\"], [\"3AQG\", \"b-prism I\"], [\"3APA\", \"b-prism I\"], [\"6ENY\", \"b-sandwich / ConA-like\"], [\"3POS\", \"b-sandwich / ConA-like\"], [\"2NAN\", \"a/b mixed / C-type lectin-like\"], [\"1FM5\", \"a/b mixed / C-type lectin-like\"], [\"8A59\", \"a/b mixed / C-type lectin-like\"], [\"3VPP\", \"a/b mixed / C-type lectin-like\"], [\"1T8C\", \"a/b mixed / C-type lectin-like\"], [\"3BDW\", \"a/b mixed / C-type lectin-like\"], [\"1B6E\", \"a/b mixed / C-type lectin-like\"], [\"1QDD\", \"a/b mixed / C-type lectin-like\"], [\"4JYO\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4JZC\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6Y41\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6EUA\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6EUB\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6Y43\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"1N86\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"1FZB\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"1FID\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"7TZ2\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"8FNA\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4YEP\", \"b-sandwich / ConA-like\"], [\"3L4T\", \"peptide\"], [\"7WZ8\", \"a/b mixed / C-type lectin-like\"], [\"6Y0M\", \"a/b mixed / C-type lectin-like\"], [\"6Y0L\", \"a/b mixed / C-type lectin-like\"], [\"7XAC\", \"b-sandwich / ConA-like\"], [\"7XBL\", \"b-sandwich / ConA-like\"], [\"7RDO\", \"b-sandwich / ConA-like\"], [\"7RH0\", \"b-sandwich / ConA-like\"], [\"7RH1\", \"b-sandwich / ConA-like\"], [\"7RH3\", \"b-sandwich / ConA-like\"], [\"7RH4\", \"b-sandwich / ConA-like\"], [\"7RGX\", \"b-sandwich / ConA-like\"], [\"7RGY\", \"b-sandwich / ConA-like\"], [\"7RGZ\", \"b-sandwich / ConA-like\"], [\"7ZQX\", \"b-sandwich / ConA-like\"], [\"7XFA\", \"b-sandwich / ConA-like\"], [\"8JPG\", \"b-sandwich / ConA-like\"]]",
  "json": [
    [
      "pdb",
      "fold"
    ],
    [
      "1A3K",
      "b-sandwich / ConA-like"
    ],
    [
      "1B08",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1B09",
      "b-sandwich / ConA-like"
    ],
    [
      "1BKZ",
      "b-sandwich / ConA-like"
    ],
    [
      "1CRV",
      "b-sandwich / ConA-like"
    ],
    [
      "1DV8",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1EGG",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1EGI",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1ESL",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1G1Q",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1G1R",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1G1S",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1G1T",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1G86",
      "b-sandwich / ConA-like"
    ],
    [
      "1GNH",
      "b-sandwich / ConA-like"
    ],
    [
      "1GZW",
      "b-sandwich / ConA-like"
    ],
    [
      "1HDK",
      "b-sandwich / ConA-like"
    ],
    [
      "1HJV",
      "a/b barrel / TIM"
    ],
    [
      "1HJW",
      "a/b barrel / TIM"
    ],
    [
      "1HJX",
      "a/b barrel / TIM"
    ],
    [
      "1HLC",
      "b-sandwich / ConA-like"
    ],
    [
      "1HTN",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1HUP",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1K9I",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1K9J",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1KJA",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1KJB",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1KJD",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1KJL",
      "b-sandwich / ConA-like"
    ],
    [
      "1KJR",
      "b-sandwich / ConA-like"
    ],
    [
      "1LCL",
      "b-sandwich / ConA-like"
    ],
    [
      "1LGN",
      "b-sandwich / ConA-like"
    ],
    [
      "1NKO",
      "b-sandwich / Ig-like"
    ],
    [
      "1NWR",
      "a/b barrel / TIM"
    ],
    [
      "1NWS",
      "a/b barrel / TIM"
    ],
    [
      "1NWT",
      "a/b barrel / TIM"
    ],
    [
      "1NWU",
      "a/b barrel / TIM"
    ],
    [
      "1O7S",
      "b-sandwich / Ig-like"
    ],
    [
      "1O7V",
      "b-sandwich / Ig-like"
    ],
    [
      "1PW9",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1PWB",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1QKQ",
      "b-sandwich / ConA-like"
    ],
    [
      "1SAC",
      "b-sandwich / ConA-like"
    ],
    [
      "1SL4",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1SL5",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1SL6",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1TN3",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1W6M",
      "b-sandwich / ConA-like"
    ],
    [
      "1W6N",
      "b-sandwich / ConA-like"
    ],
    [
      "1W6O",
      "b-sandwich / ConA-like"
    ],
    [
      "1W6P",
      "b-sandwich / ConA-like"
    ],
    [
      "1W6Q",
      "b-sandwich / ConA-like"
    ],
    [
      "1X50",
      "b-sandwich / ConA-like"
    ],
    [
      "1XAR",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1XPH",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2A3W",
      "b-sandwich / ConA-like"
    ],
    [
      "2A3X",
      "b-sandwich / ConA-like"
    ],
    [
      "2A3Y",
      "b-sandwich / ConA-like"
    ],
    [
      "2B6B",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2D39",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2DF3",
      "b-sandwich / Ig-like"
    ],
    [
      "2EAK",
      "b-sandwich / ConA-like"
    ],
    [
      "2EAL",
      "b-sandwich / ConA-like"
    ],
    [
      "2G5R",
      "b-sandwich / Ig-like"
    ],
    [
      "2GAL",
      "b-sandwich / ConA-like"
    ],
    [
      "2GGU",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2GGX",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2HRL",
      "b-sandwich / Ig-like"
    ],
    [
      "2IT5",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2IT6",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2J0G",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J0H",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J0Y",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J1G",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J2P",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J3F",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J3G",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J3O",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J3U",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J5Z",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J60",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J64",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2J61",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2JHH",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2JHI",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2JHK",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2JHL",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2JHM",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2KM2",
      "b-sandwich / ConA-like"
    ],
    [
      "2NMN",
      "b-sandwich / ConA-like"
    ],
    [
      "2NMO",
      "b-sandwich / ConA-like"
    ],
    [
      "2NN8",
      "b-sandwich / ConA-like"
    ],
    [
      "2ORJ",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2ORK",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2OS9",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2OX8",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2RIA",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2RIB",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2RIC",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2RID",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2RIE",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2WNP",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2XG3",
      "b-sandwich / ConA-like"
    ],
    [
      "2YRO",
      "b-sandwich / ConA-like"
    ],
    [
      "2YV8",
      "b-sandwich / ConA-like"
    ],
    [
      "2YXS",
      "b-sandwich / ConA-like"
    ],
    [
      "2YY1",
      "b-sandwich / ConA-like"
    ],
    [
      "2ZG1",
      "b-sandwich / Ig-like"
    ],
    [
      "2ZG2",
      "b-sandwich / Ig-like"
    ],
    [
      "2ZG3",
      "b-sandwich / Ig-like"
    ],
    [
      "2ZHK",
      "b-sandwich / ConA-like"
    ],
    [
      "2ZHL",
      "b-sandwich / ConA-like"
    ],
    [
      "2ZHM",
      "b-sandwich / ConA-like"
    ],
    [
      "2ZHN",
      "b-sandwich / ConA-like"
    ],
    [
      "2ZKN",
      "b-sandwich / ConA-like"
    ],
    [
      "3AIH",
      "b-barrel"
    ],
    [
      "3AP4",
      "b-sandwich / ConA-like"
    ],
    [
      "3AP5",
      "b-sandwich / ConA-like"
    ],
    [
      "3AP6",
      "b-sandwich / ConA-like"
    ],
    [
      "3AP7",
      "b-sandwich / ConA-like"
    ],
    [
      "3AP9",
      "b-sandwich / ConA-like"
    ],
    [
      "3APB",
      "b-sandwich / ConA-like"
    ],
    [
      "3AYA",
      "b-sandwich / ConA-like"
    ],
    [
      "3AYD",
      "b-sandwich / ConA-like"
    ],
    [
      "3AYE",
      "b-sandwich / ConA-like"
    ],
    [
      "3C22",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3CFW",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3GAL",
      "b-sandwich / ConA-like"
    ],
    [
      "3IKN",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3IKP",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3IKQ",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3IKR",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3KQG",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3LSD",
      "b-sandwich / ConA-like"
    ],
    [
      "3LSE",
      "b-sandwich / ConA-like"
    ],
    [
      "3NV1",
      "b-sandwich / ConA-like"
    ],
    [
      "3NV2",
      "b-sandwich / ConA-like"
    ],
    [
      "3NV3",
      "b-sandwich / ConA-like"
    ],
    [
      "3NV4",
      "b-sandwich / ConA-like"
    ],
    [
      "3OJB",
      "b-sandwich / ConA-like"
    ],
    [
      "3OY8",
      "b-sandwich / ConA-like"
    ],
    [
      "3OYW",
      "b-sandwich / ConA-like"
    ],
    [
      "3P5D",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3P5E",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3P5G",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3P5H",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3P5I",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3P7F",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3P7G",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3P7H",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3POW",
      "b-sandwich / ConA-like"
    ],
    [
      "3T1L",
      "b-sandwich / ConA-like"
    ],
    [
      "3T1M",
      "b-sandwich / ConA-like"
    ],
    [
      "3T2T",
      "b-sandwich / ConA-like"
    ],
    [
      "3VKL",
      "b-sandwich / ConA-like"
    ],
    [
      "3VKM",
      "b-sandwich / ConA-like"
    ],
    [
      "3VKN",
      "b-sandwich / ConA-like"
    ],
    [
      "3VKO",
      "b-sandwich / ConA-like"
    ],
    [
      "3ZSJ",
      "b-sandwich / ConA-like"
    ],
    [
      "3ZSK",
      "b-sandwich / ConA-like"
    ],
    [
      "3ZSL",
      "b-sandwich / ConA-like"
    ],
    [
      "3ZSM",
      "b-sandwich / ConA-like"
    ],
    [
      "3ZXE",
      "b-sandwich / ConA-like"
    ],
    [
      "3ZXF",
      "b-sandwich / ConA-like"
    ],
    [
      "4FQZ",
      "b-sandwich / ConA-like"
    ],
    [
      "4GAL",
      "b-sandwich / ConA-like"
    ],
    [
      "4GXL",
      "b-sandwich / ConA-like"
    ],
    [
      "4HAN",
      "b-sandwich / ConA-like"
    ],
    [
      "4JC1",
      "b-sandwich / ConA-like"
    ],
    [
      "4JCK",
      "b-sandwich / ConA-like"
    ],
    [
      "5GAL",
      "b-sandwich / ConA-like"
    ],
    [
      "2XR5",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2XR6",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3WH2",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3WH3",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3WHD",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4M17",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4M18",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4N32",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4N33",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4N34",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4N35",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4N36",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4N37",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4N38",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4LBJ",
      "b-sandwich / ConA-like"
    ],
    [
      "4LBK",
      "b-sandwich / ConA-like"
    ],
    [
      "4LBL",
      "b-sandwich / ConA-like"
    ],
    [
      "4LBM",
      "b-sandwich / ConA-like"
    ],
    [
      "4LBN",
      "b-sandwich / ConA-like"
    ],
    [
      "4LBO",
      "b-sandwich / ConA-like"
    ],
    [
      "4UW3",
      "b-sandwich / ConA-like"
    ],
    [
      "4UW4",
      "b-sandwich / ConA-like"
    ],
    [
      "4UW5",
      "b-sandwich / ConA-like"
    ],
    [
      "4UW6",
      "b-sandwich / ConA-like"
    ],
    [
      "3VY7",
      "b-prism I"
    ],
    [
      "3VZG",
      "b-prism I"
    ],
    [
      "3VZF",
      "b-prism I"
    ],
    [
      "3VZE",
      "b-prism I"
    ],
    [
      "3VY6",
      "b-prism I"
    ],
    [
      "4WMQ",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "4WMY",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "4CSY",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4YMD",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4YLI",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3WLU",
      "b-sandwich / ConA-like"
    ],
    [
      "4BMB",
      "b-sandwich / ConA-like"
    ],
    [
      "4BME",
      "b-sandwich / ConA-like"
    ],
    [
      "4R9A",
      "b-sandwich / ConA-like"
    ],
    [
      "4R9B",
      "b-sandwich / ConA-like"
    ],
    [
      "4R9C",
      "b-sandwich / ConA-like"
    ],
    [
      "4R9D",
      "b-sandwich / ConA-like"
    ],
    [
      "4RL7",
      "b-sandwich / ConA-like"
    ],
    [
      "4XBL",
      "b-sandwich / ConA-like"
    ],
    [
      "4XBN",
      "b-sandwich / ConA-like"
    ],
    [
      "4XBQ",
      "b-sandwich / ConA-like"
    ],
    [
      "4YLZ",
      "b-sandwich / ConA-like"
    ],
    [
      "4YM0",
      "b-sandwich / ConA-like"
    ],
    [
      "4YM1",
      "b-sandwich / ConA-like"
    ],
    [
      "4YM2",
      "b-sandwich / ConA-like"
    ],
    [
      "4YM3",
      "b-sandwich / ConA-like"
    ],
    [
      "5E8A",
      "b-sandwich / ConA-like"
    ],
    [
      "5E88",
      "b-sandwich / ConA-like"
    ],
    [
      "5E89",
      "b-sandwich / ConA-like"
    ],
    [
      "5EWS",
      "b-sandwich / ConA-like"
    ],
    [
      "5DG1",
      "b-sandwich / ConA-like"
    ],
    [
      "5DG2",
      "b-sandwich / ConA-like"
    ],
    [
      "5EXO",
      "b-sandwich / ConA-like"
    ],
    [
      "5GZC",
      "b-sandwich / ConA-like"
    ],
    [
      "5GZD",
      "b-sandwich / ConA-like"
    ],
    [
      "5GZE",
      "b-sandwich / ConA-like"
    ],
    [
      "5GZF",
      "b-sandwich / ConA-like"
    ],
    [
      "5GZG",
      "b-sandwich / ConA-like"
    ],
    [
      "5DUX",
      "b-sandwich / ConA-like"
    ],
    [
      "5DUW",
      "b-sandwich / ConA-like"
    ],
    [
      "5DUV",
      "b-sandwich / ConA-like"
    ],
    [
      "5DUU",
      "b-sandwich / ConA-like"
    ],
    [
      "4XZP",
      "b-sandwich / ConA-like"
    ],
    [
      "5CBL",
      "b-sandwich / ConA-like"
    ],
    [
      "5H9P",
      "b-sandwich / ConA-like"
    ],
    [
      "5H9Q",
      "b-sandwich / ConA-like"
    ],
    [
      "5H9R",
      "b-sandwich / ConA-like"
    ],
    [
      "5H9S",
      "b-sandwich / ConA-like"
    ],
    [
      "4AK8",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4E52",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4MTH",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4ZES",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4ZET",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5B1W",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5B1X",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5VYB",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5JPV",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5JQ1",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5T7U",
      "b-sandwich / ConA-like"
    ],
    [
      "5T7T",
      "b-sandwich / ConA-like"
    ],
    [
      "5T7S",
      "b-sandwich / ConA-like"
    ],
    [
      "5T7I",
      "b-sandwich / ConA-like"
    ],
    [
      "5NFC",
      "b-sandwich / ConA-like"
    ],
    [
      "5NFB",
      "b-sandwich / ConA-like"
    ],
    [
      "5NFA",
      "b-sandwich / ConA-like"
    ],
    [
      "5NF9",
      "b-sandwich / ConA-like"
    ],
    [
      "5NF7",
      "b-sandwich / ConA-like"
    ],
    [
      "5IUQ",
      "b-sandwich / ConA-like"
    ],
    [
      "4Y26",
      "b-sandwich / ConA-like"
    ],
    [
      "4Y24",
      "b-sandwich / ConA-like"
    ],
    [
      "4Y22",
      "b-sandwich / ConA-like"
    ],
    [
      "4Y20",
      "b-sandwich / ConA-like"
    ],
    [
      "4Y1Z",
      "b-sandwich / ConA-like"
    ],
    [
      "4Y1Y",
      "b-sandwich / ConA-like"
    ],
    [
      "4Y1X",
      "b-sandwich / ConA-like"
    ],
    [
      "4Y1V",
      "b-sandwich / ConA-like"
    ],
    [
      "4Y1U",
      "b-sandwich / ConA-like"
    ],
    [
      "4Q27",
      "b-sandwich / ConA-like"
    ],
    [
      "4Q26",
      "b-sandwich / ConA-like"
    ],
    [
      "4Q2F",
      "b-sandwich / ConA-like"
    ],
    [
      "4Q1R",
      "b-sandwich / ConA-like"
    ],
    [
      "4Q1P",
      "b-sandwich / ConA-like"
    ],
    [
      "4BM8",
      "b-sandwich / ConA-like"
    ],
    [
      "4BLJ",
      "b-sandwich / ConA-like"
    ],
    [
      "4BLI",
      "b-sandwich / ConA-like"
    ],
    [
      "3W59",
      "b-sandwich / ConA-like"
    ],
    [
      "3W58",
      "b-sandwich / ConA-like"
    ],
    [
      "5YT4",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRG",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRH",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRI",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRJ",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRK",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRL",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRM",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRN",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRO",
      "b-sandwich / ConA-like"
    ],
    [
      "5XRP",
      "b-sandwich / ConA-like"
    ],
    [
      "6FOF",
      "b-sandwich / ConA-like"
    ],
    [
      "4M7F",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "4M7H",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "4R9J",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "4R9T",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "2N7A",
      "b-sandwich / Ig-like"
    ],
    [
      "2N7B",
      "b-sandwich / Ig-like"
    ],
    [
      "3WBP",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3WBQ",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3WBR",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2YHF",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5G6U",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "6FK2",
      "b-sandwich / ConA-like"
    ],
    [
      "5J06",
      "b-sandwich / Ig-like"
    ],
    [
      "5J0B",
      "b-sandwich / Ig-like"
    ],
    [
      "3WUZ",
      "b-sandwich / Ig-like"
    ],
    [
      "3WV0",
      "b-sandwich / Ig-like"
    ],
    [
      "4NFB",
      "b-sandwich / Ig-like"
    ],
    [
      "4NFC",
      "b-sandwich / Ig-like"
    ],
    [
      "4NFD",
      "b-sandwich / Ig-like"
    ],
    [
      "5XOF",
      "b-sandwich / Ig-like"
    ],
    [
      "5XO2",
      "b-sandwich / Ig-like"
    ],
    [
      "1GYK",
      "b-sandwich / ConA-like"
    ],
    [
      "4P8V",
      "a/b barrel / TIM"
    ],
    [
      "4P8X",
      "a/b barrel / TIM"
    ],
    [
      "4GKX",
      "b-sandwich / ConA-like"
    ],
    [
      "4GKY",
      "b-sandwich / ConA-like"
    ],
    [
      "4YGB",
      "b-sandwich / ConA-like"
    ],
    [
      "4YGC",
      "b-sandwich / ConA-like"
    ],
    [
      "4YGD",
      "b-sandwich / ConA-like"
    ],
    [
      "4YGE",
      "b-sandwich / ConA-like"
    ],
    [
      "5MWT",
      "b-sandwich / ConA-like"
    ],
    [
      "5MWX",
      "b-sandwich / ConA-like"
    ],
    [
      "6B94",
      "b-sandwich / ConA-like"
    ],
    [
      "6F83",
      "b-sandwich / ConA-like"
    ],
    [
      "6A1S",
      "b-sandwich / ConA-like"
    ],
    [
      "6A1T",
      "b-sandwich / ConA-like"
    ],
    [
      "6A1U",
      "b-sandwich / ConA-like"
    ],
    [
      "6A1V",
      "b-sandwich / ConA-like"
    ],
    [
      "6A1X",
      "b-sandwich / ConA-like"
    ],
    [
      "6A1Y",
      "b-sandwich / ConA-like"
    ],
    [
      "5XG7",
      "b-sandwich / ConA-like"
    ],
    [
      "5XG8",
      "b-sandwich / ConA-like"
    ],
    [
      "5Y03",
      "b-sandwich / ConA-like"
    ],
    [
      "6A62",
      "b-sandwich / ConA-like"
    ],
    [
      "6A63",
      "b-sandwich / ConA-like"
    ],
    [
      "6A64",
      "b-sandwich / ConA-like"
    ],
    [
      "6A65",
      "b-sandwich / ConA-like"
    ],
    [
      "6A66",
      "b-sandwich / ConA-like"
    ],
    [
      "5OAX",
      "b-sandwich / ConA-like"
    ],
    [
      "5ODY",
      "b-sandwich / ConA-like"
    ],
    [
      "6B8K",
      "b-sandwich / ConA-like"
    ],
    [
      "6F2Q",
      "b-sandwich / ConA-like"
    ],
    [
      "6F6Y",
      "b-sandwich / ConA-like"
    ],
    [
      "6I74",
      "b-sandwich / ConA-like"
    ],
    [
      "6I75",
      "b-sandwich / ConA-like"
    ],
    [
      "6I76",
      "b-sandwich / ConA-like"
    ],
    [
      "6I77",
      "b-sandwich / ConA-like"
    ],
    [
      "6I78",
      "b-sandwich / ConA-like"
    ],
    [
      "6QGE",
      "b-sandwich / ConA-like"
    ],
    [
      "6QGF",
      "b-sandwich / ConA-like"
    ],
    [
      "5VWG",
      "b-sandwich / ConA-like"
    ],
    [
      "6QLN",
      "b-sandwich / ConA-like"
    ],
    [
      "6QLO",
      "b-sandwich / ConA-like"
    ],
    [
      "6QLP",
      "b-sandwich / ConA-like"
    ],
    [
      "6QLQ",
      "b-sandwich / ConA-like"
    ],
    [
      "6QLR",
      "b-sandwich / ConA-like"
    ],
    [
      "6QLS",
      "b-sandwich / ConA-like"
    ],
    [
      "6QLT",
      "b-sandwich / ConA-like"
    ],
    [
      "6QLU",
      "b-sandwich / ConA-like"
    ],
    [
      "6RHM",
      "b-sandwich / ConA-like"
    ],
    [
      "6RHL",
      "b-sandwich / ConA-like"
    ],
    [
      "6V1C",
      "peptide"
    ],
    [
      "6V1D",
      "peptide"
    ],
    [
      "6USC",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "6GHV",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "6KJX",
      "b-sandwich / ConA-like"
    ],
    [
      "6KJY",
      "b-sandwich / ConA-like"
    ],
    [
      "6KJW",
      "b-sandwich / ConA-like"
    ],
    [
      "6QRN",
      "b-sandwich / ConA-like"
    ],
    [
      "6GKQ",
      "b-sandwich / ConA-like"
    ],
    [
      "6GKT",
      "b-sandwich / ConA-like"
    ],
    [
      "6LJQ",
      "b-sandwich / ConA-like"
    ],
    [
      "6LJP",
      "b-sandwich / ConA-like"
    ],
    [
      "6LJR",
      "b-sandwich / ConA-like"
    ],
    [
      "6KXA",
      "b-sandwich / ConA-like"
    ],
    [
      "6KXB",
      "b-sandwich / ConA-like"
    ],
    [
      "6K2Z",
      "b-sandwich / ConA-like"
    ],
    [
      "6K2Y",
      "b-sandwich / ConA-like"
    ],
    [
      "6Y4C",
      "b-sandwich / ConA-like"
    ],
    [
      "6Q0Q",
      "b-sandwich / ConA-like"
    ],
    [
      "6Q17",
      "b-sandwich / ConA-like"
    ],
    [
      "6Z32",
      "b-barrel"
    ],
    [
      "6Z30",
      "b-barrel"
    ],
    [
      "6YAU",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5IHB",
      "b-sandwich / Ig-like"
    ],
    [
      "6D49",
      "b-sandwich / Ig-like"
    ],
    [
      "6D4A",
      "b-sandwich / Ig-like"
    ],
    [
      "6D48",
      "b-sandwich / Ig-like"
    ],
    [
      "7AW6",
      "b-sandwich / Ig-like"
    ],
    [
      "5VKM",
      "b-sandwich / Ig-like"
    ],
    [
      "5VKJ",
      "b-sandwich / Ig-like"
    ],
    [
      "7BE3",
      "b-sandwich / ConA-like"
    ],
    [
      "2FFU",
      "b-trefoil"
    ],
    [
      "2D7I",
      "b-trefoil"
    ],
    [
      "2D7R",
      "b-trefoil"
    ],
    [
      "2FFV",
      "b-trefoil"
    ],
    [
      "5AJN",
      "b-trefoil"
    ],
    [
      "5AJO",
      "b-trefoil"
    ],
    [
      "5AJP",
      "b-trefoil"
    ],
    [
      "5NQA",
      "b-trefoil"
    ],
    [
      "6H0B",
      "b-trefoil"
    ],
    [
      "6IWR",
      "b-trefoil"
    ],
    [
      "6PXU",
      "b-trefoil"
    ],
    [
      "6PUV",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "6PY1",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "6XIY",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "6W12",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7JUB",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7JUC",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7JUD",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7JUE",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7JUF",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7JUG",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7JUH",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7L61",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7L62",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7L63",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7L64",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7L65",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7L66",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7L67",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7L68",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3BXW",
      "a/b barrel / TIM"
    ],
    [
      "3WHT",
      "b-sandwich / ConA-like"
    ],
    [
      "3WHU",
      "b-sandwich / ConA-like"
    ],
    [
      "3WNX",
      "b-sandwich / ConA-like"
    ],
    [
      "5VC1",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5OXR",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5OXS",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1HNF",
      "b-sandwich / Ig-like"
    ],
    [
      "5MIX",
      "b-sandwich / Ig-like"
    ],
    [
      "3OAI",
      "b-sandwich / Ig-like"
    ],
    [
      "2WIM",
      "b-sandwich / Ig-like"
    ],
    [
      "1IC1",
      "b-sandwich / Ig-like"
    ],
    [
      "5AEA",
      "b-sandwich / Ig-like"
    ],
    [
      "6QNV",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "5AFB",
      "b-sandwich / CUB-like"
    ],
    [
      "7ZL1",
      "b-sandwich / ConA-like"
    ],
    [
      "6YPE",
      "b-sandwich / ConA-like"
    ],
    [
      "7NL7",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7NL6",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7QU6",
      "b-sandwich / Ig-like"
    ],
    [
      "7QUI",
      "b-sandwich / Ig-like"
    ],
    [
      "7RDP",
      "b-sandwich / ConA-like"
    ],
    [
      "4IOP",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5LK5",
      "b-sandwich / ConA-like"
    ],
    [
      "5XTS",
      "b-trefoil"
    ],
    [
      "5XTW",
      "b-trefoil"
    ],
    [
      "6INN",
      "b-trefoil"
    ],
    [
      "6INO",
      "b-trefoil"
    ],
    [
      "6INU",
      "b-trefoil"
    ],
    [
      "6INV",
      "b-trefoil"
    ],
    [
      "6IOE",
      "b-trefoil"
    ],
    [
      "5AO6",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5AO5",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1HI7",
      "peptide"
    ],
    [
      "1E9T",
      "peptide"
    ],
    [
      "1PE3",
      "peptide"
    ],
    [
      "7ZOZ",
      "b-sandwich / Ig-like"
    ],
    [
      "5MGR",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2BRS",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1H8U",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "2KV3",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4QKH",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3FF7",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1MPU",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7T4R",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "5XAU",
      "b-sandwich / ConA-like"
    ],
    [
      "8S9P",
      "b-sandwich / ConA-like"
    ],
    [
      "7ZC9",
      "b-sandwich / ConA-like"
    ],
    [
      "3SH5",
      "b-sandwich / ConA-like"
    ],
    [
      "3AQG",
      "b-prism I"
    ],
    [
      "3APA",
      "b-prism I"
    ],
    [
      "6ENY",
      "b-sandwich / ConA-like"
    ],
    [
      "3POS",
      "b-sandwich / ConA-like"
    ],
    [
      "2NAN",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1FM5",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "8A59",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3VPP",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1T8C",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "3BDW",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1B6E",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "1QDD",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "4JYO",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "4JZC",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "6Y41",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "6EUA",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "6EUB",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "6Y43",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "1N86",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "1FZB",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "1FID",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "7TZ2",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "8FNA",
      "a/b mixed with b-sheet / Fibrinogen C-ter like"
    ],
    [
      "4YEP",
      "b-sandwich / ConA-like"
    ],
    [
      "3L4T",
      "peptide"
    ],
    [
      "7WZ8",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "6Y0M",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "6Y0L",
      "a/b mixed / C-type lectin-like"
    ],
    [
      "7XAC",
      "b-sandwich / ConA-like"
    ],
    [
      "7XBL",
      "b-sandwich / ConA-like"
    ],
    [
      "7RDO",
      "b-sandwich / ConA-like"
    ],
    [
      "7RH0",
      "b-sandwich / ConA-like"
    ],
    [
      "7RH1",
      "b-sandwich / ConA-like"
    ],
    [
      "7RH3",
      "b-sandwich / ConA-like"
    ],
    [
      "7RH4",
      "b-sandwich / ConA-like"
    ],
    [
      "7RGX",
      "b-sandwich / ConA-like"
    ],
    [
      "7RGY",
      "b-sandwich / ConA-like"
    ],
    [
      "7RGZ",
      "b-sandwich / ConA-like"
    ],
    [
      "7ZQX",
      "b-sandwich / ConA-like"
    ],
    [
      "7XFA",
      "b-sandwich / ConA-like"
    ],
    [
      "8JPG",
      "b-sandwich / ConA-like"
    ]
  ],
  "content": "[[\"pdb\", \"fold\"], [\"1A3K\", \"b-sandwich / ConA-like\"], [\"1B08\", \"a/b mixed / C-type lectin-like\"], [\"1B09\", \"b-sandwich / ConA-like\"], [\"1BKZ\", \"b-sandwich / ConA-like\"], [\"1CRV\", \"b-sandwich / ConA-like\"], [\"1DV8\", \"a/b mixed / C-type lectin-like\"], [\"1EGG\", \"a/b mixed / C-type lectin-like\"], [\"1EGI\", \"a/b mixed / C-type lectin-like\"], [\"1ESL\", \"a/b mixed / C-type lectin-like\"], [\"1G1Q\", \"a/b mixed / C-type lectin-like\"], [\"1G1R\", \"a/b mixed / C-type lectin-like\"], [\"1G1S\", \"a/b mixed / C-type lectin-like\"], [\"1G1T\", \"a/b mixed / C-type lectin-like\"], [\"1G86\", \"b-sandwich / ConA-like\"], [\"1GNH\", \"b-sandwich / ConA-like\"], [\"1GZW\", \"b-sandwich / ConA-like\"], [\"1HDK\", \"b-sandwich / ConA-like\"], [\"1HJV\", \"a/b barrel / TIM\"], [\"1HJW\", \"a/b barrel / TIM\"], [\"1HJX\", \"a/b barrel / TIM\"], [\"1HLC\", \"b-sandwich / ConA-like\"], [\"1HTN\", \"a/b mixed / C-type lectin-like\"], [\"1HUP\", \"a/b mixed / C-type lectin-like\"], [\"1K9I\", \"a/b mixed / C-type lectin-like\"], [\"1K9J\", \"a/b mixed / C-type lectin-like\"], [\"1KJA\", \"a/b mixed / C-type lectin-like\"], [\"1KJB\", \"a/b mixed / C-type lectin-like\"], [\"1KJD\", \"a/b mixed / C-type lectin-like\"], [\"1KJL\", \"b-sandwich / ConA-like\"], [\"1KJR\", \"b-sandwich / ConA-like\"], [\"1LCL\", \"b-sandwich / ConA-like\"], [\"1LGN\", \"b-sandwich / ConA-like\"], [\"1NKO\", \"b-sandwich / Ig-like\"], [\"1NWR\", \"a/b barrel / TIM\"], [\"1NWS\", \"a/b barrel / TIM\"], [\"1NWT\", \"a/b barrel / TIM\"], [\"1NWU\", \"a/b barrel / TIM\"], [\"1O7S\", \"b-sandwich / Ig-like\"], [\"1O7V\", \"b-sandwich / Ig-like\"], [\"1PW9\", \"a/b mixed / C-type lectin-like\"], [\"1PWB\", \"a/b mixed / C-type lectin-like\"], [\"1QKQ\", \"b-sandwich / ConA-like\"], [\"1SAC\", \"b-sandwich / ConA-like\"], [\"1SL4\", \"a/b mixed / C-type lectin-like\"], [\"1SL5\", \"a/b mixed / C-type lectin-like\"], [\"1SL6\", \"a/b mixed / C-type lectin-like\"], [\"1TN3\", \"a/b mixed / C-type lectin-like\"], [\"1W6M\", \"b-sandwich / ConA-like\"], [\"1W6N\", \"b-sandwich / ConA-like\"], [\"1W6O\", \"b-sandwich / ConA-like\"], [\"1W6P\", \"b-sandwich / ConA-like\"], [\"1W6Q\", \"b-sandwich / ConA-like\"], [\"1X50\", \"b-sandwich / ConA-like\"], [\"1XAR\", \"a/b mixed / C-type lectin-like\"], [\"1XPH\", \"a/b mixed / C-type lectin-like\"], [\"2A3W\", \"b-sandwich / ConA-like\"], [\"2A3X\", \"b-sandwich / ConA-like\"], [\"2A3Y\", \"b-sandwich / ConA-like\"], [\"2B6B\", \"a/b mixed / C-type lectin-like\"], [\"2D39\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2DF3\", \"b-sandwich / Ig-like\"], [\"2EAK\", \"b-sandwich / ConA-like\"], [\"2EAL\", \"b-sandwich / ConA-like\"], [\"2G5R\", \"b-sandwich / Ig-like\"], [\"2GAL\", \"b-sandwich / ConA-like\"], [\"2GGU\", \"a/b mixed / C-type lectin-like\"], [\"2GGX\", \"a/b mixed / C-type lectin-like\"], [\"2HRL\", \"b-sandwich / Ig-like\"], [\"2IT5\", \"a/b mixed / C-type lectin-like\"], [\"2IT6\", \"a/b mixed / C-type lectin-like\"], [\"2J0G\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J0H\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J0Y\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J1G\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J2P\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J3F\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J3G\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J3O\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J3U\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J5Z\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J60\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J64\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2J61\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHH\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHI\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHK\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHL\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2JHM\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2KM2\", \"b-sandwich / ConA-like\"], [\"2NMN\", \"b-sandwich / ConA-like\"], [\"2NMO\", \"b-sandwich / ConA-like\"], [\"2NN8\", \"b-sandwich / ConA-like\"], [\"2ORJ\", \"a/b mixed / C-type lectin-like\"], [\"2ORK\", \"a/b mixed / C-type lectin-like\"], [\"2OS9\", \"a/b mixed / C-type lectin-like\"], [\"2OX8\", \"a/b mixed / C-type lectin-like\"], [\"2RIA\", \"a/b mixed / C-type lectin-like\"], [\"2RIB\", \"a/b mixed / C-type lectin-like\"], [\"2RIC\", \"a/b mixed / C-type lectin-like\"], [\"2RID\", \"a/b mixed / C-type lectin-like\"], [\"2RIE\", \"a/b mixed / C-type lectin-like\"], [\"2WNP\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2XG3\", \"b-sandwich / ConA-like\"], [\"2YRO\", \"b-sandwich / ConA-like\"], [\"2YV8\", \"b-sandwich / ConA-like\"], [\"2YXS\", \"b-sandwich / ConA-like\"], [\"2YY1\", \"b-sandwich / ConA-like\"], [\"2ZG1\", \"b-sandwich / Ig-like\"], [\"2ZG2\", \"b-sandwich / Ig-like\"], [\"2ZG3\", \"b-sandwich / Ig-like\"], [\"2ZHK\", \"b-sandwich / ConA-like\"], [\"2ZHL\", \"b-sandwich / ConA-like\"], [\"2ZHM\", \"b-sandwich / ConA-like\"], [\"2ZHN\", \"b-sandwich / ConA-like\"], [\"2ZKN\", \"b-sandwich / ConA-like\"], [\"3AIH\", \"b-barrel\"], [\"3AP4\", \"b-sandwich / ConA-like\"], [\"3AP5\", \"b-sandwich / ConA-like\"], [\"3AP6\", \"b-sandwich / ConA-like\"], [\"3AP7\", \"b-sandwich / ConA-like\"], [\"3AP9\", \"b-sandwich / ConA-like\"], [\"3APB\", \"b-sandwich / ConA-like\"], [\"3AYA\", \"b-sandwich / ConA-like\"], [\"3AYD\", \"b-sandwich / ConA-like\"], [\"3AYE\", \"b-sandwich / ConA-like\"], [\"3C22\", \"a/b mixed / C-type lectin-like\"], [\"3CFW\", \"a/b mixed / C-type lectin-like\"], [\"3GAL\", \"b-sandwich / ConA-like\"], [\"3IKN\", \"a/b mixed / C-type lectin-like\"], [\"3IKP\", \"a/b mixed / C-type lectin-like\"], [\"3IKQ\", \"a/b mixed / C-type lectin-like\"], [\"3IKR\", \"a/b mixed / C-type lectin-like\"], [\"3KQG\", \"a/b mixed / C-type lectin-like\"], [\"3LSD\", \"b-sandwich / ConA-like\"], [\"3LSE\", \"b-sandwich / ConA-like\"], [\"3NV1\", \"b-sandwich / ConA-like\"], [\"3NV2\", \"b-sandwich / ConA-like\"], [\"3NV3\", \"b-sandwich / ConA-like\"], [\"3NV4\", \"b-sandwich / ConA-like\"], [\"3OJB\", \"b-sandwich / ConA-like\"], [\"3OY8\", \"b-sandwich / ConA-like\"], [\"3OYW\", \"b-sandwich / ConA-like\"], [\"3P5D\", \"a/b mixed / C-type lectin-like\"], [\"3P5E\", \"a/b mixed / C-type lectin-like\"], [\"3P5G\", \"a/b mixed / C-type lectin-like\"], [\"3P5H\", \"a/b mixed / C-type lectin-like\"], [\"3P5I\", \"a/b mixed / C-type lectin-like\"], [\"3P7F\", \"a/b mixed / C-type lectin-like\"], [\"3P7G\", \"a/b mixed / C-type lectin-like\"], [\"3P7H\", \"a/b mixed / C-type lectin-like\"], [\"3POW\", \"b-sandwich / ConA-like\"], [\"3T1L\", \"b-sandwich / ConA-like\"], [\"3T1M\", \"b-sandwich / ConA-like\"], [\"3T2T\", \"b-sandwich / ConA-like\"], [\"3VKL\", \"b-sandwich / ConA-like\"], [\"3VKM\", \"b-sandwich / ConA-like\"], [\"3VKN\", \"b-sandwich / ConA-like\"], [\"3VKO\", \"b-sandwich / ConA-like\"], [\"3ZSJ\", \"b-sandwich / ConA-like\"], [\"3ZSK\", \"b-sandwich / ConA-like\"], [\"3ZSL\", \"b-sandwich / ConA-like\"], [\"3ZSM\", \"b-sandwich / ConA-like\"], [\"3ZXE\", \"b-sandwich / ConA-like\"], [\"3ZXF\", \"b-sandwich / ConA-like\"], [\"4FQZ\", \"b-sandwich / ConA-like\"], [\"4GAL\", \"b-sandwich / ConA-like\"], [\"4GXL\", \"b-sandwich / ConA-like\"], [\"4HAN\", \"b-sandwich / ConA-like\"], [\"4JC1\", \"b-sandwich / ConA-like\"], [\"4JCK\", \"b-sandwich / ConA-like\"], [\"5GAL\", \"b-sandwich / ConA-like\"], [\"2XR5\", \"a/b mixed / C-type lectin-like\"], [\"2XR6\", \"a/b mixed / C-type lectin-like\"], [\"3WH2\", \"a/b mixed / C-type lectin-like\"], [\"3WH3\", \"a/b mixed / C-type lectin-like\"], [\"3WHD\", \"a/b mixed / C-type lectin-like\"], [\"4M17\", \"a/b mixed / C-type lectin-like\"], [\"4M18\", \"a/b mixed / C-type lectin-like\"], [\"4N32\", \"a/b mixed / C-type lectin-like\"], [\"4N33\", \"a/b mixed / C-type lectin-like\"], [\"4N34\", \"a/b mixed / C-type lectin-like\"], [\"4N35\", \"a/b mixed / C-type lectin-like\"], [\"4N36\", \"a/b mixed / C-type lectin-like\"], [\"4N37\", \"a/b mixed / C-type lectin-like\"], [\"4N38\", \"a/b mixed / C-type lectin-like\"], [\"4LBJ\", \"b-sandwich / ConA-like\"], [\"4LBK\", \"b-sandwich / ConA-like\"], [\"4LBL\", \"b-sandwich / ConA-like\"], [\"4LBM\", \"b-sandwich / ConA-like\"], [\"4LBN\", \"b-sandwich / ConA-like\"], [\"4LBO\", \"b-sandwich / ConA-like\"], [\"4UW3\", \"b-sandwich / ConA-like\"], [\"4UW4\", \"b-sandwich / ConA-like\"], [\"4UW5\", \"b-sandwich / ConA-like\"], [\"4UW6\", \"b-sandwich / ConA-like\"], [\"3VY7\", \"b-prism I\"], [\"3VZG\", \"b-prism I\"], [\"3VZF\", \"b-prism I\"], [\"3VZE\", \"b-prism I\"], [\"3VY6\", \"b-prism I\"], [\"4WMQ\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4WMY\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4CSY\", \"a/b mixed / C-type lectin-like\"], [\"4YMD\", \"a/b mixed / C-type lectin-like\"], [\"4YLI\", \"a/b mixed / C-type lectin-like\"], [\"3WLU\", \"b-sandwich / ConA-like\"], [\"4BMB\", \"b-sandwich / ConA-like\"], [\"4BME\", \"b-sandwich / ConA-like\"], [\"4R9A\", \"b-sandwich / ConA-like\"], [\"4R9B\", \"b-sandwich / ConA-like\"], [\"4R9C\", \"b-sandwich / ConA-like\"], [\"4R9D\", \"b-sandwich / ConA-like\"], [\"4RL7\", \"b-sandwich / ConA-like\"], [\"4XBL\", \"b-sandwich / ConA-like\"], [\"4XBN\", \"b-sandwich / ConA-like\"], [\"4XBQ\", \"b-sandwich / ConA-like\"], [\"4YLZ\", \"b-sandwich / ConA-like\"], [\"4YM0\", \"b-sandwich / ConA-like\"], [\"4YM1\", \"b-sandwich / ConA-like\"], [\"4YM2\", \"b-sandwich / ConA-like\"], [\"4YM3\", \"b-sandwich / ConA-like\"], [\"5E8A\", \"b-sandwich / ConA-like\"], [\"5E88\", \"b-sandwich / ConA-like\"], [\"5E89\", \"b-sandwich / ConA-like\"], [\"5EWS\", \"b-sandwich / ConA-like\"], [\"5DG1\", \"b-sandwich / ConA-like\"], [\"5DG2\", \"b-sandwich / ConA-like\"], [\"5EXO\", \"b-sandwich / ConA-like\"], [\"5GZC\", \"b-sandwich / ConA-like\"], [\"5GZD\", \"b-sandwich / ConA-like\"], [\"5GZE\", \"b-sandwich / ConA-like\"], [\"5GZF\", \"b-sandwich / ConA-like\"], [\"5GZG\", \"b-sandwich / ConA-like\"], [\"5DUX\", \"b-sandwich / ConA-like\"], [\"5DUW\", \"b-sandwich / ConA-like\"], [\"5DUV\", \"b-sandwich / ConA-like\"], [\"5DUU\", \"b-sandwich / ConA-like\"], [\"4XZP\", \"b-sandwich / ConA-like\"], [\"5CBL\", \"b-sandwich / ConA-like\"], [\"5H9P\", \"b-sandwich / ConA-like\"], [\"5H9Q\", \"b-sandwich / ConA-like\"], [\"5H9R\", \"b-sandwich / ConA-like\"], [\"5H9S\", \"b-sandwich / ConA-like\"], [\"4AK8\", \"a/b mixed / C-type lectin-like\"], [\"4E52\", \"a/b mixed / C-type lectin-like\"], [\"4MTH\", \"a/b mixed / C-type lectin-like\"], [\"4ZES\", \"a/b mixed / C-type lectin-like\"], [\"4ZET\", \"a/b mixed / C-type lectin-like\"], [\"5B1W\", \"a/b mixed / C-type lectin-like\"], [\"5B1X\", \"a/b mixed / C-type lectin-like\"], [\"5VYB\", \"a/b mixed / C-type lectin-like\"], [\"5JPV\", \"a/b mixed / C-type lectin-like\"], [\"5JQ1\", \"a/b mixed / C-type lectin-like\"], [\"5T7U\", \"b-sandwich / ConA-like\"], [\"5T7T\", \"b-sandwich / ConA-like\"], [\"5T7S\", \"b-sandwich / ConA-like\"], [\"5T7I\", \"b-sandwich / ConA-like\"], [\"5NFC\", \"b-sandwich / ConA-like\"], [\"5NFB\", \"b-sandwich / ConA-like\"], [\"5NFA\", \"b-sandwich / ConA-like\"], [\"5NF9\", \"b-sandwich / ConA-like\"], [\"5NF7\", \"b-sandwich / ConA-like\"], [\"5IUQ\", \"b-sandwich / ConA-like\"], [\"4Y26\", \"b-sandwich / ConA-like\"], [\"4Y24\", \"b-sandwich / ConA-like\"], [\"4Y22\", \"b-sandwich / ConA-like\"], [\"4Y20\", \"b-sandwich / ConA-like\"], [\"4Y1Z\", \"b-sandwich / ConA-like\"], [\"4Y1Y\", \"b-sandwich / ConA-like\"], [\"4Y1X\", \"b-sandwich / ConA-like\"], [\"4Y1V\", \"b-sandwich / ConA-like\"], [\"4Y1U\", \"b-sandwich / ConA-like\"], [\"4Q27\", \"b-sandwich / ConA-like\"], [\"4Q26\", \"b-sandwich / ConA-like\"], [\"4Q2F\", \"b-sandwich / ConA-like\"], [\"4Q1R\", \"b-sandwich / ConA-like\"], [\"4Q1P\", \"b-sandwich / ConA-like\"], [\"4BM8\", \"b-sandwich / ConA-like\"], [\"4BLJ\", \"b-sandwich / ConA-like\"], [\"4BLI\", \"b-sandwich / ConA-like\"], [\"3W59\", \"b-sandwich / ConA-like\"], [\"3W58\", \"b-sandwich / ConA-like\"], [\"5YT4\", \"b-sandwich / ConA-like\"], [\"5XRG\", \"b-sandwich / ConA-like\"], [\"5XRH\", \"b-sandwich / ConA-like\"], [\"5XRI\", \"b-sandwich / ConA-like\"], [\"5XRJ\", \"b-sandwich / ConA-like\"], [\"5XRK\", \"b-sandwich / ConA-like\"], [\"5XRL\", \"b-sandwich / ConA-like\"], [\"5XRM\", \"b-sandwich / ConA-like\"], [\"5XRN\", \"b-sandwich / ConA-like\"], [\"5XRO\", \"b-sandwich / ConA-like\"], [\"5XRP\", \"b-sandwich / ConA-like\"], [\"6FOF\", \"b-sandwich / ConA-like\"], [\"4M7F\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4M7H\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4R9J\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4R9T\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"2N7A\", \"b-sandwich / Ig-like\"], [\"2N7B\", \"b-sandwich / Ig-like\"], [\"3WBP\", \"a/b mixed / C-type lectin-like\"], [\"3WBQ\", \"a/b mixed / C-type lectin-like\"], [\"3WBR\", \"a/b mixed / C-type lectin-like\"], [\"2YHF\", \"a/b mixed / C-type lectin-like\"], [\"5G6U\", \"a/b mixed / C-type lectin-like\"], [\"6FK2\", \"b-sandwich / ConA-like\"], [\"5J06\", \"b-sandwich / Ig-like\"], [\"5J0B\", \"b-sandwich / Ig-like\"], [\"3WUZ\", \"b-sandwich / Ig-like\"], [\"3WV0\", \"b-sandwich / Ig-like\"], [\"4NFB\", \"b-sandwich / Ig-like\"], [\"4NFC\", \"b-sandwich / Ig-like\"], [\"4NFD\", \"b-sandwich / Ig-like\"], [\"5XOF\", \"b-sandwich / Ig-like\"], [\"5XO2\", \"b-sandwich / Ig-like\"], [\"1GYK\", \"b-sandwich / ConA-like\"], [\"4P8V\", \"a/b barrel / TIM\"], [\"4P8X\", \"a/b barrel / TIM\"], [\"4GKX\", \"b-sandwich / ConA-like\"], [\"4GKY\", \"b-sandwich / ConA-like\"], [\"4YGB\", \"b-sandwich / ConA-like\"], [\"4YGC\", \"b-sandwich / ConA-like\"], [\"4YGD\", \"b-sandwich / ConA-like\"], [\"4YGE\", \"b-sandwich / ConA-like\"], [\"5MWT\", \"b-sandwich / ConA-like\"], [\"5MWX\", \"b-sandwich / ConA-like\"], [\"6B94\", \"b-sandwich / ConA-like\"], [\"6F83\", \"b-sandwich / ConA-like\"], [\"6A1S\", \"b-sandwich / ConA-like\"], [\"6A1T\", \"b-sandwich / ConA-like\"], [\"6A1U\", \"b-sandwich / ConA-like\"], [\"6A1V\", \"b-sandwich / ConA-like\"], [\"6A1X\", \"b-sandwich / ConA-like\"], [\"6A1Y\", \"b-sandwich / ConA-like\"], [\"5XG7\", \"b-sandwich / ConA-like\"], [\"5XG8\", \"b-sandwich / ConA-like\"], [\"5Y03\", \"b-sandwich / ConA-like\"], [\"6A62\", \"b-sandwich / ConA-like\"], [\"6A63\", \"b-sandwich / ConA-like\"], [\"6A64\", \"b-sandwich / ConA-like\"], [\"6A65\", \"b-sandwich / ConA-like\"], [\"6A66\", \"b-sandwich / ConA-like\"], [\"5OAX\", \"b-sandwich / ConA-like\"], [\"5ODY\", \"b-sandwich / ConA-like\"], [\"6B8K\", \"b-sandwich / ConA-like\"], [\"6F2Q\", \"b-sandwich / ConA-like\"], [\"6F6Y\", \"b-sandwich / ConA-like\"], [\"6I74\", \"b-sandwich / ConA-like\"], [\"6I75\", \"b-sandwich / ConA-like\"], [\"6I76\", \"b-sandwich / ConA-like\"], [\"6I77\", \"b-sandwich / ConA-like\"], [\"6I78\", \"b-sandwich / ConA-like\"], [\"6QGE\", \"b-sandwich / ConA-like\"], [\"6QGF\", \"b-sandwich / ConA-like\"], [\"5VWG\", \"b-sandwich / ConA-like\"], [\"6QLN\", \"b-sandwich / ConA-like\"], [\"6QLO\", \"b-sandwich / ConA-like\"], [\"6QLP\", \"b-sandwich / ConA-like\"], [\"6QLQ\", \"b-sandwich / ConA-like\"], [\"6QLR\", \"b-sandwich / ConA-like\"], [\"6QLS\", \"b-sandwich / ConA-like\"], [\"6QLT\", \"b-sandwich / ConA-like\"], [\"6QLU\", \"b-sandwich / ConA-like\"], [\"6RHM\", \"b-sandwich / ConA-like\"], [\"6RHL\", \"b-sandwich / ConA-like\"], [\"6V1C\", \"peptide\"], [\"6V1D\", \"peptide\"], [\"6USC\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6GHV\", \"a/b mixed / C-type lectin-like\"], [\"6KJX\", \"b-sandwich / ConA-like\"], [\"6KJY\", \"b-sandwich / ConA-like\"], [\"6KJW\", \"b-sandwich / ConA-like\"], [\"6QRN\", \"b-sandwich / ConA-like\"], [\"6GKQ\", \"b-sandwich / ConA-like\"], [\"6GKT\", \"b-sandwich / ConA-like\"], [\"6LJQ\", \"b-sandwich / ConA-like\"], [\"6LJP\", \"b-sandwich / ConA-like\"], [\"6LJR\", \"b-sandwich / ConA-like\"], [\"6KXA\", \"b-sandwich / ConA-like\"], [\"6KXB\", \"b-sandwich / ConA-like\"], [\"6K2Z\", \"b-sandwich / ConA-like\"], [\"6K2Y\", \"b-sandwich / ConA-like\"], [\"6Y4C\", \"b-sandwich / ConA-like\"], [\"6Q0Q\", \"b-sandwich / ConA-like\"], [\"6Q17\", \"b-sandwich / ConA-like\"], [\"6Z32\", \"b-barrel\"], [\"6Z30\", \"b-barrel\"], [\"6YAU\", \"a/b mixed / C-type lectin-like\"], [\"5IHB\", \"b-sandwich / Ig-like\"], [\"6D49\", \"b-sandwich / Ig-like\"], [\"6D4A\", \"b-sandwich / Ig-like\"], [\"6D48\", \"b-sandwich / Ig-like\"], [\"7AW6\", \"b-sandwich / Ig-like\"], [\"5VKM\", \"b-sandwich / Ig-like\"], [\"5VKJ\", \"b-sandwich / Ig-like\"], [\"7BE3\", \"b-sandwich / ConA-like\"], [\"2FFU\", \"b-trefoil\"], [\"2D7I\", \"b-trefoil\"], [\"2D7R\", \"b-trefoil\"], [\"2FFV\", \"b-trefoil\"], [\"5AJN\", \"b-trefoil\"], [\"5AJO\", \"b-trefoil\"], [\"5AJP\", \"b-trefoil\"], [\"5NQA\", \"b-trefoil\"], [\"6H0B\", \"b-trefoil\"], [\"6IWR\", \"b-trefoil\"], [\"6PXU\", \"b-trefoil\"], [\"6PUV\", \"a/b mixed / C-type lectin-like\"], [\"6PY1\", \"a/b mixed / C-type lectin-like\"], [\"6XIY\", \"a/b mixed / C-type lectin-like\"], [\"6W12\", \"a/b mixed / C-type lectin-like\"], [\"7JUB\", \"a/b mixed / C-type lectin-like\"], [\"7JUC\", \"a/b mixed / C-type lectin-like\"], [\"7JUD\", \"a/b mixed / C-type lectin-like\"], [\"7JUE\", \"a/b mixed / C-type lectin-like\"], [\"7JUF\", \"a/b mixed / C-type lectin-like\"], [\"7JUG\", \"a/b mixed / C-type lectin-like\"], [\"7JUH\", \"a/b mixed / C-type lectin-like\"], [\"7L61\", \"a/b mixed / C-type lectin-like\"], [\"7L62\", \"a/b mixed / C-type lectin-like\"], [\"7L63\", \"a/b mixed / C-type lectin-like\"], [\"7L64\", \"a/b mixed / C-type lectin-like\"], [\"7L65\", \"a/b mixed / C-type lectin-like\"], [\"7L66\", \"a/b mixed / C-type lectin-like\"], [\"7L67\", \"a/b mixed / C-type lectin-like\"], [\"7L68\", \"a/b mixed / C-type lectin-like\"], [\"3BXW\", \"a/b barrel / TIM\"], [\"3WHT\", \"b-sandwich / ConA-like\"], [\"3WHU\", \"b-sandwich / ConA-like\"], [\"3WNX\", \"b-sandwich / ConA-like\"], [\"5VC1\", \"a/b mixed / C-type lectin-like\"], [\"5OXR\", \"a/b mixed / C-type lectin-like\"], [\"5OXS\", \"a/b mixed / C-type lectin-like\"], [\"1HNF\", \"b-sandwich / Ig-like\"], [\"5MIX\", \"b-sandwich / Ig-like\"], [\"3OAI\", \"b-sandwich / Ig-like\"], [\"2WIM\", \"b-sandwich / Ig-like\"], [\"1IC1\", \"b-sandwich / Ig-like\"], [\"5AEA\", \"b-sandwich / Ig-like\"], [\"6QNV\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"5AFB\", \"b-sandwich / CUB-like\"], [\"7ZL1\", \"b-sandwich / ConA-like\"], [\"6YPE\", \"b-sandwich / ConA-like\"], [\"7NL7\", \"a/b mixed / C-type lectin-like\"], [\"7NL6\", \"a/b mixed / C-type lectin-like\"], [\"7QU6\", \"b-sandwich / Ig-like\"], [\"7QUI\", \"b-sandwich / Ig-like\"], [\"7RDP\", \"b-sandwich / ConA-like\"], [\"4IOP\", \"a/b mixed / C-type lectin-like\"], [\"5LK5\", \"b-sandwich / ConA-like\"], [\"5XTS\", \"b-trefoil\"], [\"5XTW\", \"b-trefoil\"], [\"6INN\", \"b-trefoil\"], [\"6INO\", \"b-trefoil\"], [\"6INU\", \"b-trefoil\"], [\"6INV\", \"b-trefoil\"], [\"6IOE\", \"b-trefoil\"], [\"5AO6\", \"a/b mixed / C-type lectin-like\"], [\"5AO5\", \"a/b mixed / C-type lectin-like\"], [\"1HI7\", \"peptide\"], [\"1E9T\", \"peptide\"], [\"1PE3\", \"peptide\"], [\"7ZOZ\", \"b-sandwich / Ig-like\"], [\"5MGR\", \"a/b mixed / C-type lectin-like\"], [\"2BRS\", \"a/b mixed / C-type lectin-like\"], [\"1H8U\", \"a/b mixed / C-type lectin-like\"], [\"2KV3\", \"a/b mixed / C-type lectin-like\"], [\"4QKH\", \"a/b mixed / C-type lectin-like\"], [\"3FF7\", \"a/b mixed / C-type lectin-like\"], [\"1MPU\", \"a/b mixed / C-type lectin-like\"], [\"7T4R\", \"a/b mixed / C-type lectin-like\"], [\"5XAU\", \"b-sandwich / ConA-like\"], [\"8S9P\", \"b-sandwich / ConA-like\"], [\"7ZC9\", \"b-sandwich / ConA-like\"], [\"3SH5\", \"b-sandwich / ConA-like\"], [\"3AQG\", \"b-prism I\"], [\"3APA\", \"b-prism I\"], [\"6ENY\", \"b-sandwich / ConA-like\"], [\"3POS\", \"b-sandwich / ConA-like\"], [\"2NAN\", \"a/b mixed / C-type lectin-like\"], [\"1FM5\", \"a/b mixed / C-type lectin-like\"], [\"8A59\", \"a/b mixed / C-type lectin-like\"], [\"3VPP\", \"a/b mixed / C-type lectin-like\"], [\"1T8C\", \"a/b mixed / C-type lectin-like\"], [\"3BDW\", \"a/b mixed / C-type lectin-like\"], [\"1B6E\", \"a/b mixed / C-type lectin-like\"], [\"1QDD\", \"a/b mixed / C-type lectin-like\"], [\"4JYO\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4JZC\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6Y41\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6EUA\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6EUB\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"6Y43\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"1N86\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"1FZB\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"1FID\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"7TZ2\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"8FNA\", \"a/b mixed with b-sheet / Fibrinogen C-ter like\"], [\"4YEP\", \"b-sandwich / ConA-like\"], [\"3L4T\", \"peptide\"], [\"7WZ8\", \"a/b mixed / C-type lectin-like\"], [\"6Y0M\", \"a/b mixed / C-type lectin-like\"], [\"6Y0L\", \"a/b mixed / C-type lectin-like\"], [\"7XAC\", \"b-sandwich / ConA-like\"], [\"7XBL\", \"b-sandwich / ConA-like\"], [\"7RDO\", \"b-sandwich / ConA-like\"], [\"7RH0\", \"b-sandwich / ConA-like\"], [\"7RH1\", \"b-sandwich / ConA-like\"], [\"7RH3\", \"b-sandwich / ConA-like\"], [\"7RH4\", \"b-sandwich / ConA-like\"], [\"7RGX\", \"b-sandwich / ConA-like\"], [\"7RGY\", \"b-sandwich / ConA-like\"], [\"7RGZ\", \"b-sandwich / ConA-like\"], [\"7ZQX\", \"b-sandwich / ConA-like\"], [\"7XFA\", \"b-sandwich / ConA-like\"], [\"8JPG\", \"b-sandwich / ConA-like\"]]"
}

2025-06-16 18:01:58,271 - opendevin - INFO - CodeActAgent LEVEL 0 STEP 15
2025-06-16 18:01:58,271 - opendevin - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.RUNNING to AgentState.ERROR
2025-06-16 18:01:59,171 - opendevin - INFO - [Agent Controller default] Setting agent(CodeActAgent) state from AgentState.ERROR to AgentState.STOPPED
2025-06-16 18:02:00,941 - opendevin - INFO - AgentController task was cancelled
2025-06-16 18:02:00,943 - opendevin - INFO - Final response: Agent completed with state: State
2025-06-16 18:02:00,943 - opendevin - INFO - Starting GPT evaluation for glycan task 4
2025-06-16 18:02:00,944 - opendevin - INFO - Calling gpt-4o for evaluation...
2025-06-16 18:02:00,944 - opendevin - INFO - DEBUG: Using model: gpt-4o
2025-06-16 18:02:00,944 - opendevin - INFO - DEBUG: Prompt length (chars): 115914
2025-06-16 18:02:00,944 - opendevin - INFO - DEBUG: Estimated tokens: 28978
2025-06-16 18:02:00,958 - opendevin - INFO - DEBUG: Making API call to OpenAI with model: gpt-4o
2025-06-16 18:02:15,066 - opendevin - INFO - DEBUG: API call successful, response received
2025-06-16 18:02:15,067 - opendevin - INFO - GPT Evaluation Results:
2025-06-16 18:02:15,067 - opendevin - INFO -   Decision: FAILURE
2025-06-16 18:02:15,067 - opendevin - INFO -   Success: False
2025-06-16 18:02:15,067 - opendevin - INFO -   Reasoning: The agent attempted to address the research question by using the UniLectin module to retrieve lectins derived from 'Homo sapiens' with known structures. However, the agent encountered several issues ...
2025-06-16 18:02:15,067 - opendevin - INFO -   Critical Issues: 1. Inability to parse and process the JSON response correctly, leading to failure in extracting and counting the lectin data. 2. Repeated errors in handling the response format, indicating a lack of robustness in data processing.
2025-06-16 18:02:15,071 - opendevin - INFO - Detailed evaluation saved to evaluation_outputs/glycan_20250616_175600/logs/instance_4_evaluation.json
2025-06-16 18:02:15,071 - opendevin - INFO - Task 4 completed. Success: False
