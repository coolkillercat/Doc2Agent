{
  "list_issues_closed_by_merge_request": "Retrieves all issues that would be automatically closed if the specified merge request were merged.",
  "get_issue_comments": "Retrieves all comments for a specific issue to facilitate discussion tracking and team communication.",
  "create_todo_for_issue": "Creates a to-do item for the current user on a specific issue, helping users track issues they need to address or follow up on.",
  "get_milestone_issues": "Retrieves all issues assigned to a specific milestone within a project, allowing project managers to track progress and plan work for that milestone.",
  "get_issue_discussions": "Retrieves all discussion threads and comments for a specific issue within a project, providing a comprehensive view of the conversation history.",
  "get_merge_requests_related_to_issue": "Retrieves all merge requests that are related to a specific issue in a project, showing their details such as state, author, milestone, and pipeline information.",
  "move_issue": "Moves an issue from its current project to a different project, transferring all relevant metadata like labels and milestones with matching names.",
  "subscribe_to_issue": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_issue_participants": "Retrieves a list of users who are participants in a specific GitLab project issue.",
  "get_paginated_issues": "Retrieve a paginated list of issues from a GitLab group or project.",
  "promote_issue_to_epic": "Promotes an existing issue to an epic by adding a comment with the /promote quick action.",
  "reorder_issue": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_issue_notes": "Retrieves all notes for a specific issue in a project, with options to sort and order the results.",
  "track_issue_time": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_group_issues": "Retrieves issues from a specific group with flexible filtering options.",
  "list_issues": "Retrieves issues from GitLab with powerful filtering options.",
  "update_issue": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_issue_state_events": "Retrieves a chronological list of state changes for a specific issue in a project, showing when the issue was opened, closed, or reopened, by whom, and at what time."
}