{
  "get_commit_references": "Retrieves all references (branches or tags) that a specific commit is pushed to, allowing users to track which branches and tags contain a particular commit.",
  "get_repository_commits": "Retrieves a list of commits from a repository with filtering options by reference, file path, and date range.",
  "revert_commit": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "post_commit_comment": "Adds a comment to a specific commit.",
  "get_commit_discussions": "Retrieves all discussion threads for a specific commit in a project, including comments, replies, and diff notes.",
  "get_commit_diff": "Retrieves the diff of a specific commit in a GitLab project, showing file changes between the commit and its parent.",
  "get_commit_signature": "Retrieves the digital signature information for a specific commit in a project repository.",
  "get_merge_request_commits": "Retrieves a list of commits for a specific merge request, allowing developers to analyze changes, \nreview commit history, and track code contributions within the merge request.",
  "list_repository_commits": "Retrieves a list of commits from a project repository with filtering options for time period, author, path, and display preferences.",
  "get_commit_comments": "Retrieves all comments associated with a specific commit in a GitLab project.",
  "get_commit": "Retrieves detailed information about a specific commit in a project repository, including author details, commit message, timestamps, and optionally statistics about code changes (additions/deletions).",
  "create_commit": "Creates a commit with multiple file operations (create, update, move, delete, chmod) in a single transaction.",
  "cherry_pick_commit": "Cherry-picks a specified commit to a target branch in a GitLab project.",
  "get_commit_statuses": "Retrieves the statuses of a specific commit in a GitLab project.",
  "get_merge_requests_by_commit": "Retrieves all merge requests associated with a specific commit in a project.",
  "get_commit_dates": "Retrieves the date information for a specific commit in a GitLab repository, including created_at, committed_date, and authored_date fields for timestamp analysis and auditing.",
  "add_gpg_key": "Adds a new GPG key to the authenticated user's account.",
  "list_gpg_keys": "Retrieves all GPG keys associated with the authenticated user's GitLab account.",
  "update_invitation": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_resource_events": "Retrieves events associated with a specific resource, with optional filtering by event type.",
  "get_raw_file": "Retrieves the raw content of a file from a GitLab repository.",
  "upload_incident_metric_image": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_file_blame": "Retrieves blame information for a file in a repository, showing which commits and authors are responsible for specific lines of code.",
  "star_project": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_group_badges": "Retrieves all badges associated with a specific group, enabling badge management and recognition systems within group contexts.",
  "get_project_details": "Retrieves detailed information about a specific project, including description, visibility, repository URLs, and other project metadata.",
  "get_project_users": "Retrieves a list of users who are members of a specific project.",
  "upload_project_avatar": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "unstar_project": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "restore_project": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "share_project_with_group": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_project_issues": "Retrieves issues from a GitLab project with flexible filtering options.",
  "get_project_milestones": "Retrieves milestones for a specific project with optional filtering parameters such as milestone IIDs, state, title, or date ranges.",
  "get_project_starrers": "Retrieves a list of users who have starred a specific GitLab project.",
  "get_group_or_project_invitations": "Retrieves pending invitations for a GitLab group or project.",
  "remove_project_avatar": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "add_member_to_group_or_project": "Adds a user as a member to a GitLab group or project with specified access level and optional expiration date.",
  "generate_changelog": "Generates changelog data for a project based on commits without committing to a changelog file.",
  "update_group_push_rules": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "import_project_members": "Imports members from a source project to a target project, preserving appropriate role hierarchies.",
  "create_project_webhook": "Creates a webhook for a GitLab project that will trigger on specified events.",
  "list_group_projects": "Retrieves a list of projects belonging to a specific group, with extensive filtering capabilities such as visibility, ownership, and feature enablement.",
  "list_project_groups": "Retrieves a list of ancestor groups for a specific project.",
  "set_project_visibility": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "give_group_access_to_project": "Grants a specific group access to a GitLab project with specified permissions.",
  "upload_file_to_project": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_project_events": "Retrieves events for a specific project with optional filtering by event type, target, and date range.",
  "get_project_push_rules": "Retrieves the push rules configuration for a specific GitLab project, allowing users to view rules that enforce commit format, branch naming, security checks, and other repository constraints.",
  "export_project": "Exports a project with all its data in the specified format, allowing for project backup, migration, or sharing.",
  "list_project_shareable_groups": "Retrieves a list of groups that can be shared with a specific project.",
  "download_project_avatar": "Downloads a project's avatar image.",
  "start_project_housekeeping": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_user_projects": "Retrieves a list of projects owned by a specific GitLab user, with flexible filtering options to narrow down results based on project attributes like visibility, activity status, and features.",
  "get_project_transfer_locations": "Retrieves a list of groups to which the authenticated user can transfer a specific project.",
  "list_projects": "Retrieves a list of GitLab projects matching specified criteria.",
  "get_project_badges": "Retrieves the badges associated with a specified project.",
  "fork_project": "Creates a fork of an existing project in the user's namespace or a specified namespace.",
  "get_project_vulnerabilities": "Retrieves vulnerability data for a specified project, with optional filtering by severity and status.",
  "get_project_languages": "Retrieves the programming languages used in a GitLab project along with their percentage distribution.",
  "add_group_webhook": "Creates a new webhook for a GitLab group that will send notifications for selected events to the specified URL.",
  "get_project_members": "Retrieves a list of all members associated with a specific project.",
  "get_user_starred_projects": "Retrieves a list of projects starred by a specific user.",
  "get_project_topics": "Retrieve the topics associated with a GitLab project, providing a modern alternative to the deprecated tag_list attribute.",
  "get_user_contributed_projects": "Retrieves a list of projects that a specific user has contributed to.",
  "get_project_changelogs": "Retrieves changelogs for a specific project, allowing users to track changes and updates over time.",
  "get_group_shared_projects": "Retrieves a list of projects shared with a specific group, allowing filtering by various criteria such as visibility, archived status, and features enabled.",
  "get_project_templates": "Retrieves all templates of a specified type for a given project.",
  "edit_project": "Updates an existing GitLab project's configuration with specified parameters.",
  "list_user_projects": "Retrieves a list of projects associated with a specific user.",
  "create_project": "Creates a new GitLab project with customizable settings including name, path, visibility, and various access controls.",
  "update_project_milestone": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_project_template": "Retrieves a specific template (Dockerfile, GitIgnore, CI/CD configuration, license, issue, or merge request) from a project to use as a starting point for new files or configurations.",
  "set_project_merge_method": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "list_project_forks": "Retrieves a list of fork projects derived from a specified source project.",
  "create_project_issue": "Creates a new issue in a GitLab project with customizable properties such as title, description, assignees, and other attributes.",
  "search_projects": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "list_project_merge_requests": "Retrieves merge requests for a project with various filtering options.",
  "get_project_issue": "Retrieves detailed information about a specific issue within a GitLab project, including its status, assignees, description, time statistics, and other metadata.",
  "create_repository_file": "Creates a new file in a repository with the specified content.",
  "archive_project": "Archives a GitLab project.",
  "get_repository_tree": "Retrieves a list of files and directories in a GitLab project repository.",
  "unarchive_project": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "compare_repository_code": "Compares code between two branches, tags, or commits in a GitLab repository, showing the differences between them.",
  "update_repository_file": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_repository_blob": "Retrieve a blob (file content) from a repository.",
  "get_raw_blob_content": "Retrieves the raw file contents of a specific blob from a project repository by its SHA.",
  "get_repository_archive": "Downloads an archive of a repository or a specific subpath within it.",
  "manage_repository_file": "Manages repository files by performing operations like get, create, update, or delete on a specific file in a GitLab project repository.",
  "clone_issue": "Clones an issue from one project to another, copying data such as labels, milestones, and optionally notes.",
  "get_repository_contributors": "Retrieves a list of contributors for a specific repository, showing their names, emails, commit counts, additions, and deletions.",
  "start_pull_mirroring": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_repository_file": "Retrieves a file from a GitLab repository, including its contents and metadata.",
  "configure_pull_mirroring": "Configures pull mirroring for a GitLab project, allowing automatic synchronization from an external repository.",
  "share_group_with_group": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "list_group_billable_member_indirect_memberships": "Retrieves all indirect memberships for a billable member of a top-level group.",
  "transfer_group": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_billable_members": "Retrieves a list of billable members for a top-level group including members in subgroups and projects.",
  "manage_ldap_group_links": "A comprehensive tool for managing LDAP group links in GitLab groups.",
  "change_group_member_state": "Changes the membership state of a user in a group.",
  "get_group_audit_events": "Retrieves audit events for a specified group with optional filtering parameters.",
  "approve_all_pending_group_members": "Approves all pending users for a specified group and its subgroups and projects in one operation.",
  "get_group_details": "Retrieves comprehensive information about a GitLab group, including name, description, visibility settings, and other attributes.",
  "create_subgroup": "Creates a new subgroup under a parent group in GitLab.",
  "list_group_subgroups": "Retrieves visible direct subgroups for a specified parent group.",
  "remove_billable_member": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "export_group_data": "Exports data from a specified group, with options to include relationship data and choose output format.",
  "restore_group": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_descendant_groups": "Retrieves a list of visible descendant groups for a specified parent group.",
  "get_group_namespaces": "Retrieves namespaces within a specified group with pagination support.",
  "approve_group_member": "Approves a pending user for a group, its subgroups, and projects.",
  "update_group": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "search_groups": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "manage_saml_group_link": "Manages SAML group links for GitLab groups.",
  "list_groups": "Retrieves a list of visible GitLab groups based on specified filters.",
  "list_billable_member_memberships": "Lists all projects and groups a billable user is a member of within a specified group hierarchy.",
  "get_group_members": "Retrieves all members of a specified group.",
  "create_group": "Creates a new project group in GitLab with customizable settings for visibility, permissions, and features.",
  "sync_group_with_ldap": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_pending_group_members": "Retrieves a list of all pending members (awaiting state or invited without GitLab account) for a top-level group and its subgroups and projects.",
  "get_merge_request_participants": "Retrieves a list of all participants involved in a specific merge request, providing user details such as name, username, avatar URL, and web URL.",
  "get_merge_request_reviewers": "Retrieves a list of reviewers assigned to a specific merge request, including their user information and review state (unreviewed/reviewed).",
  "merge_request_ref": "Merges changes between source and target branches into a special reference path (refs/merge-requests/:iid/merge) \nwithout affecting the actual target branch, allowing preview of the merge result.",
  "reset_merge_request_spent_time": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "rebase_merge_request": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_milestone_merge_requests": "Retrieves all merge requests assigned to a specific project milestone.",
  "get_merge_request_changes": "Retrieves detailed information about a merge request including its files and changes.",
  "merge_merge_request": "Accepts and merges changes submitted with a merge request in GitLab.",
  "get_merge_request_state_events": "Retrieves the history of state changes for a specific merge request, including who changed the state and when it occurred.",
  "cancel_merge_when_pipeline_succeeds": "Cancels the automatic merge of a merge request that was previously set to merge when its pipeline succeeds, returning the updated merge request details.",
  "subscribe_to_merge_request": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "add_merge_request_spent_time": "Records time spent working on a specific merge request.",
  "create_merge_request": "Creates a new merge request between two branches.",
  "get_merge_request": "Retrieves detailed information about a specific merge request in a project, including its current status, assignees, and other metadata.",
  "list_merge_request_pipelines": "Retrieves a list of pipelines associated with a specific merge request in a project, allowing developers to track CI/CD processes for code changes.",
  "get_merge_request_discussions": "Retrieves all discussion threads and comments for a specific merge request, allowing users to review feedback and commentary on code changes.",
  "get_merge_request_approvals": "Retrieves approval information for a specific merge request, allowing users to see who has approved the merge request and what approval rules apply.",
  "list_merge_requests": "Retrieves merge requests based on specified filters, allowing users to find MRs by state, assignee, reviewer, branch, and other attributes.",
  "update_merge_request": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_merge_request_diff_version": "Retrieves a specific version of a merge request diff, including commit details and file changes.",
  "list_group_merge_requests": "Retrieves merge requests for a specified group and its subgroups with customizable filtering options.",
  "create_merge_request_pipeline": "Creates a pipeline for a merge request, which can be a detached merge request pipeline or a merged results pipeline depending on project settings.",
  "create_merge_request_comment": "Creates a new comment on a specific merge request in GitLab.",
  "get_merge_request_notes": "Retrieves all notes/comments for a specific merge request, with options to sort and order the results.",
  "get_merge_request_diffs": "Retrieves the list of file diffs in a merge request, showing what changes were made to each file including additions, deletions, and modifications.",
  "get_epic_discussions": "Retrieves all discussion threads and comments for a specific epic in a group, providing a comprehensive view of the epic's conversation history.",
  "get_epic_notes": "Creates a new note for a specific epic in a group.",
  "get_snippet_notes": "Retrieves all notes (comments) for a specific project snippet, with optional sorting parameters to control the order of results.",
  "add_note": "Creates a new note (comment) on a specific project resource such as issues, merge requests, commits, snippets, or epics.",
  "get_snippet_discussions": "Retrieves all discussion threads and comments for a specific project snippet, allowing users to review feedback and conversations related to the snippet.",
  "approve_user": "Approves a pending user account.",
  "get_user_ssh_key": "Retrieves a specific SSH key for a given GitLab user.",
  "list_user_ssh_keys": "Retrieves all SSH keys associated with a specific user, identified by either their user ID or username.",
  "ban_user": "Bans a specified user from the GitLab instance.",
  "create_service_account": "Creates a service account user for automated processes or integrations.",
  "list_user_emails": "Retrieves a list of all email addresses associated with the authenticated user's account, showing each email's ID, address, and confirmation status.",
  "get_user_gpg_keys": "Retrieves all GPG keys associated with a specific GitLab user.",
  "disable_user_two_factor_authentication": "Disables two-factor authentication (2FA) for a specified user.",
  "get_user_preferences": "Retrieves the authenticated user's preferences including settings for viewing diffs, showing whitespace, and passing identities to CI JWT.",
  "get_user_contribution_events": "Retrieves contribution events for a specified GitLab user within an optional date range.",
  "list_ssh_keys": "Retrieves a list of the authenticated user's SSH keys with optional pagination.",
  "get_user_counts": "Retrieves counts of assigned issues, merge requests, review requests, and todos for the authenticated user.",
  "set_user_status": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_user_status": "Retrieves the current status of a GitLab user including their emoji, availability, message, and clear status time.",
  "update_user_preferences": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "list_group_users": "Retrieves a list of users associated with a specific group, including options to filter for SAML users or service accounts.",
  "deactivate_user": "Deactivates a specified user in the GitLab system.",
  "create_personal_access_token": "Creates a new personal access token for the currently authenticated user with k8s_proxy scope.",
  "get_user": "Retrieves detailed information about a specific user by their ID.",
  "reject_user": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_ssh_key": "Retrieve details of a specific SSH key associated with the user account.",
  "get_current_user": "Retrieves information about the currently authenticated user.",
  "unfollow_user": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "list_provisioned_users": "Retrieves a list of users provisioned by a specific group.",
  "unban_user": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_user_following": "Retrieve a list of users who the specified GitLab user is following.",
  "get_user_gpg_key": "Retrieves a specific GPG key for the authenticated user by its ID.",
  "activate_user": "Activates a specified user in the GitLab system.",
  "add_ssh_key": "Creates a new SSH key for the authenticated user with specified title, key content, optional expiration date, and usage scope (authentication, signing, or both).",
  "get_user_associations_count": "Retrieves counts of a user's associated projects, groups, issues, and merge requests.",
  "revoke_impersonation_token": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "add_email": "Creates a new email address for the authenticated user's account, enabling them to receive notifications and communications to this additional email.",
  "get_email_details": "Retrieves details of a specific email including the email address and confirmation timestamp.",
  "list_users": "Retrieves a list of GitLab users with comprehensive filtering options including by username, activity status, creation date, and user type.",
  "get_user_followers": "Retrieve a list of users who are following the specified GitLab user.",
  "get_milestone_burndown_events": "Retrieves all burndown chart events for a specific milestone in a project, providing data to track progress against timeline targets.",
  "create_milestone": "Creates a new milestone for a project with the specified title and optional details such as description, due date, and start date.",
  "get_member_details": "Retrieves detailed information about a specific member of a group or project, including inherited and invited members.",
  "get_all_members": "Retrieves a comprehensive list of members for a GitLab group or project, including inherited members, invited users, and members with permissions through ancestor groups.",
  "invite_member": "Invites a user to join a GitLab group or project by email or user ID.",
  "get_members": "Retrieves a list of members from a GitLab group or project.",
  "create_user_runner": "Creates a new runner linked to the current user with specified scope and configuration.",
  "get_todo_items": "Retrieves a user's to-do items from GitLab with optional filtering by state, action type, and target object type.",
  "get_todos": "Retrieves to-do items for the current user with optional filtering options to narrow down results by action, author, project, group, state or type of to-do item.",
  "mark_todo_as_done": "Marks a specific to-do item as completed based on its ID.",
  "mark_all_todos_as_done": "Marks all pending to-do items for the current user as done.",
  "list_issues_closed_by_merge_request": "Retrieves all issues that would be automatically closed if the specified merge request were merged.",
  "get_issue_comments": "Retrieves all comments for a specific issue to facilitate discussion tracking and team communication.",
  "create_todo_for_issue": "Creates a to-do item for the current user on a specific issue, helping users track issues they need to address or follow up on.",
  "get_milestone_issues": "Retrieves all issues assigned to a specific milestone within a project, allowing project managers to track progress and plan work for that milestone.",
  "get_issue_discussions": "Retrieves all discussion threads and comments for a specific issue within a project, providing a comprehensive view of the conversation history.",
  "get_merge_requests_related_to_issue": "Retrieves all merge requests that are related to a specific issue in a project, showing their details such as state, author, milestone, and pipeline information.",
  "move_issue": "Moves an issue from its current project to a different project, transferring all relevant metadata like labels and milestones with matching names.",
  "subscribe_to_issue": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_issue_participants": "Retrieves a list of users who are participants in a specific GitLab project issue.",
  "get_paginated_issues": "Retrieve a paginated list of issues from a GitLab group or project.",
  "promote_issue_to_epic": "Promotes an existing issue to an epic by adding a comment with the /promote quick action.",
  "reorder_issue": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_issue_notes": "Retrieves all notes for a specific issue in a project, with options to sort and order the results.",
  "track_issue_time": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_group_issues": "Retrieves issues from a specific group with flexible filtering options.",
  "list_issues": "Retrieves issues from GitLab with powerful filtering options.",
  "update_issue": "quote('abc def') -> 'abc%20def'\n\nEach part of a URL, e.g.",
  "get_issue_state_events": "Retrieves a chronological list of state changes for a specific issue in a project, showing when the issue was opened, closed, or reopened, by whom, and at what time."
}