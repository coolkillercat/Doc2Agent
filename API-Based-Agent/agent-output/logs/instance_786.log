Step 0:
act - **MessageAction** (source=EventSource.USER)
CONTENT: Think step by step to perform the following task related to gitlab. Answer the question: ***Tell me the number of commits of the contributor who has the most commits to branch main***
The site URL for gitlab is http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023, use this instead of the normal gitlab URL. 
This task is related to the project: `vinta/awesome-python`.
For API calling, use this access token: glpat-KygcYjwtD2JfA6wU4wBd
For web browsing, You should start from the URL http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python, and this webpage is already logged in and opened for you.
My *name* on gitlab is Byte Blaze; My *username* on gitlab is byteblaze; and my *user id* is 2330.

Below is the list of all APIs you can use and their descriptions:
{'post /api/v4/groups/{id}/wikis/attachments': "Upload a file to the attachment folder inside the wiki's repository. The attachment folder is the `uploads` folder. ", 'delete /api/v4/groups/{id}/wikis/{slug}': 'Delete a wiki page with a given slug. ', 'put /api/v4/groups/{id}/wikis/{slug}': 'Update an existing wiki page. At least one parameter is required to update the wiki page. ', 'get /api/v4/groups/{id}/wikis/{slug}': 'Get a wiki page for a given group. ', 'post /api/v4/groups/{id}/wikis': 'Create a wiki page', 'get /api/v4/groups/{id}/wikis': 'List all wiki pages for a given group. ', 'post /api/v4/groups/{id}/access_tokens/{token_id}/rotate': 'Prerequisites: - You must have a [personal access token with the `api` scope](../user/profile/personal_access_tokens.md#personal-access-token-scopes). Rotate a group access token. Revokes the previous token and creates a new token that expires in one week. In GitLab 16.6 and later, you can use the `expires_at` parameter to set a different expiry date. This non-default expiry date can be up to a maximum of one year from the rotation date. ', 'post /api/v4/groups/{id}/access_tokens': 'Create a [group access token](../user/group/settings/group_access_tokens.md). You must have the Owner role for the group to create group access tokens. ', 'get /api/v4/groups/{id}/access_tokens': 'Get a list of [group access tokens](../user/group/settings/group_access_tokens.md). ', 'delete /api/v4/groups/{id}/access_tokens/{token_id}': 'Revoke a [group access token](../user/group/settings/group_access_tokens.md). ', 'get /api/v4/groups/{id}/access_tokens/{token_id}': 'Get a [group access token](../user/group/settings/group_access_tokens.md) by ID. ', 'get /api/v4/groups/{id}/releases': 'Returns a list of group releases. ', 'get /api/v4/groups/{id}/merge_requests': 'Get all merge requests for this group and its subgroups. ', 'delete /api/v4/groups/{id}/billable_members/{user_id}': 'Removes a billable member from a group and its subgroups and projects. The user does not need to be a group member to qualify for removal. For example, if the user was added directly to a project within the group, you can still use this API to remove them. ', 'get /api/v4/groups/{id}/billable_members/{user_id}/memberships': 'Gets a list of memberships for a billable member of a group. Lists all projects and groups a user is a member of. Only projects and groups within the group hierarchy are included. For instance, if the requested group is `Root Group`, and the requested user is a direct member of both `Root Group / Sub Group One` and `Other Group / Sub Group Two`, then only `Root Group / Sub Group One` will be returned, because `Other Group / Sub Group Two` is not within the `Root Group` hierarchy. The response represents only direct memberships. Inherited memberships are not included. This API endpoint works on top-level groups only. It does not work on subgroups. This API endpoint requires permission to administer memberships for the group. This API endpoint takes [pagination](rest/index.md#pagination) parameters `page` and `per_page` to restrict the list of memberships. ', 'put /api/v4/groups/{id}/members/{user_id}/state': 'Changes the membership state of a user in a group. The state is applied to all subgroups and projects. ', 'get /api/v4/groups/{id}/billable_members': 'Gets a list of group members that count as billable. The list includes members in subgroups and projects. This API endpoint works on top-level groups only. It does not work on subgroups. This function takes [pagination](rest/index.md#pagination) parameters `page` and `per_page` to restrict the list of users. Use the `search` parameter to search for billable group members by name and `sort` to sort the results. ', 'get /api/v4/groups/{id}/pending_members': "For a group and its subgroups and projects, get a list of all members in an `awaiting` state and those who are invited but do not have a GitLab account. This request returns all matching group and project members from all groups and projects in the root group's hierarchy. When the member is an invited user that has not signed up for a GitLab account yet, the invited email address is returned. This API endpoint works on top-level groups only. It does not work on subgroups. This API endpoint requires permission to administer members for the group. This API endpoint takes [pagination](rest/index.md#pagination) parameters `page` and `per_page` to restrict the list of members. ", 'post /api/v4/groups/{id}/members/approve_all': 'Approves all pending users for a group and its subgroups and projects. ', 'put /api/v4/groups/{id}/members/{member_id}/approve': 'Approves a pending user for a group and its subgroups and projects. ', 'delete /api/v4/groups/{id}/members/{user_id}/override': 'Sets the override flag to false and allows LDAP Group Sync to reset the access level to the LDAP-prescribed value. ', 'post /api/v4/groups/{id}/members/{user_id}/override': 'By default, the access level of LDAP group members is set to the value specified by LDAP through Group Sync. You can allow access level overrides by calling this endpoint. ', 'delete /api/v4/groups/{id}/members/{user_id}': 'Removes a user from a group or project where the user has been explicitly assigned a role. The user needs to be a group member to qualify for removal. For example, if the user was added directly to a project within the group but not this group explicitly, you cannot use this API to remove them. See [Remove a billable member from a group](#remove-a-billable-member-from-a-group) for an alternative approach. ', 'put /api/v4/groups/{id}/members/{user_id}': 'Updates a member of a group or project. ', 'get /api/v4/groups/{id}/members/{user_id}': 'Gets a member of a group or project. Returns only direct members and not inherited members through ancestor groups. ', 'post /api/v4/groups/{id}/members': 'Adds a member to a group or project. ', 'get /api/v4/groups/{id}/members': 'Gets a list of group or project members viewable by the authenticated user. Returns only direct members and not inherited members through ancestors groups. This function takes pagination parameters `page` and `per_page` to restrict the list of users. ', 'get /api/v4/groups/{id}/members/all/{user_id}': 'FLAG: On self-managed GitLab, by default this feature is available. To hide the feature per user, an administrator can [disable the feature flag](../administration/feature_flags.md) named `webui_members_inherited_users`. On GitLab.com and GitLab Dedicated, this feature is available. Gets a member of a group or project, including members inherited or invited through ancestor groups. See the corresponding [endpoint to list all inherited members](#list-all-members-of-a-group-or-project-including-inherited-and-invited-members) for details. NOTE: The invited group members have shared membership in the shared group or project. This means that if the requester is a member of a shared group or project, but not a member of an invited private group, then using this endpoint the requester can get all the shared group or project members, including the invited private group members. ', 'get /api/v4/groups/{id}/members/all': 'FLAG: On self-managed GitLab, by default this feature is available. To hide the feature per user, an administrator can [disable the feature flag](../administration/feature_flags.md) named `webui_members_inherited_users`. On GitLab.com and GitLab Dedicated, this feature is available. Gets a list of group or project members viewable by the authenticated user, including inherited members, invited users, and permissions through ancestor groups. If a user is a member of this group or project and also of one or more ancestor groups, only its membership with the highest `access_level` is returned. This represents the effective permission of the user. Members from an invited group are returned if either: - The invited group is public. - The requester is also a member of the invited group. - The requester is a member of the shared group or project. NOTE: The invited group members have shared membership in the shared group or project. This means that if the requester is a member of a shared group or project, but not a member of an invited private group, then using this endpoint the requester can get all the shared group or project members, including the invited private group members. This function takes pagination parameters `page` and `per_page` to restrict the list of users. ', 'get /api/v4/groups/{id}/-/packages/maven/*path/{file_name}': 'Download the maven package file at a group level', 'delete /api/v4/groups/{id}/invitations/{email}': 'Deletes a pending invitation by email address. ', 'put /api/v4/groups/{id}/invitations/{email}': "Updates a pending invitation's access level or access expiry date. ", 'get /api/v4/groups/{id}/invitations': "Gets a list of invited group or project members viewable by the authenticated user. Returns invitations to direct members only, and not through inherited ancestors' groups. This function takes pagination parameters `page` and `per_page` to restrict the list of members. ", 'post /api/v4/groups/{id}/invitations': 'Adds a new member. You can specify a user ID or invite a user by email. ', 'delete /api/v4/groups/{id}/variables/{key}': "Remove a group's variable. If there are multiple variables with the same key, use `filter` to select the correct `environment_scope`. ", 'put /api/v4/groups/{id}/variables/{key}': "Update a group's variable. If there are multiple variables with the same key, use `filter` to select the correct `environment_scope`. ", 'get /api/v4/groups/{id}/variables/{key}': "Get the details of a group's specific variable. If there are multiple variables with the same key, use `filter` to select the correct `environment_scope`. ", 'post /api/v4/groups/{id}/variables': 'Create a new variable. ', 'get /api/v4/groups/{id}/variables': "Get list of a group's variables. ", 'get /api/v4/groups/{id}/packages': 'Get a list of project packages at the group level. When accessed without authentication, only packages of public projects are returned. By default, packages with `default` and `error` status are returned. Use the `status` parameter to view other packages. ', 'post /api/v4/groups/import': 'The maximum import file size can be set by the Administrator on self-managed instances (default is `0` (unlimited)). As an administrator, you can modify the maximum import file size either: - In the [Admin Area](../administration/settings/import_and_export_settings.md). - By using the `max_import_size` option in the [Application settings API](settings.md#change-application-settings). For information on the maximum import file size on GitLab.com, see [Account and limit settings](../user/gitlab_com/index.md#account-and-limit-settings). ', 'post /api/v4/groups/import/authorize': 'Workhorse authorize the group import upload', 'get /api/v4/groups/{id}/export_relations/status': 'View the status of the relations export: ', 'get /api/v4/groups/{id}/export_relations/download': 'Download the finished relations export: ', 'post /api/v4/groups/{id}/export_relations': 'Start a new group relations export: ', 'post /api/v4/groups/{id}/export': 'Start a new group export. ', 'get /api/v4/groups/{id}/export/download': 'Download the finished export. ', 'get /api/v4/groups/{id}/registry/repositories': 'Get a list of registry repositories in a group. ', 'delete /api/v4/groups/{id}/clusters/{cluster_id}': 'Deletes an existing group cluster. Does not remove existing resources within the connected Kubernetes cluster. ', 'put /api/v4/groups/{id}/clusters/{cluster_id}': 'Updates an existing group cluster. ', 'get /api/v4/groups/{id}/clusters/{cluster_id}': 'Gets a single group cluster. ', 'post /api/v4/groups/{id}/clusters/user': 'Adds an existing Kubernetes cluster to the group. ', 'get /api/v4/groups/{id}/clusters': 'Returns a list of group clusters. ', 'get /api/v4/groups/{id}/avatar': 'Get a group avatar. This endpoint can be accessed without authentication if the group is publicly accessible. ', 'delete /api/v4/groups/{id}/deploy_tokens/{token_id}': 'Removes a deploy token from the group. ', 'get /api/v4/groups/{id}/deploy_tokens/{token_id}': "Get a single group's deploy token by ID. ", 'post /api/v4/groups/{id}/deploy_tokens': 'Creates a new deploy token for a group. ', 'get /api/v4/groups/{id}/deploy_tokens': "Get a list of a group's deploy tokens ", 'delete /api/v4/groups/{id}/dependency_proxy/cache': 'Schedules for deletion the cached manifests and blobs for a group. This endpoint requires the Owner role for the group. ', 'post /api/v4/groups/{id}/runners/reset_registration_token': 'WARNING: Runner registration tokens, and support for certain configuration arguments, were [deprecated](https://gitlab.com/gitlab-org/gitlab/-/issues/380872) in GitLab 15.6 and will be removed in GitLab 17.0. After GitLab 17.0, you will no longer be able to reset runner registration tokens and the `reset_registration_token` endpoint will not function. Reset the runner registration token for a group. ', 'get /api/v4/groups/{id}/runners': '', 'delete /api/v4/groups/{id}/ssh_certificates/{ssh_certificates_id}': 'Removes an ssh certificate from a group.', 'post /api/v4/groups/{id}/ssh_certificates': 'Create a new SSH certificate in the group. ', 'get /api/v4/groups/{id}/ssh_certificates': '', 'get /api/v4/groups/{id}/users': 'DETAILS: **Tier:** Premium, Ultimate **Offering:** GitLab.com, Self-managed, GitLab Dedicated **Status:** Experiment Get a list of users for a group. This endpoint returns users that are related to a top-level group regardless of their current membership. For example, users that have a SAML identity connected to the group, or service accounts created by the group or subgroups. This endpoint is an [Experiment](../policy/experiment-beta-support.md) and might be changed or removed without notice. Requires Owner role in the group. ', 'get /api/v4/groups/{id}/provisioned_users': 'DETAILS: **Tier:** Premium, Ultimate **Offering:** GitLab.com, Self-managed, GitLab Dedicated Get a list of users provisioned by a given group. Does not include subgroups. Requires at least the Maintainer role on the group. ', 'post /api/v4/groups/{id}/restore': 'Get all groups that match your string in their name or path. ', 'post /api/v4/groups/{id}/ldap_sync': 'DETAILS: **Tier:** Premium, Ultimate **Offering:** Self-managed Lists LDAP group links. ', 'delete /api/v4/groups/{id}/share/{group_id}': 'Get the [push rules](../user/group/access_and_permissions.md#group-push-rules) of a group. Only available to group owners and administrators. ', 'post /api/v4/groups/{id}/share': 'Share group with another group. Returns `200` and the [group details](#details-of-a-group) on success. ', 'post /api/v4/groups/{id}/transfer': 'Transfer a group to a new parent group or promote a subgroup to a root group', 'get /api/v4/groups/{id}/transfer_locations': 'Retrieve a list of groups to which the user can transfer a group. ', 'post /api/v4/groups/{id}/projects/{project_id}': 'Transfer a project to the group namespace. Available only for admin.', 'get /api/v4/groups/{id}/descendant_groups': 'Get a list of visible descendant groups of this group. When accessed without authentication, only public groups are returned. By default, this request returns 20 results at a time because the API results [are paginated](rest/index.md#pagination).", 'get /api/v4/groups/{id}/projects/shared': 'Get a list of projects shared to this group. When accessed without authentication, only public shared projects are returned. By default, this request returns 20 results at a time because the API results [are paginated](rest/index.md#pagination). ', 'get /api/v4/groups/{id}/projects': 'Get a list of projects in this group. When accessed without authentication, only public projects are returned. By default, this request returns 20 results at a time because the API results [are paginated](rest/index.md#pagination). ', 'delete /api/v4/groups/{id}': 'Only available to group owners and administrators. This endpoint: - On Premium and Ultimate tiers, marks the group for deletion. The deletion happens 7 days later by default, but you can change the retention period in the [instance settings](../administration/settings/visibility_and_access_controls.md#deletion-protection). - On Free tier, removes the group immediately and queues a background job to delete all projects in the group. - Deletes a subgroup immediately if the subgroup is marked for deletion (GitLab 15.4 and later). The endpoint does not immediately delete top-level groups. ', 'get /api/v4/groups/{id}': 'Get all details of a group. This endpoint can be accessed without authentication if the group is publicly accessible. In case the user that requests is an administrator if the group is publicly accessible. With authentication, it returns the `runners_token` and `enabled_git_access_protocol` for the group too, if the user is an administrator or group owner. ', 'put /api/v4/groups/{id}': 'FLAG: On self-managed GitLab, by default `unique_project_download_limit`, `unique_project_download_limit_interval_in_seconds`, `unique_project_download_limit_allowlist` and `auto_ban_user_on_excessive_projects_download` are not available. To make them available, an administrator can [enable the feature flag](../administration/feature_flags.md) named `limit_unique_project_downloads_per_namespace_user`. Updates the project group. Only available to group owners and administrators. ', 'post /api/v4/groups': 'NOTE: On GitLab SaaS, you must use the GitLab UI to create groups without a parent group. You cannot use the API to do this. Creates a new project group. Available only for users who can create groups. ', 'get /api/v4/groups': 'Get a list of visible groups for the authenticated user. When accessed without authentication, only public groups are returned. By default, this request returns 20 results at a time because the API results [are paginated](rest/index.md#pagination). When accessed without authentication, this endpoint also supports [keyset pagination](rest/index.md#keyset-based-pagination): - When requesting consecutive pages of results, you should use keyset pagination. - Beyond a specific offset limit (specified by [max offset allowed by the REST API for offset-based pagination](../administration/instance_limits.md#max-offset-allowed-by-the-rest-api-for-offset-based-pagination)), offset pagination is unavailable.', 'delete /api/v4/groups/{id}/custom_attributes/{key}': 'Delete a custom attribute on a resource. ', 'put /api/v4/groups/{id}/custom_attributes/{key}': 'Set a custom attribute on a resource. The attribute is updated if it already exists, or newly created otherwise. ', 'get /api/v4/groups/{id}/custom_attributes/{key}': 'Get a single custom attribute on a resource. ', 'get /api/v4/groups/{id}/custom_attributes': 'Get all custom attributes on a resource. ', 'delete /api/v4/groups/{id}/badges/{badge_id}': 'Removes a badge from a group. ', 'put /api/v4/groups/{id}/badges/{badge_id}': 'Updates a badge of a group. ', 'get /api/v4/groups/{id}/badges/{badge_id}': 'Gets a badge of a group. ', 'post /api/v4/groups/{id}/badges': 'Adds a badge to a group. ', 'get /api/v4/groups/{id}/badges': "Gets a list of a group's badges. ", 'get /api/v4/groups/{id}/badges/render': 'Returns how the `link_url` and `image_url` final URLs would be after resolving the placeholder interpolation. ', 'delete /api/v4/groups/{id}/access_requests/{user_id}': 'Denies an access request for the given user. ', 'put /api/v4/groups/{id}/access_requests/{user_id}/approve': 'Approves an access request for the given user. ', 'post /api/v4/groups/{id}/access_requests': 'Requests access for the authenticated user to a group or project. ', 'get /api/v4/groups/{id}/access_requests': 'Gets a list of access requests viewable by the authenticated user. ', 'get /api/v4/groups/{id}/audit_events/{audit_event_id}': 'Only available to group owners and administrators. ', 'get /api/v4/groups/{id}/audit_events': '', 'get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/InRelease': 'The signed Release file', 'get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/Release': 'The unsigned Release file', 'get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/Release.gpg': 'The Release file signature', 'get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/by-hash/SHA256/{file_sha256}': 'The installer (udeb) binary files index by hash', 'get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/Packages': 'The installer (udeb) binary files index', 'get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/source/by-hash/SHA256/{file_sha256}': 'The source files index by hash', 'get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/source/Sources': 'The source files index', 'get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/binary-{architecture}/by-hash/SHA256/{file_sha256}': 'The binary files index by hash', 'get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/binary-{architecture}/Packages': 'The binary files index', 'get /api/v4/groups/{id}/-/packages/debian/pool/{distribution}/{project_id}/{letter}/{package_name}/{package_version}/{file_name}': 'Download Debian package', 'delete /api/v4/groups/{id}/-/debian_distributions/{codename}': 'Delete a Debian Distribution', 'put /api/v4/groups/{id}/-/debian_distributions/{codename}': 'Update a Debian Distribution', 'get /api/v4/groups/{id}/-/debian_distributions/{codename}': 'Get a Debian Distribution', 'get /api/v4/groups/{id}/-/debian_distributions/{codename}/key.asc': 'Get a Debian Distribution Key', 'get /api/v4/groups/{id}/-/debian_distributions': 'Get a list of Debian Distributions', 'post /api/v4/groups/{id}/-/debian_distributions': 'Create a Debian Distribution', 'get /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags': 'Get all tags for a given an NPM package', 'delete /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags/{tag}': 'Deletes the given tag', 'put /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags/{tag}': 'Create or Update the given tag for the given NPM package and version', 'post /api/v4/groups/{id}/-/packages/npm/-/npm/v1/security/audits/quick': 'NPM registry quick audit endpoint', 'post /api/v4/groups/{id}/-/packages/npm/-/npm/v1/security/advisories/bulk': 'NPM registry bulk advisory endpoint', 'get /api/v4/groups/{id}/-/packages/npm/*package_name': 'NPM registry metadata endpoint', 'get /api/v4/groups/{id}/-/packages/nuget/index': 'The NuGet V3 Feed Service Index', 'get /api/v4/groups/{id}/-/packages/nuget/symbolfiles/*file_name/*signature/*same_file_name': 'The NuGet Symbol File Download Endpoint', 'get /api/v4/groups/{id}/-/packages/nuget/v2/$metadata': 'The NuGet V2 Feed Package $metadata endpoint', 'get /api/v4/groups/{id}/-/packages/nuget/v2': 'The NuGet V2 Feed Service Index', 'get /api/v4/groups/{id}/-/packages/nuget/metadata/*package_name/*package_version': 'The NuGet Metadata Service - Package name and version level', 'get /api/v4/groups/{id}/-/packages/nuget/metadata/*package_name/index': 'The NuGet Metadata Service - Package name level', 'get /api/v4/groups/{id}/-/packages/nuget/query': 'The NuGet Search Service', 'get /api/v4/groups/{id}/-/packages/pypi/simple/*package_name': 'The PyPi Simple Group Package Endpoint', 'get /api/v4/groups/{id}/-/packages/pypi/simple': 'The PyPi Simple Group Index Endpoint', 'get /api/v4/groups/{id}/-/packages/pypi/files/{sha256}/*file_identifier': 'Download a package file from a group', 'post /api/v4/projects/{id}/wikis/attachments': "Uploads a file to the attachment folder inside the wiki's repository. The  attachment folder is the `uploads` folder. ", 'delete /api/v4/projects/{id}/wikis/{slug}': 'Deletes a wiki page with a given slug. ', 'put /api/v4/projects/{id}/wikis/{slug}': 'Updates an existing wiki page. At least one parameter is required to update the wiki page. ', 'get /api/v4/projects/{id}/wikis/{slug}': 'Get a wiki page for a given project. ', 'post /api/v4/projects/{id}/wikis': 'Create a new wiki page for the given repository with the given title, slug, and content. ', 'get /api/v4/projects/{id}/wikis': 'Get all wiki pages for a given project. ', 'get /api/v4/projects/{id}/repository/tags/{tag_name}/signature': 'Get the [X.509 signature from a tag](../user/project/repository/signed_commits/x509.md), if it is signed. Unsigned tags return a `404 Not Found` response. ', 'delete /api/v4/projects/{id}/repository/tags/{tag_name}': 'Deletes a tag of a repository with given name. ', 'get /api/v4/projects/{id}/repository/tags/{tag_name}': 'Get a specific repository tag determined by its name. This endpoint can be accessed without authentication if the repository is publicly accessible. ', 'post /api/v4/projects/{id}/repository/tags': 'Creates a new tag in the repository that points to the supplied ref. ', 'get /api/v4/projects/{id}/repository/tags': 'Get a list of repository tags from a project, sorted by update date and time in descending order. NOTE: If the repository is publicly accessible, authentication (`--header "PRIVATE-TOKEN: <your_access_token>"`) is not required. ', 'put /api/v4/projects/{id}/repository/submodules/{submodule}': "In some workflows, especially automated ones, it can be useful to update a submodule's reference to keep up to date other projects that use it. This endpoint allows you to update a [Git submodule](https://git-scm.com/book/en/v2/Git-Tools-Submodules) reference in a specific branch. ", 'get /api/v4/projects/{id}/merge_requests/{eventable_id}/resource_milestone_events/{event_id}': 'Returns a single milestone event for a specific project merge request ', 'get /api/v4/projects/{id}/merge_requests/{eventable_id}/resource_milestone_events': 'Gets a list of all milestone events for a single merge request. ', 'get /api/v4/projects/{id}/issues/{eventable_id}/resource_milestone_events/{event_id}': 'Returns a single milestone event for a specific project issue ', 'get /api/v4/projects/{id}/issues/{eventable_id}/resource_milestone_events': 'Gets a list of all milestone events for a single issue. ', 'post /api/v4/projects/{id}/access_tokens/{token_id}/rotate': 'Prerequisites: - You must have a [personal access token with the `api` scope](../user/profile/personal_access_tokens.md#personal-access-token-scopes). Rotate a project access token. Revokes the previous token and creates a new token that expires in one week. In GitLab 16.6 and later, you can use the `expires_at` parameter to set a different expiry date. This non-default expiry date can be up to a maximum of one year from the rotation date. ', 'post /api/v4/projects/{id}/access_tokens': 'Create a [project access token](../user/project/settings/project_access_tokens.md). When you create a project access token, the maximum role (access level) you set depends on if you have the Owner or Maintainer role for the group. For example, the maximum role that can be set is: - Owner (`50`), if you have the Owner role for the project. - Maintainer (`40`), if you have the Maintainer role on the project. ', 'get /api/v4/projects/{id}/access_tokens': 'Get a list of [project access tokens](../user/project/settings/project_access_tokens.md). ', 'delete /api/v4/projects/{id}/access_tokens/{token_id}': 'Revoke a [project access token](../user/project/settings/project_access_tokens.md). ', 'get /api/v4/projects/{id}/access_tokens/{token_id}': 'Get a [project access token](../user/project/settings/project_access_tokens.md) by ID. ', 'post /api/v4/projects/{id}/repository/changelog': "Changelogs support these attributes: | Attribute | Type     | Required   | Description | | :-------- | :------- | :--------- | :---------- | | `version` | string   | yes | The version to generate the changelog for. The format must follow [semantic versioning](https://semver.org/). | | `branch`  | string   | no | The branch to commit the changelog changes to. Defaults to the project's default branch. | | `config_file` | string   | no | Path to the changelog configuration file in the project's Git repository. Defaults to `.gitlab/changelog_config.yml`. | | `date`    | datetime | no | The date and time of the release. Defaults to the current time. | | `file`    | string   | no | The file to commit the changes to. Defaults to `CHANGELOG.md`. | | `from`    | string   | no | The SHA of the commit that marks the beginning of the range of commits to include in the changelog. This commit isn't included in the changelog. | | `message` | string   | no | The commit message to use when committing the changes. Defaults to `Add changelog for version X`, where `X` is the value of the `version` argument. | | `to`      | string   | no | The SHA of the commit that marks the end of the range of commits to include in the changelog. This commit _is_ included in the changelog. Defaults to the branch specified in the `branch` attribute. Limited to 15000 commits unless the feature flag `changelog_commits_limitation` is disabled. | | `trailer` | string   | no | The Git trailer to use for including commits. Defaults to `Changelog`. Case-sensitive: `Example` does not match `example` or `eXaMpLE`. | # ", 'get /api/v4/projects/{id}/repository/changelog': "Generate changelog data based on commits in a repository, without committing them to a changelog file. Works exactly like `POST /projects/:id/repository/changelog`, except the changelog data isn't committed to any changelog file. ", 'get /api/v4/projects/{id}/repository/merge_base': 'Get the common ancestor for 2 or more refs, such as commit SHAs, branch names, or tags. ', 'get /api/v4/projects/{id}/repository/contributors': 'Get repository contributors list. This endpoint can be accessed without authentication if the repository is publicly accessible. ', 'get /api/v4/projects/{id}/repository/compare': 'This endpoint can be accessed without authentication if the repository is publicly accessible. Diffs can have an empty diff string if [diff limits](../development/merge_request_concepts/diffs/index.md#diff-limits) are reached. ', 'get /api/v4/projects/{id}/repository/archive': 'Get an archive of the repository', 'get /api/v4/projects/{id}/repository/blobs/{sha}': 'Allows you to receive information, such as size and content, about blobs in a repository. Blob content is Base64 encoded. This endpoint can be accessed without authentication, if the repository is publicly accessible. ', 'get /api/v4/projects/{id}/repository/blobs/{sha}/raw': 'Get the raw file contents for a blob, by blob SHA. This endpoint can be accessed without authentication if the repository is publicly accessible. ', 'get /api/v4/projects/{id}/repository/tree': 'Get a list of repository files and directories in a project. This endpoint can be accessed without authentication if the repository is publicly accessible. This command provides essentially the same features as the `git ls-tree` command. For more information, refer to the section [Tree Objects](https://git-scm.com/book/en/v2/Git-Internals-Git-Objects/#_tree_objects) in the Git internals documentation. WARNING: This endpoint changed to [keyset-based pagination](rest/index.md#keyset-based-pagination) in GitLab 15.0. Iterating pages of results with a number (`?page=2`) is unsupported. ', 'delete /api/v4/projects/{id}/remote_mirrors/{mirror_id}': 'Delete a remote mirror. ', 'put /api/v4/projects/{id}/remote_mirrors/{mirror_id}': 'Toggle a remote mirror on or off, or change which types of branches are mirrored: ', 'get /api/v4/projects/{id}/remote_mirrors/{mirror_id}': 'Returns a remote mirror and its statuses: ', 'post /api/v4/projects/{id}/remote_mirrors': 'Push mirroring is disabled by default. To enable it, include the optional parameter `enabled` when you create the mirror: ', 'get /api/v4/projects/{id}/remote_mirrors': 'Returns an array of remote mirrors and their statuses: ', 'post /api/v4/projects/{id}/releases/{tag_name}/evidence': 'Collect release evidence', 'delete /api/v4/projects/{id}/releases/{tag_name}': 'Delete a release', 'put /api/v4/projects/{id}/releases/{tag_name}': 'Update a release', 'get /api/v4/projects/{id}/releases/{tag_name}': 'Get a release by a tag name', 'post /api/v4/projects/{id}/releases': 'Create a release', 'get /api/v4/projects/{id}/releases': 'List Releases', 'get /api/v4/projects/{id}/releases/permalink/latest(/)(*suffix_path)': 'Get the latest project release', 'get /api/v4/projects/{id}/releases/{tag_name}/downloads/*direct_asset_path': 'Download a project release asset file', 'delete /api/v4/projects/{id}/protected_tags/{name}': 'Unprotects the given protected tag or wildcard protected tag. ', 'get /api/v4/projects/{id}/protected_tags/{name}': 'Gets a single protected tag or wildcard protected tag. ', 'post /api/v4/projects/{id}/protected_tags': 'Protects a single repository tag, or several project repository tags, using a wildcard protected tag. ', 'get /api/v4/projects/{id}/protected_tags': 'Gets a list of [protected tags](../user/project/protected_tags.md) from a project. This function takes pagination parameters `page` and `per_page` to restrict the list of protected tags. ', 'delete /api/v4/projects/{id}/protected_branches/{name}': 'Unprotects the given protected branch or wildcard protected branch. ', 'patch /api/v4/projects/{id}/protected_branches/{name}': 'Updates a protected branch. ', 'get /api/v4/projects/{id}/protected_branches/{name}': 'Gets a single protected branch or wildcard protected branch. ', 'post /api/v4/projects/{id}/protected_branches': 'Protects a single repository branch or several project repository branches using a wildcard protected branch. ', 'get /api/v4/projects/{id}/protected_branches': 'Gets a list of [protected branches](../user/project/protected_branches.md) from a project as they are defined in the UI. If a wildcard is set, it is returned instead of the exact name of the branches that match that wildcard. ', 'post /api/v4/projects/{id}/restore': 'Uploads a file to the specified project to be used in an issue or merge request description, or a comment. ', 'get /api/v4/projects/{id}/storage': 'Get the path to repository storage for specified project if Gitaly Cluster is not being used. If Gitaly Cluster is being used, see [Praefect-generated replica paths](../administration/gitaly/index.md#praefect-generated-replica-paths). Available for administrators only. ', 'get /api/v4/projects/{id}/transfer_locations': 'Retrieve a list of groups to which the user can transfer a project. ', 'put /api/v4/projects/{id}/transfer': 'See the [Project documentation](../user/project/settings/migrate_projects.md#transfer-a-project-to-another-namespace) for prerequisites to transfer a project. ', 'post /api/v4/projects/{id}/repository_size': 'Start a task to recalculate repository size for a project', 'post /api/v4/projects/{id}/housekeeping': 'Get the [push rules](../user/project/repository/push_rules.md) of a project. ', 'get /api/v4/projects/{id}/groups': 'Get a list of ancestor groups for this project. ', 'get /api/v4/projects/{id}/users': 'Get the users list of a project. ', 'post /api/v4/projects/{id}/uploads': 'Uploads a file to the specified project to be used in an issue or merge request description, or a comment. ', 'post /api/v4/projects/{id}/uploads/authorize': 'Workhorse authorize the file upload', 'post /api/v4/projects/{id}/import_project_members/{project_id}': "Import members from another project. If the importing member's role in the target project is: - Maintainer, then members with the Owner role in the source project are imported with the Maintainer role. - Owner, then members with the Owner role in the source project are imported with the Owner role. ", 'delete /api/v4/projects/{id}/share/{group_id}': "Import members from another project. If the importing member's role in the target project is: - Maintainer, then members with the Owner role in the source project are imported with the Maintainer role. - Owner, then members with the Owner role in the source project are imported with the Owner role. ", 'post /api/v4/projects/{id}/share': 'Unshare the project from the group. Returns `204` and no content on success. ', 'delete /api/v4/projects/{id}/fork': 'Search for projects by name which are accessible to the authenticated user. This endpoint can be accessed without authentication if the project is publicly accessible. ', 'post /api/v4/projects/{id}/fork': 'Forks a project into the user namespace of the authenticated user or the one provided. The forking operation for a project is asynchronous and is completed in a background job. The request returns immediately. To determine whether the fork of the project has completed, query the `import_status` for the new project. ', 'post /api/v4/projects/{id}/fork/{forked_from_id}': '', 'delete /api/v4/projects/{id}': 'This endpoint: - Deletes a project including all associated resources (including issues and   merge requests). - On [Premium or Ultimate](https://about.gitlab.com/pricing/) tiers,   [delayed project deletion](../user/project/working_with_projects.md#delayed-project-deletion)   is applied if enabled. - From [GitLab 15.11](https://gitlab.com/gitlab-org/gitlab/-/issues/396500) on   [Premium or Ultimate](https://about.gitlab.com/pricing/) tiers, deletes a project immediately if the project is already   marked for deletion, and the `permanently_remove` and `full_path` parameters are passed. - From [GitLab 16.0](https://gitlab.com/gitlab-org/gitlab/-/issues/220382) on   [Premium or Ultimate](https://about.gitlab.com/pricing/) tiers, delayed project deletion is enabled by default.   The deletion happens after the number of days specified in the   [default deletion delay](../administration/settings/visibility_and_access_controls.md#deletion-protection). WARNING: The option to delete projects immediately from deletion protection settings in the Admin Area was [deprecated](https://gitlab.com/gitlab-org/gitlab/-/issues/389557) in GitLab 15.9 and removed in GitLab 16.0. ', 'put /api/v4/projects/{id}': "Updates an existing project. If your HTTP repository isn't publicly accessible, add authentication information to the URL `https://username:password@gitlab.company.com/group/project.git`, where `password` is a public access key with the `api` scope enabled. ", 'get /api/v4/projects/{id}': 'Get a specific project. This endpoint can be accessed without authentication if the project is publicly accessible. ', 'get /api/v4/projects/{id}/languages': 'Archives the project if the user is either an administrator or the owner of this project. This action is idempotent, thus archiving an already archived project does not change the project. ', 'get /api/v4/projects/{id}/starrers': 'List the users who starred the specified project. ', 'post /api/v4/projects/{id}/unstar': 'Unstars a given project. Returns status code `304` if the project is not starred. ', 'post /api/v4/projects/{id}/star': 'Stars a given project. Returns status code `304` if the project is already starred. ', 'post /api/v4/projects/{id}/unarchive': "Unarchives the project if the user is either an administrator or the owner of this project. This action is idempotent, thus unarchiving a non-archived project doesn't change the project. ", 'post /api/v4/projects/{id}/archive': 'Archives the project if the user is either an administrator or the owner of this project. This action is idempotent, thus archiving an already archived project does not change the project. ', 'get /api/v4/projects/{id}/pages_access': 'Check pages access of this project', 'get /api/v4/projects/{id}/forks': 'List the projects accessible to the calling user that have an established, forked relationship with the specified project ', 'get /api/v4/projects/{id}/share_locations': 'Get a list of groups that can be shared with a project ', 'post /api/v4/projects/user/{user_id}': "Creates a new project owned by the specified user. Available only for administrators. If your HTTP repository isn't publicly accessible, add authentication information to the URL `https://username:password@gitlab.company.com/group/project.git`, where `password` is a public access key with the `api` scope enabled. ", 'post /api/v4/projects': "Creates a new project owned by the authenticated user. If your HTTP repository isn't publicly accessible, add authentication information to the URL `https://username:password@gitlab.company.com/group/project.git`, where `password` is a public access key with the `api` scope enabled. ", 'get /api/v4/projects': 'Get a list of all visible projects across GitLab for the authenticated user. When accessed without authentication, only public projects with _simple_ fields are returned. ', 'delete /api/v4/projects/{id}/custom_attributes/{key}': 'Delete a custom attribute on a resource. ', 'put /api/v4/projects/{id}/custom_attributes/{key}': 'Set a custom attribute on a resource. The attribute is updated if it already exists, or newly created otherwise. ', 'get /api/v4/projects/{id}/custom_attributes/{key}': 'Get a single custom attribute on a resource. ', 'get /api/v4/projects/{id}/custom_attributes': 'Get all custom attributes on a resource. ', 'get /api/v4/projects/{id}/templates/{type}/{name}': '', 'get /api/v4/projects/{id}/templates/{type}': '', 'get /api/v4/projects/{id}/statistics': '', 'get /api/v4/projects/{id}/snapshot': 'Get the path to repository storage for specified project if Gitaly Cluster is not being used. If Gitaly Cluster is being used, see [Praefect-generated replica paths](../administration/gitaly/index.md#praefect-generated-replica-paths). Available for administrators only. ', 'get /api/v4/projects/{id}/snippets/{snippet_id}/user_agent_detail': 'Available only for users with administrator access. ', 'get /api/v4/projects/{id}/snippets/{snippet_id}/files/{ref}/{file_path}/raw': 'Returns the raw file content as plain text. ', 'get /api/v4/projects/{id}/snippets/{snippet_id}/raw': 'Returns the raw project snippet as plain text. ', 'delete /api/v4/projects/{id}/snippets/{snippet_id}': 'Deletes an existing project snippet. This returns a `204 No Content` status code if the operation was successfully or `404` if the resource was not found. ', 'put /api/v4/projects/{id}/snippets/{snippet_id}': 'Updates an existing project snippet. The user must have permission to change an existing snippet. Updates to snippets with multiple files must use the `files` attribute. ', 'get /api/v4/projects/{id}/snippets/{snippet_id}': 'Get a single project snippet. ', 'post /api/v4/projects/{id}/snippets': 'Creates a new project snippet. The user must have permission to create new snippets. ', 'get /api/v4/projects/{id}/snippets': 'Get a list of project snippets. ', 'post /api/v4/projects/{id}/repository_storage_moves': '', 'get /api/v4/projects/{id}/repository_storage_moves': '', 'get /api/v4/projects/{id}/repository_storage_moves/{repository_storage_move_id}': '', 'delete /api/v4/projects/{id}/packages/{package_id}': 'Deletes a project package. ', 'get /api/v4/projects/{id}/packages/{package_id}': 'Get a single project package. Only packages with status `default` are returned. ', 'get /api/v4/projects/{id}/packages/{package_id}/pipelines': 'Get a list of pipelines for a single package. The results are sorted by `id` in descending order. The results are [paginated](rest/index.md#keyset-based-pagination) and return up to 20 records per page. ', 'get /api/v4/projects/{id}/packages': 'Get a list of project packages. All package types are included in results. When accessed without authentication, only packages of public projects are returned. By default, packages with `default` and `error` status are returned. Use the `status` parameter to view other packages. ', 'delete /api/v4/projects/{id}/job_token_scope/allowlist/{target_project_id}': 'Remove a project from the [CI/CD job token inbound allowlist](../ci/jobs/ci_job_token.md#add-a-group-or-project-to-the-job-token-allowlist) of a project. ', 'delete /api/v4/projects/{id}/job_token_scope/groups_allowlist/{target_group_id}': 'Remove a group from the CI/CD job token allowlist of a project. ', 'post /api/v4/projects/{id}/job_token_scope/groups_allowlist': 'Add a group to the CI/CD job token allowlist of a project. ', 'get /api/v4/projects/{id}/job_token_scope/groups_allowlist': 'Fetch the CI/CD job token allowlist of groups (job token scope) of a project. ', 'post /api/v4/projects/{id}/job_token_scope/allowlist': 'Add a project to the [CI/CD job token inbound allowlist](../ci/jobs/ci_job_token.md#add-a-group-or-project-to-the-job-token-allowlist) of a project. ', 'get /api/v4/projects/{id}/job_token_scope/allowlist': 'Fetch the [CI/CD job token inbound allowlist](../ci/jobs/ci_job_token.md#add-a-group-or-project-to-the-job-token-allowlist) (job token scope) of a project. ', 'patch /api/v4/projects/{id}/job_token_scope': 'Patch the [**Limit access _to_ this project** setting](../ci/jobs/ci_job_token.md#add-a-group-or-project-to-the-job-token-allowlist) (job token scope) of a project. ', 'get /api/v4/projects/{id}/job_token_scope': 'Fetch the [CI/CD job token access settings](../ci/jobs/ci_job_token.md#control-job-token-access-to-your-project) (job token scope) of a project. ', 'post /api/v4/projects/remote-import-s3': '', 'post /api/v4/projects/remote-import': 'DETAILS: **Status:** Beta FLAG: On self-managed GitLab, by default this feature is available. To hide the feature, an administrator can [disable the feature flag](../administration/feature_flags.md) named `import_project_from_remote_file`. On GitLab.com and GitLab Dedicated, this feature is available. ', 'get /api/v4/projects/{id}/import': 'Get the status of an import. ', 'post /api/v4/projects/import': '', 'post /api/v4/projects/import/authorize': 'Workhorse authorize the project import upload', 'delete /api/v4/projects/{id}/hooks/{hook_id}': 'Trigger a test hook for a specified project. In GitLab 17.0 and later, this endpoint has a special rate limit of three requests per minute per project hook. To disable this limit on self-managed GitLab and GitLab Dedicated, an administrator can [disable the feature flag](../administration/feature_flags.md) named `web_hook_test_api_endpoint_rate_limit`. ', 'put /api/v4/projects/{id}/hooks/{hook_id}': 'Edits a hook for a specified project. ', 'get /api/v4/projects/{id}/hooks/{hook_id}': 'Get a specific hook for a project. ', 'post /api/v4/projects/{id}/hooks': 'Adds a hook to a specified project. ', 'get /api/v4/projects/{id}/hooks': 'Get a specific hook for a project. ', 'get /api/v4/projects/{id}/export_relations/status': 'View the status of the relations export: ', 'get /api/v4/projects/{id}/export_relations/download': 'Download the finished relations export: ', 'post /api/v4/projects/{id}/export_relations': 'Start a new project relations export: ', 'post /api/v4/projects/{id}/export': "Start a new export. The endpoint also accepts an `upload` hash parameter. It contains all the necessary information to upload the exported project to a web server or to any S3-compatible platform. For exports, GitLab: - Only supports binary data file uploads to the final server. - Sends the `Content-Type: application/gzip` header with upload requests. Ensure that your pre-signed URL includes this   as part of the signature. - Can take some time to complete the project export process. Make sure the upload URL doesn't have a short expiration   time and is available throughout the export process. - Administrators can modify the maximum export file size. By default, the maximum is unlimited (`0`). To change this,   edit `max_export_size` using either:   - [GitLab UI](../administration/settings/import_and_export_settings.md).   - [Application settings API](settings.md#change-application-settings) - Has a fixed limit for the maximum import file size on GitLab.com. For more information, see   [Account and limit settings](../user/gitlab_com/index.md#account-and-limit-settings). The `upload[url]` parameter is required if the `upload` parameter is present. For uploads to Amazon S3, refer to [Generating a pre-signed URL for uploading objects](https://docs.aws.amazon.com/AmazonS3/latest/userguide/PresignedUrlUploadObject.html) documentation scripts to generate the `upload[url]`. ", 'get /api/v4/projects/{id}/export': 'Get the status of export. ', 'get /api/v4/projects/{id}/export/download': 'Download the finished export. ', 'get /api/v4/projects/{id}/events': 'NOTE: This endpoint has been around longer than the others. Documentation was formerly located in the [Projects API pages](projects.md). Get a list of visible events for a particular project. ', 'delete /api/v4/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}': 'Delete a registry repository tag. ', 'get /api/v4/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}': 'Get details of a registry repository tag. ', 'delete /api/v4/projects/{id}/registry/repositories/{repository_id}/tags': 'Delete registry repository tags in bulk based on given criteria. <i class="fa fa-youtube-play youtube" aria-hidden="true"></i> For an overview, see [Use the container registry API to delete all tags except *](https://youtu.be/Hi19bKe_xsg). ', 'get /api/v4/projects/{id}/registry/repositories/{repository_id}/tags': 'Get a list of tags for given registry repository. ', 'delete /api/v4/projects/{id}/registry/repositories/{repository_id}': 'Delete a repository in registry. This operation is executed asynchronously and might take some time to get executed. ', 'get /api/v4/projects/{id}/registry/repositories': 'Get a list of registry repositories in a project. ', 'delete /api/v4/projects/{id}/clusters/{cluster_id}': 'Deletes an existing project cluster. Does not remove existing resources within the connected Kubernetes cluster. ', 'put /api/v4/projects/{id}/clusters/{cluster_id}': 'Updates an existing project cluster. ', 'get /api/v4/projects/{id}/clusters/{cluster_id}': 'Gets a single project cluster. ', 'post /api/v4/projects/{id}/clusters/user': 'Adds an existing Kubernetes cluster to the project. ', 'get /api/v4/projects/{id}/clusters': 'Returns a list of project clusters. ', 'get /api/v4/projects/{id}/avatar': 'To remove a project avatar, use a blank value for the `avatar` attribute. Example request: ```shell curl --request PUT --header "PRIVATE-TOKEN: <your_access_token>" \\      --data "avatar=" "https://gitlab.example.com/api/v4/projects/5" ``` ', 'delete /api/v4/projects/{id}/pages/domains/{domain}': 'Deletes an existing project Pages domain. ', 'put /api/v4/projects/{id}/pages/domains/{domain}': 'Updates an existing project Pages domain. The user must have permissions to change an existing Pages domains. ', 'get /api/v4/projects/{id}/pages/domains/{domain}': 'Get a single project Pages domain. The user must have permissions to view Pages domains. ', 'post /api/v4/projects/{id}/pages/domains': 'Creates a new Pages domain. The user must have permissions to create new Pages domains. ', 'get /api/v4/projects/{id}/pages/domains': 'Get a list of project Pages domains. The user must have permissions to view Pages domains. ', 'get /api/v4/projects/{id}/pages': 'Prerequisites: - You must have at least the Maintainer role for the project. List Pages settings for the project. ', 'delete /api/v4/projects/{id}/pages': 'Prerequisites: - You must have administrator access to the instance. Remove Pages. ', 'delete /api/v4/projects/{id}/packages/{package_id}/package_files/{package_file_id}': "WARNING: Deleting a package file may corrupt your package making it unusable or unpullable from your package manager client. When deleting a package file, be sure that you understand what you're doing. Delete a package file: ", 'get /api/v4/projects/{id}/packages/{package_id}/package_files': 'Get a list of package files of a single package. ', 'delete /api/v4/projects/{id}/metrics/user_starred_dashboards': '', 'post /api/v4/projects/{id}/metrics/user_starred_dashboards': '', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/versions/{version_id}': 'Get a single merge request diff version. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/versions': 'Get a list of merge request diff versions. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/closes_issues': 'Get all the issues that would be closed by merging the provided merge request. ', 'put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/rebase': 'Automatically rebase the `source_branch` of the merge request against its `target_branch`. ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/cancel_merge_when_pipeline_succeeds': '', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/merge_ref': "Merge the changes between the merge request source and target branches into `refs/merge-requests/:iid/merge` ref, of the target project repository, if possible. This ref has the state the target branch would have if a regular merge action was taken. This action isn't a regular merge action, because it doesn't change the merge request target branch state in any manner. This ref (`refs/merge-requests/:iid/merge`) isn't necessarily overwritten when submitting requests to this API, though it makes sure the ref has the latest possible state. ", 'put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/merge': 'Accept and merge changes submitted with merge request using this API. ', 'put /api/v4/projects/{id}/merge_requests/{merge_request_iid}': 'Updates an existing merge request. You can change the target branch, title, or even close the MR. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}': 'Shows information about a single merge request. ', 'delete /api/v4/projects/{id}/merge_requests/{merge_request_iid}': 'Only for administrators and project owners. Deletes the merge request in question. ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/pipelines': "Create a new [pipeline for a merge request](../ci/pipelines/merge_request_pipelines.md). A pipeline created from this endpoint doesn't run a regular branch/tag pipeline. It requires `.gitlab-ci.yml` to be configured with `only: [merge_requests]` to create jobs. The new pipeline can be: - A detached merge request pipeline. - A [merged results pipeline](../ci/pipelines/merged_results_pipelines.md)   if the [project setting is enabled](../ci/pipelines/merged_results_pipelines.md#enable-merged-results-pipelines). ", 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/pipelines': 'Get a list of merge request pipelines. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/diffs': 'List diffs of the files changed in a merge request. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/changes': 'WARNING: This endpoint was [deprecated](https://gitlab.com/gitlab-org/gitlab/-/issues/322117) in GitLab 15.7 and is scheduled for removal in API v5. Use the [List merge request diffs](#list-merge-request-diffs) endpoint instead. Shows information about the merge request including its files and changes. ', 'delete /api/v4/projects/{id}/merge_requests/{merge_request_iid}/context_commits': 'Delete a list of merge request context commits. ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/context_commits': 'Create a list of merge request context commits. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/context_commits': 'Get a list of merge request context commits. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/commits': 'Get a list of merge request commits. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reviewers': 'Get a list of merge request reviewers. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/participants': 'Get a list of merge request participants. ', 'post /api/v4/projects/{id}/merge_requests': 'Creates a new merge request. ', 'get /api/v4/projects/{id}/merge_requests': 'Get all merge requests for this project. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/time_stats': 'To track which state was set, who did it, and when it happened, check out [Resource state events API](resource_state_events.md#merge-requests). ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_spent_time': '', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/add_spent_time': 'Adds spent time for this merge request. ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_time_estimate': 'Adds spent time for this merge request. ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/time_estimate': 'Resets the estimated time for this merge request to 0 seconds. ', 'post /api/v4/projects/{id}/create_ci_config': 'Creates merge request for missing ci config in project', 'delete /api/v4/projects/{id}/members/{user_id}': 'Removes a user from a group or project where the user has been explicitly assigned a role. The user needs to be a group member to qualify for removal. For example, if the user was added directly to a project within the group but not this group explicitly, you cannot use this API to remove them. See [Remove a billable member from a group](#remove-a-billable-member-from-a-group) for an alternative approach. ', 'put /api/v4/projects/{id}/members/{user_id}': 'Updates a member of a group or project. ', 'get /api/v4/projects/{id}/members/{user_id}': 'Gets a member of a group or project. Returns only direct members and not inherited members through ancestor groups. ', 'post /api/v4/projects/{id}/members': 'Adds a member to a group or project. ', 'get /api/v4/projects/{id}/members': 'Gets a list of group or project members viewable by the authenticated user. Returns only direct members and not inherited members through ancestors groups. This function takes pagination parameters `page` and `per_page` to restrict the list of users. ', 'get /api/v4/projects/{id}/members/all/{user_id}': 'FLAG: On self-managed GitLab, by default this feature is available. To hide the feature per user, an administrator can [disable the feature flag](../administration/feature_flags.md) named `webui_members_inherited_users`. On GitLab.com and GitLab Dedicated, this feature is available. Gets a member of a group or project, including members inherited or invited through ancestor groups. See the corresponding [endpoint to list all inherited members](#list-all-members-of-a-group-or-project-including-inherited-and-invited-members) for details. NOTE: The invited group members have shared membership in the shared group or project. This means that if the requester is a member of a shared group or project, but not a member of an invited private group, then using this endpoint the requester can get all the shared group or project members, including the invited private group members. ', 'get /api/v4/projects/{id}/members/all': 'FLAG: On self-managed GitLab, by default this feature is available. To hide the feature per user, an administrator can [disable the feature flag](../administration/feature_flags.md) named `webui_members_inherited_users`. On GitLab.com and GitLab Dedicated, this feature is available. Gets a list of group or project members viewable by the authenticated user, including inherited members, invited users, and permissions through ancestor groups. If a user is a member of this group or project and also of one or more ancestor groups, only its membership with the highest `access_level` is returned. This represents the effective permission of the user. Members from an invited group are returned if either: - The invited group is public. - The requester is also a member of the invited group. - The requester is a member of the shared group or project. NOTE: The invited group members have shared membership in the shared group or project. This means that if the requester is a member of a shared group or project, but not a member of an invited private group, then using this endpoint the requester can get all the shared group or project members, including the invited private group members. This function takes pagination parameters `page` and `per_page` to restrict the list of users. ', 'put /api/v4/projects/{id}/packages/maven/*path/{file_name}': 'Upload the maven package file', 'get /api/v4/projects/{id}/packages/maven/*path/{file_name}': 'Download the maven package file at a project level', 'put /api/v4/projects/{id}/packages/maven/*path/{file_name}/authorize': 'Workhorse authorize the maven package file upload', 'post /api/v4/projects/{id}/ci/lint': 'Checks if CI/CD YAML configuration is valid. This endpoint has namespace specific context. ', 'get /api/v4/projects/{id}/ci/lint': "Checks if a project's `.gitlab-ci.yml` configuration in a given ref (the `content_ref` parameter, by default `HEAD` of the project's default branch) is valid. This endpoint uses all namespace specific data available, including variables and local includes. ", 'delete /api/v4/projects/{id}/issues/{issue_iid}/links/{issue_link_id}': 'Deletes an issue link, thus removes the two-way relationship. ', 'get /api/v4/projects/{id}/issues/{issue_iid}/links/{issue_link_id}': 'Gets details about an issue link. ', 'post /api/v4/projects/{id}/issues/{issue_iid}/links': 'Creates a two-way relation between two issues. The user must be allowed to update both issues to succeed. ', 'get /api/v4/projects/{id}/issues/{issue_iid}/links': "Get a list of a given issue's [linked issues](../user/project/issues/related_issues.md), sorted by the relationship creation datetime (ascending). Issues are filtered according to the user authorizations. ", 'delete /api/v4/projects/{id}/invitations/{email}': 'Deletes a pending invitation by email address. ', 'put /api/v4/projects/{id}/invitations/{email}': "Updates a pending invitation's access level or access expiry date. ", 'get /api/v4/projects/{id}/invitations': "Gets a list of invited group or project members viewable by the authenticated user. Returns invitations to direct members only, and not through inherited ancestors' groups. This function takes pagination parameters `page` and `per_page` to restrict the list of members. ", 'post /api/v4/projects/{id}/invitations': 'Adds a new member. You can specify a user ID or invite a user by email. ', 'post /api/v4/projects/{id}/integrations/slack_slash_commands/trigger': 'Trigger a slash command for slack-slash-commands', 'post /api/v4/projects/{id}/integrations/mattermost_slash_commands/trigger': 'Trigger a slash command for mattermost-slash-commands', 'get /api/v4/projects/{id}/integrations/{slug}': 'Get an integration settings', 'delete /api/v4/projects/{id}/integrations/{slug}': 'Disable an integration', 'put /api/v4/projects/{id}/integrations/mock-monitoring': 'Create/Edit Mock Monitoring integration', 'put /api/v4/projects/{id}/integrations/mock-ci': 'Disable the Mock CI integration for a project. Integration settings are reset. ', 'put /api/v4/projects/{id}/integrations/google-cloud-platform-workload-identity-federation': 'Set up the Google Cloud Identity and Access Management integration for a project. ', 'put /api/v4/projects/{id}/integrations/google-cloud-platform-artifact-registry': 'Set up the Google Artifact Management integration for a project. ', 'put /api/v4/projects/{id}/integrations/git-guardian': 'Set up the GitGuardian integration for a project. ', 'put /api/v4/projects/{id}/integrations/github': 'Set up the GitHub integration for a project. ', 'put /api/v4/projects/{id}/integrations/squash-tm': 'Get the Squash TM integration settings for a project. ', 'put /api/v4/projects/{id}/integrations/zentao': 'Create/Edit Zentao integration', 'put /api/v4/projects/{id}/integrations/webex-teams': 'Set up Webex Teams for a project. ', 'put /api/v4/projects/{id}/integrations/unify-circuit': 'Set up the Unify Circuit integration for a project. ', 'put /api/v4/projects/{id}/integrations/telegram': 'Set up the Telegram integration for a project. ', 'put /api/v4/projects/{id}/integrations/teamcity': 'Set up the JetBrains TeamCity integration for a project. The build configuration in TeamCity must use the build number format `%build.vcs.number%`. In the advanced settings for VCS root, configure monitoring for all branches so merge requests can build. ', 'put /api/v4/projects/{id}/integrations/mattermost': 'Set up Mattermost notifications for a project. ', 'put /api/v4/projects/{id}/integrations/microsoft-teams': 'Set up Microsoft Teams notifications for a project. ', 'put /api/v4/projects/{id}/integrations/slack': 'Set up Slack notifications for a project. ', 'put /api/v4/projects/{id}/integrations/clickup': 'Set up the ClickUp integration for a project. ', 'put /api/v4/projects/{id}/integrations/youtrack': 'Get the YouTrack integration settings for a project. ', 'put /api/v4/projects/{id}/integrations/ewm': 'Set up the EWM integration for a project. ', 'put /api/v4/projects/{id}/integrations/redmine': 'Get the Redmine integration settings for a project. ', 'put /api/v4/projects/{id}/integrations/pushover': 'Disable the Pushover integration for a project. Integration settings are reset. ', 'put /api/v4/projects/{id}/integrations/pumble': 'Set up the Pumble integration for a project. ', 'put /api/v4/projects/{id}/integrations/prometheus': 'Create/Edit Prometheus integration', 'put /api/v4/projects/{id}/integrations/pivotaltracker': 'Disable the Pivotal Tracker integration for a project. Integration settings are reset. ', 'put /api/v4/projects/{id}/integrations/pipelines-email': 'Set up pipeline status emails for a project. ', 'put /api/v4/projects/{id}/integrations/packagist': 'Set up the Packagist integration for a project. ', 'put /api/v4/projects/{id}/integrations/slack-slash-commands': 'Get the Slack slash commands settings for a project. ', 'put /api/v4/projects/{id}/integrations/mattermost-slash-commands': 'Disable Mattermost slash commands for a project. Integration settings are reset. ', 'put /api/v4/projects/{id}/integrations/jira': 'Set up the Jira integration for a project. ', 'put /api/v4/projects/{id}/integrations/jenkins': 'Set up the Jenkins integration for a project. ', 'put /api/v4/projects/{id}/integrations/irker': 'Set up the irker integration for a project. ', 'put /api/v4/projects/{id}/integrations/harbor': 'Set up the Harbor integration for a project. ', 'put /api/v4/projects/{id}/integrations/hangouts-chat': 'Set up the Google Chat integration for a project. ', 'put /api/v4/projects/{id}/integrations/google-play': 'Set up the Google Play integration for a project. ', 'put /api/v4/projects/{id}/integrations/gitlab-slack-application': 'Update the GitLab for Slack app integration for a project. You cannot create a GitLab for Slack app through the API because the integration requires an OAuth 2.0 token that you cannot get from the GitLab API alone. Instead, you must [install the app](../user/project/integrations/gitlab_slack_application.md#install-the-gitlab-for-slack-app) from the GitLab UI. You can then use this API endpoint to update the integration. ', 'put /api/v4/projects/{id}/integrations/external-wiki': 'Disable an external wiki for a project. Integration settings are reset. ', 'put /api/v4/projects/{id}/integrations/emails-on-push': 'Set up the emails on push integration for a project. ', 'put /api/v4/projects/{id}/integrations/drone-ci': 'Set up the Drone integration for a project. ', 'put /api/v4/projects/{id}/integrations/discord': 'Set up Discord Notifications for a project. ', 'put /api/v4/projects/{id}/integrations/diffblue-cover': 'Set up the Diffblue Cover integration for a project. ', 'put /api/v4/projects/{id}/integrations/datadog': 'Set up the Datadog integration for a project. ', 'put /api/v4/projects/{id}/integrations/custom-issue-tracker': 'Set up a custom issue tracker for a project. ', 'put /api/v4/projects/{id}/integrations/confluence': 'Set up the Confluence Workspace integration for a project. ', 'put /api/v4/projects/{id}/integrations/campfire': 'Set up the Campfire Classic integration for a project. ', 'put /api/v4/projects/{id}/integrations/buildkite': 'Set up the Buildkite integration for a project. ', 'put /api/v4/projects/{id}/integrations/bugzilla': 'Set up the Bugzilla integration for a project. ', 'put /api/v4/projects/{id}/integrations/bamboo': 'Set up the Atlassian Bamboo integration for a project. You must configure automatic revision labeling and a repository trigger in Bamboo. ', 'put /api/v4/projects/{id}/integrations/assembla': 'Set up the Assembla integration for a project. ', 'put /api/v4/projects/{id}/integrations/asana': 'Set up the Asana integration for a project. ', 'put /api/v4/projects/{id}/integrations/apple-app-store': 'Create/Edit Apple App Store integration', 'get /api/v4/projects/{id}/integrations': 'Get a list of all active project integrations. The `vulnerability_events` field is only available for GitLab Enterprise Edition. ', 'post /api/v4/projects/{id}/services/slack_slash_commands/trigger': 'Trigger a slash command for slack-slash-commands', 'post /api/v4/projects/{id}/services/mattermost_slash_commands/trigger': 'Trigger a slash command for mattermost-slash-commands', 'get /api/v4/projects/{id}/services/{slug}': 'Get an integration settings', 'delete /api/v4/projects/{id}/services/{slug}': 'Disable an integration', 'put /api/v4/projects/{id}/services/mock-monitoring': 'Create/Edit Mock Monitoring integration', 'put /api/v4/projects/{id}/services/mock-ci': 'Create/Edit Mock Ci integration', 'put /api/v4/projects/{id}/services/google-cloud-platform-workload-identity-federation': 'Create/Edit Google Cloud Platform Workload Identity Federation integration', 'put /api/v4/projects/{id}/services/google-cloud-platform-artifact-registry': 'Create/Edit Google Cloud Platform Artifact Registry integration', 'put /api/v4/projects/{id}/services/git-guardian': 'Create/Edit Git Guardian integration', 'put /api/v4/projects/{id}/services/github': 'Create/Edit Github integration', 'put /api/v4/projects/{id}/services/squash-tm': 'Create/Edit Squash Tm integration', 'put /api/v4/projects/{id}/services/zentao': 'Create/Edit Zentao integration', 'put /api/v4/projects/{id}/services/webex-teams': 'Create/Edit Webex Teams integration', 'put /api/v4/projects/{id}/services/unify-circuit': 'Create/Edit Unify Circuit integration', 'put /api/v4/projects/{id}/services/telegram': 'Create/Edit Telegram integration', 'put /api/v4/projects/{id}/services/teamcity': 'Create/Edit Teamcity integration', 'put /api/v4/projects/{id}/services/mattermost': 'Create/Edit Mattermost integration', 'put /api/v4/projects/{id}/services/microsoft-teams': 'Create/Edit Microsoft Teams integration', 'put /api/v4/projects/{id}/services/slack': 'Create/Edit Slack integration', 'put /api/v4/projects/{id}/services/clickup': 'Create/Edit Clickup integration', 'put /api/v4/projects/{id}/services/youtrack': 'Create/Edit Youtrack integration', 'put /api/v4/projects/{id}/services/ewm': 'Create/Edit Ewm integration', 'put /api/v4/projects/{id}/services/redmine': 'Create/Edit Redmine integration', 'put /api/v4/projects/{id}/services/pushover': 'Create/Edit Pushover integration', 'put /api/v4/projects/{id}/services/pumble': 'Create/Edit Pumble integration', 'put /api/v4/projects/{id}/services/prometheus': 'Create/Edit Prometheus integration', 'put /api/v4/projects/{id}/services/pivotaltracker': 'Create/Edit Pivotaltracker integration', 'put /api/v4/projects/{id}/services/pipelines-email': 'Create/Edit Pipelines Email integration', 'put /api/v4/projects/{id}/services/packagist': 'Create/Edit Packagist integration', 'put /api/v4/projects/{id}/services/slack-slash-commands': 'Create/Edit Slack Slash Commands integration', 'put /api/v4/projects/{id}/services/mattermost-slash-commands': 'Create/Edit Mattermost Slash Commands integration', 'put /api/v4/projects/{id}/services/jira': 'Create/Edit Jira integration', 'put /api/v4/projects/{id}/services/jenkins': 'Create/Edit Jenkins integration', 'put /api/v4/projects/{id}/services/irker': 'Create/Edit Irker integration', 'put /api/v4/projects/{id}/services/harbor': 'Create/Edit Harbor integration', 'put /api/v4/projects/{id}/services/hangouts-chat': 'Create/Edit Hangouts Chat integration', 'put /api/v4/projects/{id}/services/google-play': 'Create/Edit Google Play integration', 'put /api/v4/projects/{id}/services/gitlab-slack-application': 'Create/Edit Gitlab Slack Application integration', 'put /api/v4/projects/{id}/services/external-wiki': 'Create/Edit External Wiki integration', 'put /api/v4/projects/{id}/services/emails-on-push': 'Create/Edit Emails On Push integration', 'put /api/v4/projects/{id}/services/drone-ci': 'Create/Edit Drone Ci integration', 'put /api/v4/projects/{id}/services/discord': 'Create/Edit Discord integration', 'put /api/v4/projects/{id}/services/diffblue-cover': 'Create/Edit Diffblue Cover integration', 'put /api/v4/projects/{id}/services/datadog': 'Create/Edit Datadog integration', 'put /api/v4/projects/{id}/services/custom-issue-tracker': 'Create/Edit Custom Issue Tracker integration', 'put /api/v4/projects/{id}/services/confluence': 'Create/Edit Confluence integration', 'put /api/v4/projects/{id}/services/campfire': 'Create/Edit Campfire integration', 'put /api/v4/projects/{id}/services/buildkite': 'Create/Edit Buildkite integration', 'put /api/v4/projects/{id}/services/bugzilla': 'Create/Edit Bugzilla integration', 'put /api/v4/projects/{id}/services/bamboo': 'Create/Edit Bamboo integration', 'put /api/v4/projects/{id}/services/assembla': 'Create/Edit Assembla integration', 'put /api/v4/projects/{id}/services/asana': 'Create/Edit Asana integration', 'put /api/v4/projects/{id}/services/apple-app-store': 'Create/Edit Apple App Store integration', 'get /api/v4/projects/{id}/services': 'List all active integrations', 'delete /api/v4/projects/{id}/freeze_periods/{freeze_period_id}': 'Delete a freeze period for the given `freeze_period_id`. ', 'put /api/v4/projects/{id}/freeze_periods/{freeze_period_id}': 'Update a freeze period for the given `freeze_period_id`. ', 'get /api/v4/projects/{id}/freeze_periods/{freeze_period_id}': 'Get a freeze period for the given `freeze_period_id`. ', 'post /api/v4/projects/{id}/freeze_periods': 'Create a freeze period. ', 'get /api/v4/projects/{id}/freeze_periods': 'Paginated list of freeze periods, sorted by `created_at` in ascending order. ', 'delete /api/v4/projects/{id}/repository/files/{file_path}': 'This allows you to delete a single file. For deleting multiple files with a single request, refer to the [commits API](commits.md#create-a-commit-with-multiple-files-and-actions). ', 'put /api/v4/projects/{id}/repository/files/{file_path}': 'Allows you to update a single file. For updating multiple files with a single request, refer to the [commits API](commits.md#create-a-commit-with-multiple-files-and-actions). ', 'post /api/v4/projects/{id}/repository/files/{file_path}': 'Allows you to create a single file. For creating multiple files with a single request, refer to the [commits API](commits.md#create-a-commit-with-multiple-files-and-actions). ', 'get /api/v4/projects/{id}/repository/files/{file_path}': 'Allows you to receive information about file in repository like name, size, and content. File content is Base64 encoded. This endpoint can be accessed without authentication if the repository is publicly accessible. ', 'head /api/v4/projects/{id}/repository/files/{file_path}': 'Allows you to receive information about file in repository like name, size, and content. File content is Base64 encoded. This endpoint can be accessed without authentication if the repository is publicly accessible. ', 'get /api/v4/projects/{id}/repository/files/{file_path}/raw': '', 'get /api/v4/projects/{id}/repository/files/{file_path}/blame': 'Allows you to receive blame information. Each blame range contains lines and corresponding commit information. ', 'head /api/v4/projects/{id}/repository/files/{file_path}/blame': 'Get blame file metadata from repository', 'put /api/v4/projects/{id}/error_tracking/settings': 'The API allows you to create Error Tracking settings for a project. Only for users with Maintainer role for the project. NOTE: This API is only available when used with [integrated error tracking](../operations/error_tracking.md#integrated-error-tracking). ', 'patch /api/v4/projects/{id}/error_tracking/settings': 'The API allows you to enable or disable the Error Tracking settings for a project. Only for users with the Maintainer role for the project. ', 'get /api/v4/projects/{id}/error_tracking/settings': '', 'get /api/v4/projects/{id}/environments/{environment_id}': '', 'delete /api/v4/projects/{id}/environments/{environment_id}': 'It returns `204` if the environment was successfully deleted, and `404` if the environment does not exist. The environment must be stopped first, otherwise the request returns `403`. ', 'put /api/v4/projects/{id}/environments/{environment_id}': "Updates an existing environment's name and/or `external_url`. It returns `200` if the environment was successfully updated. In case of an error, a status code `400` is returned. ", 'post /api/v4/projects/{id}/environments/stop_stale': 'Issue stop request to all environments that were last modified or deployed to before a specified date. Excludes protected environments. Returns `200` if stop request was successful and `400` if the before date is invalid. For details of exactly when the environment is stopped, see [Stop an environment](../ci/environments/index.md#stopping-an-environment). ', 'post /api/v4/projects/{id}/environments/{environment_id}/stop': 'It returns `200` if the environment was successfully stopped, and `404` if the environment does not exist. ', 'delete /api/v4/projects/{id}/environments/review_apps': 'It schedules for deletion multiple environments that have already been [stopped](../ci/environments/index.md#stopping-an-environment) and are [in the review app folder](../ci/review_apps/index.md). The actual deletion is performed after 1 week from the time of execution. By default, it only deletes environments 30 days or older. You can change this default using the `before` parameter. ', 'post /api/v4/projects/{id}/environments': 'Creates a new environment with the given name and `external_url`. It returns `201` if the environment was successfully created, `400` for wrong parameters. ', 'get /api/v4/projects/{id}/environments': 'Get all environments for a given project. ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/bulk_publish': 'Bulk publishes all existing draft notes for a given merge request that belong to the user. ', 'put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}/publish': 'Publishes an existing draft note for a given merge request. ', 'delete /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}': 'Deletes an existing draft note for a given merge request. ', 'put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}': 'Modify a draft note for a given merge request. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}': 'Returns a single draft note for a given merge request. ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes': 'Create a draft note for a given merge request. ', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes': 'Gets a list of all draft notes for a single merge request. ', 'post /api/v4/projects/{id}/deployments/{deployment_id}/approval': 'DETAILS: **Tier:** Premium, Ultimate **Offering:** GitLab.com, Self-managed, GitLab Dedicated See [Deployment Approvals](../ci/environments/deployment_approvals.md) for more information about this feature. ', 'get /api/v4/projects/{id}/deployments/{deployment_id}/merge_requests': 'NOTE: Not all deployments can be associated with merge requests. See [Track what merge requests were deployed to an environment](../ci/environments/index.md#track-newly-included-merge-requests-per-deployment) for more information. This API retrieves the list of merge requests shipped with a given deployment: ', 'delete /api/v4/projects/{id}/deployments/{deployment_id}': 'Delete a specific deployment that is not currently the last deployment for an environment or in a `running` state ', 'put /api/v4/projects/{id}/deployments/{deployment_id}': '', 'get /api/v4/projects/{id}/deployments/{deployment_id}': '', 'post /api/v4/projects/{id}/deployments': '', 'get /api/v4/projects/{id}/deployments': 'Get a list of deployments in a project. ', 'delete /api/v4/projects/{id}/deploy_tokens/{token_id}': 'Removes a deploy token from the project. ', 'get /api/v4/projects/{id}/deploy_tokens/{token_id}': "Get a single project's deploy token by ID. ", 'post /api/v4/projects/{id}/deploy_tokens': 'Creates a new deploy token for a project. ', 'get /api/v4/projects/{id}/deploy_tokens': "Get a list of a project's deploy tokens. ", 'delete /api/v4/projects/{id}/deploy_keys/{key_id}': "Removes a deploy key from the project. If the deploy key is used only for this project, it's deleted from the system. ", 'put /api/v4/projects/{id}/deploy_keys/{key_id}': 'Updates a deploy key for a project. ', 'get /api/v4/projects/{id}/deploy_keys/{key_id}': 'Get a single key. ', 'post /api/v4/projects/{id}/deploy_keys/{key_id}/enable': 'Enables a deploy key for a project so this can be used. Returns the enabled key, with a status code 201 when successful. ', 'post /api/v4/projects/{id}/deploy_keys': "Creates a new deploy key for a project. If the deploy key already exists in another project, it's joined to the current project only if the original one is accessible by the same user. ", 'get /api/v4/projects/{id}/deploy_keys': "Get a list of a project's deploy keys. ", 'post /api/v4/projects/{id}/statuses/{sha}': "Add or update the pipeline status of a commit. If the commit is associated with a merge request, the API call must target the commit in the merge request's source branch. ", 'get /api/v4/projects/{id}/repository/commits/{sha}/statuses': 'List the statuses of a commit in a project. The pagination parameters `page` and `per_page` can be used to restrict the list of references. ', 'get /api/v4/projects/{id}/repository/commits/{sha}/signature': 'Get the [signature from a commit](../user/project/repository/signed_commits), if it is signed. For unsigned commits, it results in a 404 response. ', 'get /api/v4/projects/{id}/repository/commits/{sha}/merge_requests': 'Returns information about the merge request that originally introduced a specific commit. ', 'post /api/v4/projects/{id}/repository/commits/{sha}/comments': 'Adds a comment to a commit. To post a comment in a particular line of a particular file, you must specify the full commit SHA, the `path`, the `line`, and `line_type` should be `new`. The comment is added at the end of the last commit if at least one of the cases below is valid: - the `sha` is instead a branch or a tag and the `line` or `path` are invalid - the `line` number is invalid (does not exist) - the `path` is invalid (does not exist) In any of the above cases, the response of `line`, `line_type` and `path` is set to `null`. For other approaches to commenting on a merge request, see [Create new merge request note](notes.md#create-new-merge-request-note) in the Notes API, and [Create a new thread in the merge request diff](discussions.md#create-a-new-thread-in-the-merge-request-diff) in the Discussions API. ', 'get /api/v4/projects/{id}/repository/commits/{sha}/comments': 'Get the comments of a commit in a project. ', 'get /api/v4/projects/{id}/repository/commits/{sha}/refs': 'Get all references (from branches or tags) a commit is pushed to. The pagination parameters `page` and `per_page` can be used to restrict the list of references. ', 'post /api/v4/projects/{id}/repository/commits/{sha}/revert': 'Reverts a commit in a given branch. ', 'post /api/v4/projects/{id}/repository/commits/{sha}/cherry_pick': 'Cherry-picks a commit to a given branch. ', 'get /api/v4/projects/{id}/repository/commits/{sha}/sequence': 'Get the sequence number of a commit in a project by following the parent links from the given commit. This API provides essentially the same features as the `git rev-list --count` command for a given commit SHA. ', 'get /api/v4/projects/{id}/repository/commits/{sha}/diff': 'Get the diff of a commit in a project. ', 'get /api/v4/projects/{id}/repository/commits/{sha}': 'Get a specific commit identified by the commit hash or name of a branch or tag. ', 'post /api/v4/projects/{id}/repository/commits': 'Create a commit by posting a JSON payload ', 'get /api/v4/projects/{id}/repository/commits': 'Get a list of repository commits in a project. ', 'delete /api/v4/projects/{id}/cluster_agents/{agent_id}': 'Deletes an existing agent registration. You must have at least the Maintainer role to use this endpoint. ', 'get /api/v4/projects/{id}/cluster_agents/{agent_id}': 'Gets a single agent details. You must have at least the Developer role to use this endpoint. ', 'post /api/v4/projects/{id}/cluster_agents': 'Registers an agent to the project. You must have at least the Maintainer role to use this endpoint. ', 'get /api/v4/projects/{id}/cluster_agents': 'Returns the list of agents registered for the project. You must have at least the Developer role to use this endpoint. ', 'delete /api/v4/projects/{id}/variables/{key}': "Delete a project's variable. If there are multiple variables with the same key, use `filter` to select the correct `environment_scope`. ", 'put /api/v4/projects/{id}/variables/{key}': "Update a project's variable. If there are multiple variables with the same key, use `filter` to select the correct `environment_scope`. ", 'get /api/v4/projects/{id}/variables/{key}': 'Get the details of a single variable. If there are multiple variables with the same key, use `filter` to select the correct `environment_scope`. ', 'post /api/v4/projects/{id}/variables': 'Create a new variable. If a variable with the same `key` already exists, the new variable must have a different `environment_scope`. Otherwise, GitLab returns a message similar to: `VARIABLE_NAME has already been taken`. ', 'get /api/v4/projects/{id}/variables': "Get list of a project's variables. ", 'delete /api/v4/projects/{id}/triggers/{trigger_id}': "Remove a project's pipeline trigger token. ", 'put /api/v4/projects/{id}/triggers/{trigger_id}': "Update a project's pipeline trigger token. ", 'get /api/v4/projects/{id}/triggers/{trigger_id}': "Get details of a project's pipeline trigger token. ", 'post /api/v4/projects/{id}/triggers': 'Create a pipeline trigger token for a project. ', 'get /api/v4/projects/{id}/triggers': "Get a list of a project's pipeline trigger tokens. ", 'post /api/v4/projects/{id}/(ref/{ref}/)trigger/pipeline': 'Trigger a GitLab project pipeline', 'delete /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}': 'Delete the variable of a pipeline schedule. ', 'put /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}': 'Updates the variable of a pipeline schedule. ', 'post /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables': 'Create a new variable of a pipeline schedule. ', 'post /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/play': 'Trigger a new scheduled pipeline, which runs immediately. The next scheduled run of this pipeline is not affected. ', 'delete /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}': 'Delete the pipeline schedule of a project. ', 'put /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}': 'Updates the pipeline schedule of a project. After the update is done, it is rescheduled automatically. ', 'get /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}': 'Get the pipeline schedule of a project. ', 'post /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/take_ownership': 'Update the owner of the pipeline schedule of a project. ', 'post /api/v4/projects/{id}/pipeline_schedules': 'Create a new pipeline schedule of a project. ', 'get /api/v4/projects/{id}/pipeline_schedules': 'Get a list of the pipeline schedules of a project. ', 'get /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/pipelines': 'Get all pipelines triggered by a pipeline schedule in a project. ', 'post /api/v4/projects/{id}/pipelines/{pipeline_id}/cancel': '', 'post /api/v4/projects/{id}/pipelines/{pipeline_id}/retry': 'Retry failed or canceled jobs in a pipeline. If there are no failed or canceled jobs in the pipeline, calling this endpoint has no effect. ', 'put /api/v4/projects/{id}/pipelines/{pipeline_id}/metadata': 'You can update the metadata of a pipeline. The metadata contains the name of the pipeline. ', 'delete /api/v4/projects/{id}/pipelines/{pipeline_id}': 'Deleting a pipeline expires all pipeline caches, and deletes all immediately related objects, such as builds, logs, artifacts, and triggers. **This action cannot be undone.** Deleting a pipeline does not automatically delete its [child pipelines](../ci/pipelines/downstream_pipelines.md#parent-child-pipelines). See the [related issue](https://gitlab.com/gitlab-org/gitlab/-/issues/39503) for details. ', 'get /api/v4/projects/{id}/pipelines/{pipeline_id}': 'Get one pipeline from a project. You can also get a single [child pipeline](../ci/pipelines/downstream_pipelines.md#parent-child-pipelines). ', 'get /api/v4/projects/{id}/pipelines/{pipeline_id}/test_report_summary': 'NOTE: This API route is part of the [Unit test report](../ci/testing/unit_test_reports.md) feature. ', 'get /api/v4/projects/{id}/pipelines/{pipeline_id}/test_report': 'NOTE: This API route is part of the [Unit test report](../ci/testing/unit_test_reports.md) feature. ', 'get /api/v4/projects/{id}/pipelines/{pipeline_id}/variables': '', 'get /api/v4/projects/{id}/pipelines/{pipeline_id}/bridges': 'Get a list of trigger jobs for a pipeline. ', 'get /api/v4/projects/{id}/pipelines/{pipeline_id}/jobs': 'Get a list of jobs for a pipeline. By default, this request returns 20 results at a time because the API results [are paginated](rest/index.md#pagination) This endpoint: - [Returns data for any pipeline](pipelines.md#get-a-single-pipeline) including [child pipelines](../ci/pipelines/downstream_pipelines.md#parent-child-pipelines). - Does not return retried jobs in the response by default. - Sorts jobs by ID in descending order (newest first). ', 'get /api/v4/projects/{id}/pipelines/latest': 'Get the latest pipeline for the most recent commit on a specific ref in a project. If no pipeline exists for the commit, a `403` status code is returned. ', 'post /api/v4/projects/{id}/pipeline': '', 'get /api/v4/projects/{id}/pipelines': 'List pipelines in a project. By default, [child pipelines](../ci/pipelines/downstream_pipelines.md#parent-child-pipelines) are not included in the results. To return child pipelines, set `source` to `parent_pipeline`. ', 'delete /api/v4/projects/{id}/secure_files/{secure_file_id}': "Remove a project's secure file. ", 'get /api/v4/projects/{id}/secure_files/{secure_file_id}': 'Get the details of a specific secure file in a project. ', 'post /api/v4/projects/{id}/secure_files': 'Create a new secure file. ', 'get /api/v4/projects/{id}/secure_files': 'Get list of secure files in a project. ', 'get /api/v4/projects/{id}/secure_files/{secure_file_id}/download': "Download the contents of a project's secure file. ", 'post /api/v4/projects/{id}/runners/reset_registration_token': 'WARNING: Runner registration tokens, and support for certain configuration arguments, were [deprecated](https://gitlab.com/gitlab-org/gitlab/-/issues/380872) in GitLab 15.6 and will be removed in GitLab 17.0. After GitLab 17.0, you will no longer be able to reset runner registration tokens and the `reset_registration_token` endpoint will not function. Reset the runner registration token for a project. ', 'delete /api/v4/projects/{id}/runners/{runner_id}': "Disable a project runner from the project. It works only if the project isn't the only project associated with the specified runner. If so, an error is returned. Use the call to [delete a runner](#delete-a-runner) instead. ", 'post /api/v4/projects/{id}/runners': 'Enable an available project runner in the project. ', 'get /api/v4/projects/{id}/runners': '', 'put /api/v4/projects/{id}/resource_groups/{key}': "Updates an existing resource group's properties. It returns `200` if the resource group was successfully updated. In case of an error, a status code `400` is returned. ", 'get /api/v4/projects/{id}/resource_groups/{key}': '', 'get /api/v4/projects/{id}/resource_groups/{key}/upcoming_jobs': '', 'get /api/v4/projects/{id}/resource_groups': '', 'post /api/v4/projects/{id}/jobs/{job_id}/play': 'For a job in manual status, trigger an action to start the job. ', 'post /api/v4/projects/{id}/jobs/{job_id}/erase': 'Erase a single job of a project (remove job artifacts and a job log) ', 'post /api/v4/projects/{id}/jobs/{job_id}/retry': 'Retry a single job of a project ', 'post /api/v4/projects/{id}/jobs/{job_id}/cancel': 'Cancel a single job of a project ', 'get /api/v4/projects/{id}/jobs/{job_id}/trace': 'Get a log (trace) of a specific job of a project: ', 'get /api/v4/projects/{id}/jobs/{job_id}': 'Get a single job of a project ', 'get /api/v4/projects/{id}/jobs': 'Get a list of jobs in a project. Jobs are sorted in descending order of their IDs. By default, this request returns 20 results at a time because the API results [are paginated](rest/index.md#pagination) NOTE: This endpoint supports both offset-based and [keyset-based](rest/index.md#keyset-based-pagination) pagination, but keyset-based pagination is strongly recommended when requesting consecutive pages of results. ', 'delete /api/v4/projects/{id}/artifacts': 'Delete artifacts eligible for deletion in a project. By default, artifacts from [the most recent successful pipeline of each ref](../ci/jobs/job_artifacts.md#keep-artifacts-from-most-recent-successful-jobs) are not deleted. Requests to this endpoint set the expiry of all artifacts that can be deleted to the current time. The files are then deleted from the system as part of the regular cleanup of expired job artifacts. Job logs are never deleted. The regular cleanup occurs asynchronously on a schedule, so there might be a short delay before artifacts are deleted. Prerequisites: - You must have at least the Maintainer role for the project. ', 'delete /api/v4/projects/{id}/jobs/{job_id}/artifacts': 'Delete artifacts of a job. Prerequisites: - Must have at least the maintainer role in the project. ', 'get /api/v4/projects/{id}/jobs/{job_id}/artifacts': "Get the job's artifacts zipped archive of a project. If you use cURL to download artifacts from GitLab.com, use the `--location` parameter as the request might redirect through a CDN. ", 'post /api/v4/projects/{id}/jobs/{job_id}/artifacts/keep': 'Prevents artifacts from being deleted when expiration is set. ', 'get /api/v4/projects/{id}/jobs/{job_id}/artifacts/*artifact_path': "Download a single artifact file from a job with a specified ID from inside the job's artifacts zipped archive. The file is extracted from the archive and streamed to the client. If you use cURL to download artifacts from GitLab.com, use the `--location` parameter as the request might redirect through a CDN. ", 'get /api/v4/projects/{id}/jobs/artifacts/{ref_name}/raw/*artifact_path': 'Download a specific file from artifacts archive from a ref', 'get /api/v4/projects/{id}/jobs/artifacts/{ref_name}/download': 'Download the artifacts archive from a job', 'delete /api/v4/projects/{id}/repository/merged_branches': "Deletes all branches that are merged into the project's default branch. NOTE: [Protected branches](../user/project/protected_branches.md) are not deleted as part of this operation. ", 'delete /api/v4/projects/{id}/repository/branches/{branch}': 'Delete a branch from the repository. NOTE: In the case of an error, an explanation message is provided. ', 'get /api/v4/projects/{id}/repository/branches/{branch}': 'Get a single project repository branch. NOTE: This endpoint can be accessed without authentication if the repository is publicly accessible. ', 'head /api/v4/projects/{id}/repository/branches/{branch}': 'Check if a branch exists', 'post /api/v4/projects/{id}/repository/branches': 'Create a new branch in the repository. ', 'get /api/v4/projects/{id}/repository/branches': 'Get a list of repository branches from a project, sorted by name alphabetically. NOTE: This endpoint can be accessed without authentication if the repository is publicly accessible. ', 'put /api/v4/projects/{id}/repository/branches/{branch}/unprotect': 'Unprotect a single branch', 'put /api/v4/projects/{id}/repository/branches/{branch}/protect': 'Protect a single branch', 'delete /api/v4/projects/{id}/badges/{badge_id}': 'Removes a badge from a project. Only project badges are removed by using this endpoint. ', 'put /api/v4/projects/{id}/badges/{badge_id}': 'Updates a badge of a project. ', 'get /api/v4/projects/{id}/badges/{badge_id}': 'Gets a badge of a project. ', 'post /api/v4/projects/{id}/badges': 'Adds a badge to a project. ', 'get /api/v4/projects/{id}/badges': "Gets a list of a project's badges and its group badges. ", 'get /api/v4/projects/{id}/badges/render': 'Returns how the `link_url` and `image_url` final URLs would be after resolving the placeholder interpolation. ', 'delete /api/v4/projects/{id}/access_requests/{user_id}': 'Denies an access request for the given user. ', 'put /api/v4/projects/{id}/access_requests/{user_id}/approve': 'Approves an access request for the given user. ', 'post /api/v4/projects/{id}/access_requests': 'Requests access for the authenticated user to a group or project. ', 'get /api/v4/projects/{id}/access_requests': 'Gets a list of access requests viewable by the authenticated user. ', 'delete /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/{metric_image_id}': '', 'put /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/{metric_image_id}': '', 'get /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images': '', 'post /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images': '', 'post /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/authorize': 'Workhorse authorize metric image file upload', 'delete /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}': 'Revokes an agent token. You must have at least the Maintainer role to use this endpoint. ', 'get /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}': 'Gets a single agent token. You must have at least the Developer role to use this endpoint. Returns a `404` if the agent token has been revoked. ', 'post /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens': 'Creates a new token for an agent. You must have at least the Maintainer role to use this endpoint. An agent can have only two active tokens at one time. ', 'get /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens': 'Returns a list of active tokens for an agent. You must have at least the Developer role to use this endpoint. ', 'get /api/v4/projects/{id}/packages/composer/archives/*package_name': 'Composer package endpoint to download a package archive', 'post /api/v4/projects/{id}/packages/composer': 'Composer packages endpoint for registering packages', 'get /api/v4/projects/{id}/packages/conan/v1/conans/search': 'Search for packages', 'get /api/v4/projects/{id}/packages/conan/v1/ping': 'Ping the Conan API', 'get /api/v4/projects/{id}/packages/conan/v1/users/check_credentials': 'Check for valid user credentials per conan CLI', 'get /api/v4/projects/{id}/packages/conan/v1/users/authenticate': 'Authenticate user against conan CLI', 'delete /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}': 'Delete Package', 'get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}': 'Recipe Snapshot', 'post /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/upload_urls': 'Recipe Upload Urls', 'post /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/upload_urls': 'Package Upload Urls', 'get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/download_urls': 'Recipe Download Urls', 'get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/download_urls': 'Package Download Urls', 'get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/digest': 'Recipe Digest', 'get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/digest': 'Package Digest', 'get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}': 'Package Snapshot', 'put /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}/authorize': 'Workhorse authorize the conan recipe file', 'put /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}': 'Upload recipe package files', 'get /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}': 'Download recipe files', 'put /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}': 'Upload package files', 'get /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}': 'Download package files', 'put /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}/authorize': 'Workhorse authorize the conan package file', 'get /api/v4/projects/{id}/packages/debian/dists/*distribution/InRelease': 'The signed Release file', 'get /api/v4/projects/{id}/packages/debian/dists/*distribution/Release': 'The unsigned Release file', 'get /api/v4/projects/{id}/packages/debian/dists/*distribution/Release.gpg': 'The Release file signature', 'get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/by-hash/SHA256/{file_sha256}': 'The installer (udeb) binary files index by hash', 'get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/Packages': 'The installer (udeb) binary files index', 'get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/source/by-hash/SHA256/{file_sha256}': 'The source files index by hash', 'get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/source/Sources': 'The source files index', 'get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/binary-{architecture}/by-hash/SHA256/{file_sha256}': 'The binary files index by hash', 'get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/binary-{architecture}/Packages': 'The binary files index', 'get /api/v4/projects/{id}/packages/debian/pool/{distribution}/{letter}/{package_name}/{package_version}/{file_name}': 'Download Debian package', 'put /api/v4/projects/{id}/packages/debian/{file_name}/authorize': 'Authorize Debian package upload', 'put /api/v4/projects/{id}/packages/debian/{file_name}': 'Upload Debian package', 'delete /api/v4/projects/{id}/error_tracking/client_keys/{key_id}': 'Removes a client key from the project. ', 'post /api/v4/projects/{id}/error_tracking/client_keys': 'Creates a new client key for a project. The public key attribute is generated automatically. ', 'get /api/v4/projects/{id}/error_tracking/client_keys': '', 'post /api/v4/projects/{id}/feature_flags': 'Creates a new feature flag. ', 'get /api/v4/projects/{id}/feature_flags': 'Gets all feature flags of the requested project. ', 'delete /api/v4/projects/{id}/feature_flags/{feature_flag_name}': 'Deletes a feature flag. ', 'put /api/v4/projects/{id}/feature_flags/{feature_flag_name}': 'Updates a feature flag. ', 'get /api/v4/projects/{id}/feature_flags/{feature_flag_name}': 'Gets a single feature flag. ', 'post /api/v4/projects/{id}/feature_flags_user_lists': 'Creates a feature flag user list. ', 'get /api/v4/projects/{id}/feature_flags_user_lists': 'Gets all feature flag user lists for the requested project. ', 'delete /api/v4/projects/{id}/feature_flags_user_lists/{iid}': 'Deletes a feature flag user list. ', 'put /api/v4/projects/{id}/feature_flags_user_lists/{iid}': 'Updates a feature flag user list. ', 'get /api/v4/projects/{id}/feature_flags_user_lists/{iid}': 'Gets a feature flag user list. ', 'get /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/{file_name}': 'Download package file', 'put /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/{file_name}': 'Upload package file', 'put /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/{file_name}/authorize': 'Workhorse authorize generic package file', 'get /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.zip': 'Download module source', 'get /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.mod': 'Download module file', 'get /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.info': 'Version metadata', 'get /api/v4/projects/{id}/packages/go/*module_name/@v/list': 'List', 'post /api/v4/projects/{id}/packages/helm/api/{channel}/charts': 'Upload a chart', 'post /api/v4/projects/{id}/packages/helm/api/{channel}/charts/authorize': 'Authorize a chart upload from workhorse', 'get /api/v4/projects/{id}/packages/helm/{channel}/charts/{file_name}.tgz': 'Download a chart', 'get /api/v4/projects/{id}/packages/helm/{channel}/index.yaml': 'Download a chart index', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approvals': 'Deprecated in 16.0: Use the merge request approvals API instead. Change approval-related configuration', 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approvals': "Configuration for approvals on a specific merge request. Must be authenticated for all endpoints. You can request information about a merge request's approval status using the following endpoint: ", 'get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approval_state': "You can request information about a merge request's approval state by using the following endpoint: ", 'put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_approvals': 'Clear all approvals of merge request. Available only for [bot users](../user/project/settings/project_access_tokens.md#bot-users-for-projects) based on project or group tokens. Users without bot permissions receive a `401 Unauthorized` response. ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/unapprove': 'If you did approve a merge request, you can unapprove it using the following endpoint: ', 'post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approve': 'If you are allowed to, you can approve a merge request using the following endpoint: ', 'get /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}': 'Download an ml_model package file', 'put /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}': 'Workhorse upload model package file', 'put /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}/authorize': 'Workhorse authorize model package file', 'post /api/v4/projects/{id}/packages/npm/-/npm/v1/security/audits/quick': 'NPM registry quick audit endpoint', 'post /api/v4/projects/{id}/packages/npm/-/npm/v1/security/advisories/bulk': 'NPM registry bulk advisory endpoint', 'get /api/v4/projects/{id}/packages/npm/*package_name': 'NPM registry metadata endpoint', 'put /api/v4/projects/{id}/packages/npm/{package_name}': 'Create or deprecate NPM package', 'get /api/v4/projects/{id}/packages/npm/*package_name/-/*file_name': 'Download the NPM tarball', 'get /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags': 'Get all tags for a given an NPM package', 'delete /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags/{tag}': 'Deletes the given tag', 'put /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags/{tag}': 'Create or Update the given tag for the given NPM package and version', 'delete /api/v4/projects/{id}/packages/nuget/*package_name/*package_version': 'The NuGet Package Delete endpoint', 'put /api/v4/projects/{id}/packages/nuget/symbolpackage/authorize': 'The NuGet Symbol Package Authorize endpoint', 'put /api/v4/projects/{id}/packages/nuget/symbolpackage': 'The NuGet Symbol Package Publish endpoint', 'put /api/v4/projects/{id}/packages/nuget/authorize': 'The NuGet Package Authorize endpoint', 'put /api/v4/projects/{id}/packages/nuget': 'The NuGet V3 Feed Package Publish endpoint', 'get /api/v4/projects/{id}/packages/nuget/index': 'The NuGet V3 Feed Service Index', 'get /api/v4/projects/{id}/packages/nuget/symbolfiles/*file_name/*signature/*same_file_name': 'The NuGet Symbol File Download Endpoint', 'put /api/v4/projects/{id}/packages/nuget/v2/authorize': 'The NuGet V2 Feed Package Authorize endpoint', 'put /api/v4/projects/{id}/packages/nuget/v2': 'The NuGet V2 Feed Package Publish endpoint', 'get /api/v4/projects/{id}/packages/nuget/v2': 'The NuGet V2 Feed Service Index', 'get /api/v4/projects/{id}/packages/nuget/v2/$metadata': 'The NuGet V2 Feed Package $metadata endpoint', 'get /api/v4/projects/{id}/packages/nuget/metadata/*package_name/*package_version': 'The NuGet Metadata Service - Package name and version level', 'get /api/v4/projects/{id}/packages/nuget/metadata/*package_name/index': 'The NuGet Metadata Service - Package name level', 'get /api/v4/projects/{id}/packages/nuget/query': 'The NuGet Search Service', 'get /api/v4/projects/{id}/packages/nuget/download/*package_name/*package_version/*package_filename': 'The NuGet Content Service - content request', 'get /api/v4/projects/{id}/packages/nuget/download/*package_name/index': 'The NuGet Content Service - index request', "get /api/v4/projects/{project_id}/packages/nuget/v2/Packages\\(Id='*package_name',Version='*package_version'\\)": 'The NuGet V2 Feed Single Package Metadata endpoint', 'get /api/v4/projects/{project_id}/packages/nuget/v2/Packages\\(\\)': 'The NuGet V2 Feed Enumerate Packages endpoint', 'get /api/v4/projects/{project_id}/packages/nuget/v2/FindPackagesById\\(\\)': 'The NuGet V2 Feed Find Packages by ID endpoint', 'delete /api/v4/projects/{id}/debian_distributions/{codename}': 'Delete a Debian Distribution', 'put /api/v4/projects/{id}/debian_distributions/{codename}': 'Update a Debian Distribution', 'get /api/v4/projects/{id}/debian_distributions/{codename}': 'Get a Debian Distribution', 'get /api/v4/projects/{id}/debian_distributions/{codename}/key.asc': 'Get a Debian Distribution Key', 'get /api/v4/projects/{id}/debian_distributions': 'Get a list of Debian Distributions', 'post /api/v4/projects/{id}/debian_distributions': 'Create a Debian Distribution', 'delete /api/v4/projects/{id}/hooks/{hook_id}/url_variables/{key}': 'Un-Set a url variable', 'put /api/v4/projects/{id}/hooks/{hook_id}/url_variables/{key}': 'Set a url variable', 'get /api/v4/projects/{id}/audit_events/{audit_event_id}': 'Only available to users with at least the Maintainer role for the project. ', 'get /api/v4/projects/{id}/audit_events': '', 'post /api/v4/projects/{id}/packages/pypi/authorize': 'Authorize the PyPi package upload from workhorse', 'post /api/v4/projects/{id}/packages/pypi': 'The PyPi Package upload endpoint', 'get /api/v4/projects/{id}/packages/pypi/simple/*package_name': 'The PyPi Simple Project Package Endpoint', 'get /api/v4/projects/{id}/packages/pypi/simple': 'The PyPi Simple Project Index Endpoint', 'get /api/v4/projects/{id}/packages/pypi/files/{sha256}/*file_identifier': 'The PyPi package download endpoint', 'post /api/v4/projects/{id}/releases/{tag_name}/assets/links': 'Create a release link', 'get /api/v4/projects/{id}/releases/{tag_name}/assets/links': 'List links of a release', 'delete /api/v4/projects/{id}/releases/{tag_name}/assets/links/{link_id}': 'Delete a release link', 'put /api/v4/projects/{id}/releases/{tag_name}/assets/links/{link_id}': 'Update a release link', 'get /api/v4/projects/{id}/releases/{tag_name}/assets/links/{link_id}': 'Get a release link', 'post /api/v4/projects/{id}/packages/rpm/authorize': 'Authorize package upload from workhorse', 'post /api/v4/projects/{id}/packages/rpm': 'Upload a RPM package', 'get /api/v4/projects/{id}/packages/rpm/*package_file_id/*file_name': 'Download RPM package files', 'get /api/v4/projects/{id}/packages/rpm/repodata/*file_name': 'Download repository metadata files', 'get /api/v4/projects/{id}/packages/rubygems/gems/{file_name}': 'Download the .gem package', 'get /api/v4/projects/{id}/packages/rubygems/quick/Marshal.4.8/{file_name}': 'Download the gemspec file', 'get /api/v4/projects/{id}/packages/rubygems/{file_name}': 'Download the spec index file', 'get /api/v4/projects/{id}/packages/rubygems/api/v1/dependencies': 'Fetch a list of dependencies', 'post /api/v4/projects/{id}/packages/rubygems/api/v1/gems': 'Upload a gem', 'post /api/v4/projects/{id}/packages/rubygems/api/v1/gems/authorize': 'Authorize a gem upload from workhorse', 'get /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}': 'Download the latest version of a module', 'get /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version': 'Download a specific version of a module', 'put /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version/file': 'Upload Terraform Module package file', 'put /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version/file/authorize': 'Workhorse authorize Terraform Module package file', 'delete /api/v4/projects/{id}/terraform/state/{name}/lock': 'Unlock a Terraform state of a certain name', 'post /api/v4/projects/{id}/terraform/state/{name}/lock': 'Lock a Terraform state of a certain name', 'delete /api/v4/projects/{id}/terraform/state/{name}': 'Delete a Terraform state of a certain name', 'post /api/v4/projects/{id}/terraform/state/{name}': 'Add a new Terraform state or update an existing one', 'get /api/v4/projects/{id}/terraform/state/{name}': 'Get a Terraform state by its name', 'delete /api/v4/projects/{id}/terraform/state/{name}/versions/{serial}': 'Delete a Terraform state version', 'get /api/v4/projects/{id}/terraform/state/{name}/versions/{serial}': 'Get a Terraform state version', 'get /api/v4/admin/batched_background_migrations/{id}': 'Retrieve a batched background migration', 'get /api/v4/admin/batched_background_migrations': 'Get the list of batched background migrations', 'put /api/v4/admin/batched_background_migrations/{id}/resume': 'Resume a batched background migration', 'put /api/v4/admin/batched_background_migrations/{id}/pause': 'Pause a batched background migration', 'delete /api/v4/admin/ci/variables/{key}': 'Remove an instance-level variable. ', 'put /api/v4/admin/ci/variables/{key}': 'Update an instance-level variable. ', 'get /api/v4/admin/ci/variables/{key}': 'Get the details of a specific instance-level variable. ', 'post /api/v4/admin/ci/variables': 'Create a new instance-level variable. The [maximum number of instance-level variables](../administration/instance_limits.md#cicd-variable-limits) can be changed. ', 'get /api/v4/admin/ci/variables': 'Get the list of all instance-level variables. ', 'get /api/v4/admin/databases/{database_name}/dictionary/tables/{table_name}': 'Retrieve dictionary details', 'delete /api/v4/admin/clusters/{cluster_id}': 'Deletes an existing instance cluster. Does not remove existing resources within the connected Kubernetes cluster. ', 'put /api/v4/admin/clusters/{cluster_id}': 'Updates an existing instance cluster. ', 'get /api/v4/admin/clusters/{cluster_id}': 'Returns a single instance cluster. Parameters: | Attribute    | Type    | Required | Description           | | ------------ | ------- | -------- | --------------------- | | `cluster_id` | integer | yes      | The ID of the cluster | ', 'post /api/v4/admin/clusters/add': 'Adds an existing Kubernetes instance cluster. ', 'get /api/v4/admin/clusters': 'Returns a list of instance clusters. ', 'post /api/v4/admin/migrations/{timestamp}/mark': 'Mark the migration as successfully executed', 'delete /api/v4/broadcast_messages/{id}': 'Delete a broadcast message. ', 'put /api/v4/broadcast_messages/{id}': 'Update an existing broadcast message. ', 'get /api/v4/broadcast_messages/{id}': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** GitLab.com, Self-managed, GitLab Dedicated Get a specific broadcast message. ', 'post /api/v4/broadcast_messages': 'Create a new broadcast message. ', 'get /api/v4/broadcast_messages': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** GitLab.com, Self-managed, GitLab Dedicated List all broadcast messages. ', 'delete /api/v4/applications/{id}': 'Delete a specific application. Returns `204` if the request succeeds. ', 'get /api/v4/applications': 'List all registered applications. ', 'post /api/v4/applications': 'Create an application by posting a JSON payload. Returns `200` if the request succeeds. ', 'get /api/v4/avatar': 'Return avatar url for a user', 'get /api/v4/bulk_imports/{import_id}/entities/{entity_id}/failures': '', 'get /api/v4/bulk_imports/{import_id}/entities/{entity_id}': '', 'get /api/v4/bulk_imports/{import_id}/entities': '', 'get /api/v4/bulk_imports/{import_id}': '', 'get /api/v4/bulk_imports/entities': '', 'get /api/v4/bulk_imports': '', 'post /api/v4/bulk_imports': 'Use this endpoint to start a new group or project migration. Specify: - `entities[group_entity]` to migrate a group. - `entities[project_entity]` to migrate a project. (**Status:** Beta) ', 'get /api/v4/job/allowed_agents': 'DETAILS: **Tier:** Premium, Ultimate **Offering:** GitLab.com, Self-managed, GitLab Dedicated Retrieve the job that generated the `CI_JOB_TOKEN`, along with a list of allowed [agents](../user/clusters/agent/index.md). ', 'get /api/v4/job': 'Retrieve the job that generated a job token. ', 'post /api/v4/runners/reset_registration_token': 'WARNING: Runner registration tokens, and support for certain configuration arguments, were [deprecated](https://gitlab.com/gitlab-org/gitlab/-/issues/380872) in GitLab 15.6 and will be removed in GitLab 17.0. After GitLab 17.0, you will no longer be able to reset runner registration tokens and the `reset_registration_token` endpoint will not function. Reset the runner registration token for the GitLab instance. ', 'post /api/v4/runners/{id}/reset_authentication_token': "Reset the runner's authentication token by using its runner ID. ", 'get /api/v4/runners/{id}/jobs': '', 'delete /api/v4/runners/{id}': "To delete the runner by ID, use your access token with the runner's ID: ", 'put /api/v4/runners/{id}': 'Update details of a runner. ', 'get /api/v4/runners/{id}': 'Get details of a runner. At least the Maintainer role is required to get runner details at the project and group level. Instance-level runner details via this endpoint are available to all authenticated users. ', 'get /api/v4/runners/all': '', 'get /api/v4/runners': '', 'delete /api/v4/runners': 'To delete the runner by using its authentication token: ', 'post /api/v4/runners': 'Create a runner for the instance. ', 'post /api/v4/runners/reset_authentication_token': "Reset the runner's authentication token by using the current token's value as an input. ", 'post /api/v4/runners/verify': 'Validates authentication credentials for a registered runner. ', 'delete /api/v4/runners/managers': 'Internal endpoint that deletes a runner manager by authentication token and system ID.', 'get /api/v4/jobs/{id}/artifacts': 'Download the artifacts file for job', 'post /api/v4/jobs/{id}/artifacts': 'Upload a job artifact', 'post /api/v4/jobs/{id}/artifacts/authorize': 'Authorize uploading job artifact', 'patch /api/v4/jobs/{id}/trace': 'Append a patch to the job trace', 'put /api/v4/jobs/{id}': 'Update a job', 'post /api/v4/jobs/request': 'Request a job', 'get /api/v4/group/{id}/-/packages/composer/*package_name': 'Composer packages endpoint at group level for package versions metadata', 'get /api/v4/group/{id}/-/packages/composer/p2/*package_name': 'Composer v2 packages p2 endpoint at group level for package versions metadata', 'get /api/v4/group/{id}/-/packages/composer/p/{sha}': 'Composer packages endpoint at group level for packages list', 'get /api/v4/group/{id}/-/packages/composer/packages': 'Composer packages endpoint at group level', 'get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version': 'Get details about specific version of a module', 'get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version/file': 'Download specific version of a module', 'get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version/download': 'Get download location for specific version of a module', 'get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}': 'Get details about the latest version of a module', 'get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/download': 'Get download location for the latest version of a module', 'get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/versions': 'List versions for a module', 'post /api/v4/packages/npm/-/npm/v1/security/audits/quick': 'NPM registry quick audit endpoint', 'post /api/v4/packages/npm/-/npm/v1/security/advisories/bulk': 'NPM registry bulk advisory endpoint', 'get /api/v4/packages/npm/*package_name': 'NPM registry metadata endpoint', 'delete /api/v4/packages/npm/-/package/*package_name/dist-tags/{tag}': 'Deletes the given tag', 'put /api/v4/packages/npm/-/package/*package_name/dist-tags/{tag}': 'Create or Update the given tag for the given NPM package and version', 'get /api/v4/packages/npm/-/package/*package_name/dist-tags': 'Get all tags for a given an NPM package', 'get /api/v4/packages/maven/*path/{file_name}': 'Download the maven package file at instance level', 'put /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}': 'Upload package files', 'get /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}': 'Download package files', 'put /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}/authorize': 'Workhorse authorize the conan package file', 'put /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}/authorize': 'Workhorse authorize the conan recipe file', 'put /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}': 'Upload recipe package files', 'get /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}': 'Download recipe files', 'delete /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}': 'Delete Package', 'get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}': 'Recipe Snapshot', 'post /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/upload_urls': 'Recipe Upload Urls', 'post /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/upload_urls': 'Package Upload Urls', 'get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/download_urls': 'Recipe Download Urls', 'get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/download_urls': 'Package Download Urls', 'get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/digest': 'Recipe Digest', 'get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/digest': 'Package Digest', 'get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}': 'Package Snapshot', 'get /api/v4/packages/conan/v1/users/check_credentials': 'Check for valid user credentials per conan CLI', 'get /api/v4/packages/conan/v1/users/authenticate': 'Authenticate user against conan CLI', 'get /api/v4/packages/conan/v1/conans/search': 'Search for packages', 'get /api/v4/packages/conan/v1/ping': 'Ping the Conan API', 'post /api/v4/container_registry_event/events': 'Receives notifications from the container registry when an operation occurs', 'get /api/v4/registry/repositories/{id}': 'Get details of a registry repository. ', 'get /api/v4/events': 'Get a list of events for the authenticated user. Scope `read_user` or `api` is required. Events associated with epics are not available using the API. ', 'get /api/v4/users/{user_id}/memberships': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Pre-requisite: - You must be an administrator. Lists all projects and groups a user is a member of. It returns the `source_id`, `source_name`, `source_type`, and `access_level` of a membership. Source can be of type `Namespace` (representing a group) or `Project`. The response represents only direct memberships. Inherited memberships, for example in subgroups, are not included. Access levels are represented by an integer value. For more details, read about the meaning of [access level values](access_requests.md#valid-access-levels). ', 'post /api/v4/users/{id}/unban': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Requires administrator access. It retrieves every impersonation token of the user. Use the pagination parameters `page` and `per_page` to restrict the list of impersonation tokens. ', 'post /api/v4/users/{id}/ban': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Unbans the specified user. Available only for administrator. ', 'post /api/v4/users/{id}/unblock': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Deactivates the specified user. Available only for administrator. ', 'post /api/v4/users/{id}/block': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Blocks the specified user. Available only for administrator. ', 'post /api/v4/users/{id}/deactivate': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Deactivates the specified user. Available only for administrator. ', 'post /api/v4/users/{id}/reject': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Rejects specified user that is [pending approval](../administration/moderate_users.md#users-pending-approval). Available only for administrators. ', 'post /api/v4/users/{id}/approve': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Approves the specified user. Available only for administrators. ', 'post /api/v4/users/{id}/activate': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Activates the specified user. Available only for administrator. ', 'delete /api/v4/users/{id}': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Deletes a user. Available only for administrators. This returns a `204 No Content` status code if the operation was successfully, `404` if the resource was not found or `409` if the user cannot be soft deleted. ', 'put /api/v4/users/{id}': "DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Modifies an existing user. Only administrators can change attributes of a user. The `email` field is the user's primary email address. You can only change this field to an already-added secondary email address for that user. To add more email addresses to the same user, use the [add email function](#add-email). ", 'get /api/v4/users/{id}': 'Prerequisites: - You must be signed in to use this endpoint. ', 'delete /api/v4/users/{id}/emails/{email_id}': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Blocks the specified user. Available only for administrator. ', 'get /api/v4/users/{id}/emails': 'Get a single email. ', 'post /api/v4/users/{id}/emails': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Create new email owned by specified user. Available only for administrator ', 'post /api/v4/users/{id}/gpg_keys/{key_id}/revoke': 'Revokes an existing GPG key from a specified user. Available only for admins.', 'delete /api/v4/users/{id}/gpg_keys/{key_id}': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Delete a GPG key owned by a specified user. Available only for administrator. ', 'get /api/v4/users/{id}/gpg_keys/{key_id}': 'Get a specific GPG key for a given user. This endpoint can be accessed without administrator authentication. ', 'get /api/v4/users/{id}/gpg_keys': "Get a list of a specified user's GPG keys. This endpoint can be accessed without authentication. ", 'post /api/v4/users/{id}/gpg_keys': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Create new GPG key owned by the specified user. Available only for administrator. ', 'delete /api/v4/users/{id}/keys/{key_id}': "Get a list of the authenticated user's GPG keys. ", 'get /api/v4/users/{id}/keys/{key_id}': 'Get a single key for a given user. ', 'get /api/v4/users/{user_id}/keys': "Get a list of a specified user's SSH keys. ", 'post /api/v4/users/{user_id}/keys': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Create new key owned by specified user. Available only for administrator. ', 'get /api/v4/users/{user_id}/project_deploy_keys': "Get a list of a specified user (requestee) and the authenticated user's (requester) common [project deploy keys](../user/project/deploy_keys/index.md#scope). It lists only the **enabled project keys from the common projects of requester and requestee**. ", 'delete /api/v4/users/{id}/identities/{provider}': "DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Deletes a user's authentication identity using the provider name associated with that identity. Available only for administrators. ", 'patch /api/v4/users/{id}/disable_two_factor': "DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Pre-requisite: - You must be an administrator. Disables two factor authentication (2FA) for the specified user. Administrators cannot disable 2FA for their own user account or other administrators using the API. Instead, they can disable an administrator's 2FA [using the Rails console](../security/two_factor_authentication.md#for-a-single-user). ", 'post /api/v4/users': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Creates a new user. Note only administrators can create new users. Either `password`, `reset_password`, or `force_random_password` must be specified. If `reset_password` and `force_random_password` are both `false`, then `password` is required. `force_random_password` and `reset_password` take priority over `password`. In addition, `reset_password` and `force_random_password` can be used together. NOTE: `private_profile` defaults to the value of the [Set profiles of new users to private by default](../administration/settings/account_and_limit_settings.md#set-profiles-of-new-users-to-private-by-default) setting. `bio` defaults to `""` instead of `null`. ', 'get /api/v4/users': '', 'get /api/v4/users/{id}/followers': 'Get the followers of a user. ', 'get /api/v4/users/{id}/following': 'Get the followers of a user. ', 'post /api/v4/users/{id}/unfollow': 'Follow a user. ', 'post /api/v4/users/{id}/follow': 'Follow a user. ', 'get /api/v4/users/{user_id}/status': 'Get the status of a user. This endpoint can be accessed without authentication. ', 'delete /api/v4/users/{id}/custom_attributes/{key}': 'Delete a custom attribute on a resource. ', 'put /api/v4/users/{id}/custom_attributes/{key}': 'Set a custom attribute on a resource. The attribute is updated if it already exists, or newly created otherwise. ', 'get /api/v4/users/{id}/custom_attributes/{key}': 'Get a single custom attribute on a resource. ', 'get /api/v4/users/{id}/custom_attributes': 'Get all custom attributes on a resource. ', 'get /api/v4/users/{user_id}/starred_projects': 'Get a list of visible projects starred by the given user. When accessed without authentication, only public projects are returned. ', 'get /api/v4/users/{user_id}/contributed_projects': 'Get a list of visible projects a given user has contributed to. ', 'get /api/v4/users/{user_id}/projects': "Get a list of visible projects owned by the given user. When accessed without authentication, only public projects are returned. Prerequisites: - To view [certain attributes](https://gitlab.com/gitlab-org/gitlab/-/blob/520776fa8e5a11b8275b7c597d75246fcfc74c89/lib/api/entities/project.rb#L109-130), you must be an administrator or have the Owner role for the project. NOTE: Only the projects in the user's (specified in `user_id`) namespace are returned. Projects owned by the user in any group or subgroups are not returned. An empty list is returned if a profile is set to private. This endpoint supports [keyset pagination](rest/index.md#keyset-based-pagination) for selected `order_by` options. ", 'get /api/v4/users/{id}/events': 'Get the contribution events for the specified user, sorted from newest to oldest. Scope `read_user` or `api` is required. Events associated with epics are not available using API. ', 'get /api/v4/users/{id}/associations_count': "Get a list of a specified user's count of: - Projects. - Groups. - Issues. - Merge requests. Administrators can query any user, but non-administrators can only query themselves. ", 'delete /api/v4/users/{user_id}/impersonation_tokens/{impersonation_token_id}': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Requires administrator access. It revokes an impersonation token. ', 'get /api/v4/users/{user_id}/impersonation_tokens/{impersonation_token_id}': "DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated > Requires administrators permissions. It shows a user's impersonation token. ", 'post /api/v4/users/{user_id}/impersonation_tokens': "DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Requires administrator access. Token values are returned once. Make sure you save it because you can't access it again. It creates a new impersonation token. Only administrators can do this. You are only able to create impersonation tokens to impersonate the user and perform both API calls and Git reads and writes. The user can't see these tokens in their profile settings page. ", 'get /api/v4/users/{user_id}/impersonation_tokens': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Requires administrator access. It retrieves every impersonation token of the user. Use the pagination parameters `page` and `per_page` to restrict the list of impersonation tokens. ', 'post /api/v4/users/{user_id}/personal_access_tokens': "DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Use this API to create a new personal access token. Token values are returned once so, make sure you save it as you can't access it again. This API can only be used by GitLab administrators. ", 'delete /api/v4/features/{name}': "Removes a feature gate. Response is equal when the gate exists, or doesn't. ", 'post /api/v4/features/{name}': "Set a feature's gate value. If a feature with the given name doesn't exist yet, it's created. The value can be a boolean, or an integer to indicate percentage of time. WARNING: Before you enable a feature still in development, you should understand the [security and stability risks](../administration/feature_flags.md#risks-when-enabling-features-still-in-development). ", 'get /api/v4/features/definitions': 'Get a list of all feature definitions. ', 'get /api/v4/features': 'Get a list of all persisted features, with its gate values. ', 'post /api/v4/geo/status': 'Internal endpoint that posts the current node status', 'get /api/v4/geo/repositories/{gl_repository}/pipeline_refs': 'Used by secondary runners to verify the secondary instance has the very latest version', 'get /api/v4/geo/retrieve/{replicable_name}/{replicable_id}': 'Internal endpoint that returns a replicable file', 'get /api/v4/geo/proxy': 'Determine if a Geo site should proxy requests', 'post /api/v4/geo/proxy_git_ssh/receive_pack': 'Internal endpoint that posts git-receive-pack for git push', 'post /api/v4/geo/proxy_git_ssh/info_refs_receive_pack': 'Internal endpoint that returns git-received-pack output for git push', 'post /api/v4/geo/proxy_git_ssh/upload_pack': 'Internal endpoint that posts git-upload-pack for git clone/pull', 'post /api/v4/geo/proxy_git_ssh/info_refs_upload_pack': 'Internal endpoint that returns info refs upload pack for git clone/pull', 'post /api/v4/geo/node_proxy/{id}/graphql': 'Query the GraphQL endpoint of an existing Geo node', 'post /api/v4/integrations/jira_connect/subscriptions': 'Subscribe a namespace to a JiraConnectInstallation', 'post /api/v4/integrations/slack/events': 'Receive Slack events', 'get /api/v4/keys': 'You can search for a user that owns a specific SSH key. Note only administrators can lookup SSH key with the fingerprint of an SSH key. ', 'get /api/v4/keys/{id}': 'Get SSH key with user by ID of an SSH key. Only available to administrators. ', 'post /api/v4/markdown': '', 'get /api/v4/merge_requests': 'Get all merge requests the authenticated user has access to. By default it returns only merge requests created by the current user. To get all merge requests, use parameter `scope=all`. The `state` parameter can be used to get only merge requests with a given state (`opened`, `closed`, `locked`, or `merged`) or all of them (`all`). It should be noted that when searching by `locked` it mostly returns no results as it is a short-lived, transitional state. The pagination parameters `page` and `per_page` can be used to restrict the list of merge requests. ', 'post /api/v4/environments/{id}/metrics_dashboard/annotations': 'Create a new annotation', 'post /api/v4/clusters/{id}/metrics_dashboard/annotations': 'Create a new annotation', 'get /api/v4/namespaces/{id}/exists': 'Get existence of a namespace by path. Suggests a new namespace path that does not already exist. ', 'get /api/v4/namespaces/{id}': 'Get a namespace by ID. ', 'put /api/v4/namespaces/{id}': 'Update a namespace', 'get /api/v4/namespaces': 'Get a list of the namespaces of the authenticated user. If the user is an administrator, a list of all namespaces in the GitLab instance is shown. ', 'get /api/v4/namespaces/storage/limit_exclusions': 'Retrieve all limit exclusions', 'delete /api/v4/namespaces/{id}/storage/limit_exclusion': 'Removes a storage limit exclusion for a Namespace', 'post /api/v4/namespaces/{id}/storage/limit_exclusion': 'Creates a storage limit exclusion for a Namespace', 'put /api/v4/namespaces/{id}/gitlab_subscription': 'Update the subscription for the namespace', 'get /api/v4/namespaces/{id}/gitlab_subscription': 'Returns the subscription for the namespace', 'post /api/v4/namespaces/{id}/gitlab_subscription': 'Create a subscription for the namespace', 'get /api/v4/pages/domains': 'Prerequisites: - You must have administrator access to the instance. Get a list of all Pages domains. ', 'delete /api/v4/personal_access_tokens/{id}': 'Revoke a personal access token using its ID. ', 'get /api/v4/personal_access_tokens/{id}': 'Get a single personal access token by its ID. Users can get their own tokens. Administrators can get any token. ', 'post /api/v4/personal_access_tokens/{id}/rotate': 'In GitLab 16.6 and later, you can use the `expires_at` parameter to set a different expiry date. This non-default expiry date can be up to a maximum of one year from the rotation date. ', 'get /api/v4/personal_access_tokens': 'Get all personal access tokens the authenticated user has access to. By default, returns an unfiltered list of: - Only personal access tokens created by the current user to a non-administrator. - All personal access tokens to an administrator. Administrators: - Can use the `user_id` parameter to filter by a user. - Can use other filters on all personal access tokens (GitLab 15.5 and later). Non-administrators: - Cannot use the `user_id` parameter to filter on any user except themselves, otherwise they receive a `401 Unauthorized` response. - Can only filter on their own personal access tokens (GitLab 15.5 and later). ', 'post /api/v4/personal_access_tokens/self/rotate': 'Requires: - `api` scope. You can use the `expires_at` parameter to set a different expiry date. This non-default expiry date can be up to a maximum of one year from the rotation date. ', 'delete /api/v4/personal_access_tokens/self': 'Revokes a personal access token that is passed in using a request header. Requires: - `api` scope in GitLab 15.0 to GitLab 15.3. - Any scope in GitLab 15.4 and later. ', 'get /api/v4/personal_access_tokens/self': 'Get a single personal access token and information about that token by passing the token in a header. ', 'post /api/v4/project_repository_storage_moves': 'Schedules repository storage moves for each project repository stored on the source storage shard. This endpoint migrates all projects at once. For more information, see [Move all projects](../administration/operations/moving_repositories.md#move-all-projects). ', 'get /api/v4/project_repository_storage_moves': '', 'get /api/v4/project_repository_storage_moves/{repository_storage_move_id}': '', 'post /api/v4/snippets/{id}/repository_storage_moves': '', 'get /api/v4/snippets/{id}/repository_storage_moves': '', 'get /api/v4/snippets/{id}/repository_storage_moves/{repository_storage_move_id}': '', 'get /api/v4/snippets/{id}/user_agent_detail': 'NOTE: Available only for administrators. ', 'get /api/v4/snippets/{id}/files/{ref}/{file_path}/raw': 'Returns the raw file content as plain text. ', 'get /api/v4/snippets/{id}/raw': "Get a single snippet's raw contents. ", 'delete /api/v4/snippets/{id}': 'Delete an existing snippet. ', 'put /api/v4/snippets/{id}': 'Update an existing snippet. NOTE: The user must have permission to change an existing snippet. ', 'get /api/v4/snippets/{id}': 'Get a single snippet. ', 'post /api/v4/snippets': 'Create a new snippet. NOTE: The user must have permission to create new snippets. ', 'get /api/v4/snippets': "Get a list of the current user's snippets. ", 'get /api/v4/snippets/all': 'List all snippets the current user has access to. Users with the Administrator or Auditor access levels can see all snippets (both personal and project). ', 'get /api/v4/snippets/public': 'List all public snippets. ', 'post /api/v4/snippet_repository_storage_moves': 'Schedules repository storage moves for each snippet repository stored on the source storage shard. This endpoint migrates all snippets at once. For more information, see [Move all snippets](../administration/operations/moving_repositories.md#move-all-snippets). ', 'get /api/v4/snippet_repository_storage_moves': '', 'get /api/v4/snippet_repository_storage_moves/{repository_storage_move_id}': '', 'put /api/v4/suggestions/batch_apply': '', 'put /api/v4/suggestions/{id}/apply': 'Applies a suggested patch in a merge request. Users must have at least the Developer role to perform such action. ', 'delete /api/v4/hooks/{hook_id}': 'Deletes a system hook. ', 'post /api/v4/hooks/{hook_id}': 'Executes the system hook with mock data. ', 'put /api/v4/hooks/{hook_id}': 'Edit system hook', 'get /api/v4/hooks/{hook_id}': 'Get a system hook by its ID. ', 'post /api/v4/hooks': 'Add a new system hook. ', 'get /api/v4/hooks': 'Get a list of all system hooks. ', 'delete /api/v4/hooks/{hook_id}/url_variables/{key}': 'Un-Set a url variable', 'put /api/v4/hooks/{hook_id}/url_variables/{key}': 'Set a url variable', 'get /api/v4/feature_flags/unleash/{project_id}/client/features': 'Get a list of features', 'get /api/v4/feature_flags/unleash/{project_id}/features': 'Get a list of features (deprecated, v2 client support)', 'get /api/v4/usage_data/service_ping': 'Get the latest ServicePing payload', 'get /api/v4/usage_data/queries': 'This action is behind the `usage_data_queries_api` feature flag and is available only for the GitLab instance [Administrator](../user/permissions.md) users. Return all of the raw SQL queries used to compute Service Ping. ', 'get /api/v4/usage_data/non_sql_metrics': 'Get Non SQL usage ping metrics', 'get /api/v4/usage_data/metric_definitions': 'Export all metric definitions as a single YAML file, similar to the [Metrics Dictionary](https://metrics.gitlab.com/), for easier importing. ', 'post /api/v4/usage_data/track_event': 'Track gitlab internal events', 'post /api/v4/usage_data/increment_unique_users': 'Track usage data event for the current user', 'post /api/v4/usage_data/increment_counter': 'Track usage data event', 'post /api/v4/user/runners': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** GitLab.com, Self-managed, GitLab Dedicated Creates a runner linked to the current user. Prerequisites: - You must be an administrator or have the Owner role of the target namespace or project. - For `instance_type`, you must be an administrator of the GitLab instance. - For `group_type` or `project_type` with an Owner role, an administrator must not have enabled [restrict runner registration](../administration/settings/continuous_integration.md#restrict-runner-registration-by-all-users-in-an-instance). - An access token with the `create_runner` scope. Be sure to copy or save the `token` in the response, the value cannot be retrieved again. ', 'get /api/v4/user/status': 'Get the status of the authenticated user. ', 'patch /api/v4/user/status': 'Set the status of the current user. ', 'put /api/v4/user/status': 'Set the status of the current user. ', 'get /api/v4/user/activities': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Pre-requisite: - You must be an administrator to view the activity of users with private profiles. Get the last activity date for users with public profiles, sorted from oldest to newest. The activities that update the user event timestamps (`last_activity_on` and `current_sign_in_at`) are: - Git HTTP/SSH activities (such as clone, push) - User logging in to GitLab - User visiting pages related to dashboards, projects, issues, and merge requests ([introduced](https://gitlab.com/gitlab-org/gitlab-foss/-/issues/54947) in GitLab 11.8) - User using the API - User using the GraphQL API By default, it shows the activity for users with public profiles in the last 6 months, but this can be amended by using the `from` parameter. ', 'delete /api/v4/user/emails/{email_id}': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Prerequisites: - You must be an administrator of a self-managed GitLab instance. Deletes an email address owned by a specified user. This cannot delete a primary email address. ', 'get /api/v4/user/emails/{email_id}': 'Creates a new email owned by the authenticated user. ', 'post /api/v4/user/emails': 'Creates a new email owned by the authenticated user. ', 'get /api/v4/user/emails': "DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Get a list of a specified user's emails. Available only for administrator NOTE: This endpoint does not return the primary email address, but [issue 25077](https://gitlab.com/gitlab-org/gitlab/-/issues/25077) proposes to change this behavior. ", 'get /api/v4/user/preferences': "Get a list of the authenticated user's preferences. ", 'put /api/v4/user/preferences': "Update the current user's preferences. ", 'put /api/v4/user/{user_id}/credit_card_validation': "Update a user's credit_card_validation", 'delete /api/v4/user/gpg_keys/{key_id}': 'Delete a GPG key owned by the authenticated user. ', 'get /api/v4/user/gpg_keys/{key_id}': 'Get a specific GPG key of authenticated user. ', 'post /api/v4/user/gpg_keys/{key_id}/revoke': 'Revoke a GPG key owned by currently authenticated user', 'post /api/v4/user/gpg_keys': 'Creates a new GPG key owned by the authenticated user. ', 'get /api/v4/user/gpg_keys': "Get a list of the authenticated user's GPG keys. ", 'delete /api/v4/user/keys/{key_id}': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Deletes key owned by a specified user. Available only for administrator. ', 'get /api/v4/user/keys/{key_id}': 'Get a single key. ', 'post /api/v4/user/keys': 'Creates a new key owned by the authenticated user. ', 'get /api/v4/user/keys': "Get a list of the authenticated user's SSH keys. This function takes pagination parameters `page` and `per_page` to restrict the list of keys. ", 'get /api/v3/user': 'Get the currently authenticated user', 'post /api/v4/user/personal_access_tokens': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Use this API to create a new personal access token for the currently authenticated user. For security purposes, the token: - Is limited to the [`k8s_proxy` scope](../user/profile/personal_access_tokens.md#personal-access-token-scopes).   This scope grants permission to perform Kubernetes API calls using the agent for Kubernetes. - By default, expires at the end of the day it was created on. Token values are returned once, so make sure you save the token as you cannot access it again. ', 'get /api/v4/user_counts': 'Get the counts (same as in the upper-right menu) of the authenticated user.', 'get /api/v4/application/statistics': 'List the current statistics of the GitLab instance. You have to be an administrator to perform this action. NOTE: These statistics show exact counts for values less than 10,000. For values of 10,000 and higher, these statistics show approximate data when [TablesampleCountStrategy](https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/database/count/tablesample_count_strategy.rb?ref_type=heads#L16) and [ReltuplesCountStrategy](https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/database/count/reltuples_count_strategy.rb?ref_type=heads) strategies are used for calculations. ', 'put /api/v4/application/appearance': 'Use an API call to modify GitLab instance appearance configuration. ', 'get /api/v4/application/appearance': 'List the current appearance configuration of the GitLab instance. ', 'put /api/v4/application/plan_limits': 'Modify the limits of a plan on the GitLab instance. ', 'get /api/v4/application/plan_limits': 'List the current limits of a plan on the GitLab instance. ', 'get /api/v4/deploy_keys': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated > `projects_with_readonly_access` [introduced](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/119147) in GitLab 16.0. Get a list of all deploy keys across all projects of the GitLab instance. This endpoint requires administrator access and is not available on GitLab.com. ', 'get /api/v4/deploy_tokens': 'DETAILS: **Tier:** Free, Premium, Ultimate **Offering:** Self-managed, GitLab Dedicated Get a list of all deploy tokens across the GitLab instance. This endpoint requires administrator access. ', 'post /api/v4/import/github/gists': "You can use the GitLab API to import personal GitHub gists (with up to 10 files) into personal GitLab snippets. GitHub gists with more than 10 files are skipped. You should manually migrate these GitHub gists. If any gists couldn't be imported, an email is sent with a list of gists that were not imported. ", 'post /api/v4/import/github/cancel': 'Cancel an in-progress GitHub project import using the API. ', 'post /api/v4/import/github': 'Import your projects from GitHub to GitLab using the API. Prerequisites: - [Prerequisites for GitHub importer](../user/project/import/github.md#prerequisites). - The namespace set in `target_namespace` must exist. - The namespace can be your user namespace or an existing group that you have at least the Maintainer role for. ', 'post /api/v4/import/bitbucket_server': 'Import your projects from Bitbucket Server to GitLab using the API. The Bitbucket Project Key is only used for finding the repository in Bitbucket. You must specify a `target_namespace` if you want to import the repository to a GitLab group. If you do not specify `target_namespace`, the project imports to your personal user namespace. Prerequisites: - For more information, see [prerequisites for Bitbucket Server importer](../user/project/import/bitbucket_server.md). ', 'post /api/v4/slack/trigger': 'Trigger a global slack command', 'get /api/v4/metadata': '', 'get /api/v4/version': '', 'post /api/v4/topics/merge': 'You must be an administrator to merge a source topic into a target topic. When you merge topics, you delete the source topic and move all assigned projects to the target topic. ', 'delete /api/v4/topics/{id}': 'You must be an administrator to delete a project topic. When you delete a project topic, you also delete the topic assignment for projects. ', 'put /api/v4/topics/{id}': 'Update a project topic. Only available to administrators. ', 'get /api/v4/topics/{id}': 'Get a project topic by ID. ', 'post /api/v4/topics': 'Create a new project topic. Only available to administrators. ', 'get /api/v4/topics': 'Returns a list of project topics in the GitLab instance ordered by number of associated projects. '}
Note: Before actually using a Gitlab API call, *you should call the `get_api_documentation_gitlab` function in the `utils` module to get detailed API documentation of the API.* For example, if you want to use the API GET /api/v4/projects/{id}/repository/commits, you should first do: 
<execute_ipython>
from utils import get_api_documentation_gitlab
get_api_documentation_gitlab('GET /api/v4/projects/{id}/repository/commits')
</execute_ipython>
This will provide you with detailed descriptions of the input parameters and example output jsons.IMPORTANT: You should ONLY interact with the environment provided to you AND NEVER ASK FOR HUMAN HELP.
When you think you have completed the request, please run the following command: <execute_bash> exit </execute_bash>.

obs - NullObservation(content='', observation='null')

Step 1:
act - **BrowseInteractiveAction**
BROWSER_ACTIONS: goto("http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/users/sign_in")
obs - **BrowserOutputObservation**
URL: http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/users/sign_in
Status code: 200
Error: False
Open pages: ['http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/users/sign_in']
Active page index: 0
Last browser action: goto("http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/users/sign_in")
Last browser action error: 
Focused element bid: 66
CONTENT: #  GitLab Community Edition 

Username or email 

This field is required. 

Password 

This field is required. 

<::before><::after> Remember me 

[ Forgot your password? ](/users/password/new)

Sign in 

Don't have an account yet? [ Register now ](/users/sign_up)

* * *

[ Explore ](/explore) [ Help ](/help) [ About GitLab ](https://about.gitlab.com) [ Community forum ](https://forum.gitlab.com)



Step 2:
act - **BrowseInteractiveAction**
BROWSER_ACTIONS: fill("66", "byteblaze")
fill("70", "hello1234")
click("83")
obs - **BrowserOutputObservation**
URL: http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/
Status code: 200
Error: True
Open pages: ['http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/']
Active page index: 0
Last browser action: fill("66", "byteblaze")
fill("70", "hello1234")
click("83")
Last browser action error: TimeoutError: Timeout 500ms exceeded.
=========================== logs ===========================
waiting for get_by_test_id("83")
  locator resolved to <button value="" bid="83" name="button" type="submit" br…>Sign in</button>
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  click action done
  waiting for scheduled navigations to finish
============================================================
Focused element bid: 49
CONTENT: Skip to content 

GitLab  [ ](/ "Dashboard")

  *     * **Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)

Frequently visited 

      * Projects you visit often will appear here 

[ View all projects  ](/dashboard/projects)




[ Projects ](/dashboard/projects) [ Groups ](/dashboard/groups) [ Milestones ](/dashboard/milestones) [ Snippets ](/dashboard/snippets) [ Activity ](/dashboard/activity)

  * ` / `

  * [ ](/search "Search")



  * [ ](/projects/new "Create new...")

    * [ New project/repository ](/projects/new)
    * [ New group ](/groups/new)
    * [ New snippet ](/-/snippets/new)

  * [ 16  ](/dashboard/issues?assignee_username=byteblaze "Issues")
  * [ 13  ](/dashboard/merge_requests?assignee_username=byteblaze "Merge requests")

    * Merge requests 
    * [ Assigned to you  5  ](/dashboard/merge_requests?assignee_username=byteblaze)
    * [ Review requests for you  8  ](/dashboard/merge_requests?reviewer_username=byteblaze)

  * [ 9  ](/dashboard/todos "To-Do List")
  * [ Help  ](/help)

    *     * What's new  10 
    * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * Keyboard shortcuts ` ? `
    *     * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)

  * [ ](/byteblaze)

    * [ Byte Blaze  @byteblaze  🌴  Out of Office  ](/byteblaze)
    *     * Edit status 
    * [ Edit profile ](/-/profile)
    * [ Preferences ](/-/profile/preferences)
    *     * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)
    *     * [ Sign out ](/users/sign_out)




Toggle navigation  Menu 

<::after>

#  Projects 

[ New project  ](/projects/new)

<::after>

<::after>

  * [ Yours  33  ](/dashboard/projects)
  * [ Starred  15  ](/dashboard/projects/starred)
  * [ Explore ](/explore)
  * [ Topics ](/explore/projects/topics)



Name 

  * Sort by 
  * [ Updated date ](/?sort=latest_activity_desc)
  * [ Last created ](/?sort=created_desc)
  * [ Name ](/?sort=name_asc)
  * [ Name, descending ](/?sort=name_desc)
  * [ Most stars ](/?sort=stars_desc)
  * [ Oldest updated ](/?sort=latest_activity_asc)
  * [ Oldest created ](/?sort=created_asc)
  *   * [ Hide archived projects ](/?sort=name_asc)
  * [ Show archived projects ](/?archived=true&sort=name_asc)
  * [ Show archived projects only ](/?archived=only&sort=name_asc)
  *   * [ Owned by anyone ](/?sort=name_asc)
  * [ Owned by me ](/?personal=true&sort=name_asc)



  * [ All ](/dashboard/projects)
  * [ Personal ](/?personal=true&sort=name_asc)



  * <::after>

[ 2  ](/byteblaze/2019-nCov)

##  [ Byte Blaze /  2019-nCov  ](/byteblaze/2019-nCov)

Owner 

Use Google Maps Timeline data to compare with COVID-19 patient history location. 

[ 0 ](/byteblaze/2019-nCov/-/starrers "Stars")

Updated  2 days ago 

[ 0 ](/byteblaze/2019-nCov/-/starrers "Stars") [ 0 ](/byteblaze/2019-nCov/-/forks "Forks") [ 0 ](/byteblaze/2019-nCov/-/merge_requests "Merge requests") [ 0 ](/byteblaze/2019-nCov/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ A  ](/byteblaze/a11y-syntax-highlighting)

##  [ Byte Blaze /  a11y-syntax-highlighting  ](/byteblaze/a11y-syntax-highlighting)

Owner 

💄  Accessible light and dark syntax highlighting themes 

[ ](/byteblaze/a11y-syntax-highlighting/-/commit/9d1a59a6c16cafff1c8ed4270f5a82c67327fc1d/pipelines?ref=main "Pipeline: failed") [ 2 ](/byteblaze/a11y-syntax-highlighting/-/starrers "Stars")

Updated  2 days ago 

[ ](/byteblaze/a11y-syntax-highlighting/-/commit/9d1a59a6c16cafff1c8ed4270f5a82c67327fc1d/pipelines?ref=main "Pipeline: failed") [ 2 ](/byteblaze/a11y-syntax-highlighting/-/starrers "Stars") [ 0 ](/byteblaze/a11y-syntax-highlighting/-/forks "Forks") [ 0 ](/byteblaze/a11y-syntax-highlighting/-/merge_requests "Merge requests") [ 1 ](/byteblaze/a11y-syntax-highlighting/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ A  ](/byteblaze/a11y-webring.club)

##  [ Byte Blaze /  a11y-webring.club  ](/byteblaze/a11y-webring.club)

Owner 

🌐  A webring for digital accessibility practitioners. 

[ 2 ](/byteblaze/a11y-webring.club/-/starrers "Stars")

Updated  2 days ago 

[ 2 ](/byteblaze/a11y-webring.club/-/starrers "Stars") [ 0 ](/byteblaze/a11y-webring.club/-/forks "Forks") [ 1 ](/byteblaze/a11y-webring.club/-/merge_requests "Merge requests") [ 4 ](/byteblaze/a11y-webring.club/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ A  ](/a11yproject/a11yproject.com)

##  [ The A11Y Project /  a11yproject.com  ](/a11yproject/a11yproject.com)

Maintainer 

The A11Y Project is a community-driven effort to make digital accessibility easier. 

[ 21 ](/a11yproject/a11yproject.com/-/starrers "Stars")

Updated  1 day ago 

[ 21 ](/a11yproject/a11yproject.com/-/starrers "Stars") [ 0 ](/a11yproject/a11yproject.com/-/forks "Forks") [ 12 ](/a11yproject/a11yproject.com/-/merge_requests "Merge requests") [ 42 ](/a11yproject/a11yproject.com/-/issues "Issues")

Updated  1 day ago 

  * <::after>

[ A  ](/byteblaze/accessible-html-content-patterns)

##  [ Byte Blaze /  accessible-html-content-patterns  ](/byteblaze/accessible-html-content-patterns)

Owner 

♿  ️ The full HTML5 Doctor Element Index as well as common markup patterns for quick reference. 

[ 1 ](/byteblaze/accessible-html-content-patterns/-/starrers "Stars")

Updated  1 day ago 

[ 1 ](/byteblaze/accessible-html-content-patterns/-/starrers "Stars") [ 0 ](/byteblaze/accessible-html-content-patterns/-/forks "Forks") [ 0 ](/byteblaze/accessible-html-content-patterns/-/merge_requests "Merge requests") [ 0 ](/byteblaze/accessible-html-content-patterns/-/issues "Issues")

Updated  1 day ago 

  * <::after>

[ A  ](/byteblaze/agi_index)

##  [ Byte Blaze /  agi_index  ](/byteblaze/agi_index)

Owner 

[ 0 ](/byteblaze/agi_index/-/starrers "Stars")

Updated  2 days ago 

[ 0 ](/byteblaze/agi_index/-/starrers "Stars") [ 0 ](/byteblaze/agi_index/-/forks "Forks") [ 0 ](/byteblaze/agi_index/-/merge_requests "Merge requests") [ 0 ](/byteblaze/agi_index/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ ](/byteblaze/AGISite)

##  [ Byte Blaze /  AGISite  ](/byteblaze/AGISite)

Owner 

Example Jekyll site using GitLab Pages: [ https://pages.gitlab.io/jekyll ](https://pages.gitlab.io/jekyll)

[ 0 ](/byteblaze/AGISite/-/starrers "Stars")

Updated  2 days ago 

[ 0 ](/byteblaze/AGISite/-/starrers "Stars") [ 0 ](/byteblaze/AGISite/-/forks "Forks") [ 0 ](/byteblaze/AGISite/-/merge_requests "Merge requests") [ 0 ](/byteblaze/AGISite/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ A  ](/byteblaze/AutoAGI)

##  [ Byte Blaze /  AutoAGI  ](/byteblaze/AutoAGI)

Owner 

[ 0 ](/byteblaze/AutoAGI/-/starrers "Stars")

Updated  1 day ago 

[ 0 ](/byteblaze/AutoAGI/-/starrers "Stars") [ 0 ](/byteblaze/AutoAGI/-/forks "Forks") [ 0 ](/byteblaze/AutoAGI/-/merge_requests "Merge requests") [ 0 ](/byteblaze/AutoAGI/-/issues "Issues")

Updated  1 day ago 

  * <::after>

[ A  ](/byteblaze/awesome-llms)

##  [ Byte Blaze /  awesome-llms  ](/byteblaze/awesome-llms)

Owner 

[ 0 ](/byteblaze/awesome-llms/-/starrers "Stars")

Updated  1 day ago 

[ 0 ](/byteblaze/awesome-llms/-/starrers "Stars") [ 0 ](/byteblaze/awesome-llms/-/forks "Forks") [ 0 ](/byteblaze/awesome-llms/-/merge_requests "Merge requests") [ 0 ](/byteblaze/awesome-llms/-/issues "Issues")

Updated  1 day ago 

  * <::after>

[ A  ](/byteblaze/awesome_llm_reading)

##  [ Byte Blaze /  awesome_llm_reading  ](/byteblaze/awesome_llm_reading)

Owner 

[ 0 ](/byteblaze/awesome_llm_reading/-/starrers "Stars")

Updated  1 day ago 

[ 0 ](/byteblaze/awesome_llm_reading/-/starrers "Stars") [ 0 ](/byteblaze/awesome_llm_reading/-/forks "Forks") [ 0 ](/byteblaze/awesome_llm_reading/-/merge_requests "Merge requests") [ 0 ](/byteblaze/awesome_llm_reading/-/issues "Issues")

Updated  1 day ago 

  * <::after>

[ A  ](/byteblaze/awesome_program_aided_reasoning)

##  [ Byte Blaze /  awesome_program_aided_reasoning  ](/byteblaze/awesome_program_aided_reasoning)

Owner 

[ 0 ](/byteblaze/awesome_program_aided_reasoning/-/starrers "Stars")

Updated  2 days ago 

[ 0 ](/byteblaze/awesome_program_aided_reasoning/-/starrers "Stars") [ 0 ](/byteblaze/awesome_program_aided_reasoning/-/forks "Forks") [ 0 ](/byteblaze/awesome_program_aided_reasoning/-/merge_requests "Merge requests") [ 0 ](/byteblaze/awesome_program_aided_reasoning/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ A  ](/byteblaze/awesome_web_agents)

##  [ Byte Blaze /  awesome_web_agents  ](/byteblaze/awesome_web_agents)

Owner 

[ 0 ](/byteblaze/awesome_web_agents/-/starrers "Stars")

Updated  2 days ago 

[ 0 ](/byteblaze/awesome_web_agents/-/starrers "Stars") [ 0 ](/byteblaze/awesome_web_agents/-/forks "Forks") [ 0 ](/byteblaze/awesome_web_agents/-/merge_requests "Merge requests") [ 1 ](/byteblaze/awesome_web_agents/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ A  ](/byteblaze/awesome_webagent)

##  [ Byte Blaze /  awesome_webagent  ](/byteblaze/awesome_webagent)

Owner 

[ 1 ](/byteblaze/awesome_webagent/-/starrers "Stars")

Updated  1 day ago 

[ 1 ](/byteblaze/awesome_webagent/-/starrers "Stars") [ 0 ](/byteblaze/awesome_webagent/-/forks "Forks") [ 0 ](/byteblaze/awesome_webagent/-/merge_requests "Merge requests") [ 1 ](/byteblaze/awesome_webagent/-/issues "Issues")

Updated  1 day ago 

  * <::after>

[ C  ](/byteblaze/chatgpt)

##  [ Byte Blaze /  Chatgpt  ](/byteblaze/chatgpt)

Owner 

[ 0 ](/byteblaze/chatgpt/-/starrers "Stars")

Updated  2 days ago 

[ 0 ](/byteblaze/chatgpt/-/starrers "Stars") [ 0 ](/byteblaze/chatgpt/-/forks "Forks") [ 0 ](/byteblaze/chatgpt/-/merge_requests "Merge requests") [ 0 ](/byteblaze/chatgpt/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ C  ](/byteblaze/chatgpt_plugin)

##  [ Byte Blaze /  chatgpt_plugin  ](/byteblaze/chatgpt_plugin)

Owner 

A new project for ChatGPT plugin 

[ 0 ](/byteblaze/chatgpt_plugin/-/starrers "Stars")

Updated  2 days ago 

[ 0 ](/byteblaze/chatgpt_plugin/-/starrers "Stars") [ 0 ](/byteblaze/chatgpt_plugin/-/forks "Forks") [ 0 ](/byteblaze/chatgpt_plugin/-/merge_requests "Merge requests") [ 0 ](/byteblaze/chatgpt_plugin/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ ](/byteblaze/cloud-to-butt)

##  [ Byte Blaze /  cloud-to-butt  ](/byteblaze/cloud-to-butt)

Owner 

Chrome extension that replaces occurrences of 'the cloud' with 'my butt' 

[ 0 ](/byteblaze/cloud-to-butt/-/starrers "Stars")

Updated  1 day ago 

[ 0 ](/byteblaze/cloud-to-butt/-/starrers "Stars") [ 0 ](/byteblaze/cloud-to-butt/-/forks "Forks") [ 0 ](/byteblaze/cloud-to-butt/-/merge_requests "Merge requests") [ 0 ](/byteblaze/cloud-to-butt/-/issues "Issues")

Updated  1 day ago 

  * <::after>

[ D  ](/primer/design)

##  [ Primer /  design  ](/primer/design)

Developer 

Primer Design Guidelines 

[ 21 ](/primer/design/-/starrers "Stars")

Updated  24 minutes ago 

[ 21 ](/primer/design/-/starrers "Stars") [ 0 ](/primer/design/-/forks "Forks") [ 19 ](/primer/design/-/merge_requests "Merge requests") [ 21 ](/primer/design/-/issues "Issues")

Updated  24 minutes ago 

  * <::after>

[ D  ](/byteblaze/dotfiles)

##  [ Byte Blaze /  dotfiles  ](/byteblaze/dotfiles)

Owner 

🤖  Computer setup 

[ 0 ](/byteblaze/dotfiles/-/starrers "Stars")

Updated  2 minutes ago 

[ 0 ](/byteblaze/dotfiles/-/starrers "Stars") [ 0 ](/byteblaze/dotfiles/-/forks "Forks") [ 0 ](/byteblaze/dotfiles/-/merge_requests "Merge requests") [ 3 ](/byteblaze/dotfiles/-/issues "Issues")

Updated  2 minutes ago 

  * <::after>

[ D  ](/byteblaze/dots)

##  [ Byte Blaze /  dots  ](/byteblaze/dots)

Owner 

⋅files that define my system settings 

[ 0 ](/byteblaze/dots/-/starrers "Stars")

Updated  2 days ago 

[ 0 ](/byteblaze/dots/-/starrers "Stars") [ 0 ](/byteblaze/dots/-/forks "Forks") [ 0 ](/byteblaze/dots/-/merge_requests "Merge requests") [ 0 ](/byteblaze/dots/-/issues "Issues")

Updated  2 days ago 

  * <::after>

[ E  ](/byteblaze/empathy-prompts)

##  [ Byte Blaze /  empathy-prompts  ](/byteblaze/empathy-prompts)

Owner 

💡  Ideas to help consider Inclusive Design principles when making things for others to use. 

[ 6 ](/byteblaze/empathy-prompts/-/starrers "Stars")

Updated  2 days ago 

[ 6 ](/byteblaze/empathy-prompts/-/starrers "Stars") [ 1 ](/byteblaze/empathy-prompts/-/forks "Forks") [ 2 ](/byteblaze/empathy-prompts/-/merge_requests "Merge requests") [ 6 ](/byteblaze/empathy-prompts/-/issues "Issues")

Updated  2 days ago 




  * Prev 
  * [ 1 ](/?non_archived=true&sort=name_asc)
  * [ 2 ](/?non_archived=true&page=2&sort=name_asc)
  * [ Next  ](/?non_archived=true&page=2&sort=name_asc)



#  Menu 

[ ](/search)

Create new... 

  * [ New project/repository  ](/projects/new)
  * [ New group  ](/groups/new)
  * [ New snippet  ](/-/snippets/new)




**Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)



Step 3:
act - **BrowseInteractiveAction**
BROWSER_ACTIONS: goto("http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python")
obs - **BrowserOutputObservation**
URL: http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python
Status code: 200
Error: False
Open pages: ['http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python']
Active page index: 0
Last browser action: goto("http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python")
Last browser action error: 
Focused element bid: 65
CONTENT: Skip to content 

GitLab  [ ](/ "Dashboard")

  *     * **Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)

Frequently visited 

      * Projects you visit often will appear here 

[ View all projects  ](/dashboard/projects)




[ Projects ](/dashboard/projects) [ Groups ](/dashboard/groups) [ Milestones ](/dashboard/milestones) [ Snippets ](/dashboard/snippets) [ Activity ](/dashboard/activity)

  * ` / `

  * [ ](/search?project_id=84 "Search")



  * [ ](/projects/new "Create new...")

    * This project 
    * [ New issue ](/vinta/awesome-python/-/issues/new)
    *     * GitLab 
    * [ New project/repository ](/projects/new)
    * [ New group ](/groups/new)
    * [ New snippet ](/-/snippets/new)

  * [ 16  ](/dashboard/issues?assignee_username=byteblaze "Issues")
  * [ 13  ](/dashboard/merge_requests?assignee_username=byteblaze "Merge requests")

    * Merge requests 
    * [ Assigned to you  5  ](/dashboard/merge_requests?assignee_username=byteblaze)
    * [ Review requests for you  8  ](/dashboard/merge_requests?reviewer_username=byteblaze)

  * [ 9  ](/dashboard/todos "To-Do List")
  * [ Help  ](/help)

    *     * What's new  10 
    * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * Keyboard shortcuts ` ? `
    *     * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)

  * [ ](/byteblaze)

    * [ Byte Blaze  @byteblaze  🌴  Out of Office  ](/byteblaze)
    *     * Edit status 
    * [ Edit profile ](/-/profile)
    * [ Preferences ](/-/profile/preferences)
    *     * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)
    *     * [ Sign out ](/users/sign_out)




Toggle navigation  Menu 

  * [ A  awesome-python  ](/vinta/awesome-python)
  * [ Project information  ](/vinta/awesome-python/activity)
    * **Project information**
    *     * [ Activity  ](/vinta/awesome-python/activity)
    * [ Labels  ](/vinta/awesome-python/-/labels)
    * [ Members  ](/vinta/awesome-python/-/project_members)
  * [ Repository  ](/vinta/awesome-python/-/tree/master)
    * **Repository**
    *     * [ Files  ](/vinta/awesome-python/-/tree/master)
    * [ Commits  ](/vinta/awesome-python/-/commits/master)
    * [ Branches  ](/vinta/awesome-python/-/branches)
    * [ Tags  ](/vinta/awesome-python/-/tags)
    * [ Contributors  ](/vinta/awesome-python/-/graphs/master)
    * [ Graph  ](/vinta/awesome-python/-/network/master)
    * [ Compare  ](/vinta/awesome-python/-/compare?from=master&to=master)
  * [ Issues  13  ](/vinta/awesome-python/-/issues)
    * **Issues** 13 
    *     * [ List  ](/vinta/awesome-python/-/issues)
    * [ Boards  ](/vinta/awesome-python/-/boards)
    * [ Service Desk  ](/vinta/awesome-python/-/issues/service_desk)
    * [ Milestones  ](/vinta/awesome-python/-/milestones)
  * [ Merge requests  317  ](/vinta/awesome-python/-/merge_requests)
    * **Merge requests** 317 
  * [ CI/CD  ](/vinta/awesome-python/-/pipelines)
    * **CI/CD**
    *     * [ Pipelines  ](/vinta/awesome-python/-/pipelines)
    * [ Jobs  ](/vinta/awesome-python/-/jobs)
    * [ Schedules  ](/vinta/awesome-python/-/pipeline_schedules)
  * [ Deployments  ](/vinta/awesome-python/-/environments)
    * **Deployments**
    *     * [ Environments  ](/vinta/awesome-python/-/environments)
    * [ Releases  ](/vinta/awesome-python/-/releases)
  * [ Packages and registries  ](/vinta/awesome-python/-/packages)
    * **Packages and registries**
    *     * [ Package Registry  ](/vinta/awesome-python/-/packages)
    * [ Infrastructure Registry  ](/vinta/awesome-python/-/infrastructure_registry)
  * [ Monitor  ](/vinta/awesome-python/-/incidents)
    * **Monitor**
    *     * [ Incidents  ](/vinta/awesome-python/-/incidents)
  * [ Analytics  ](/vinta/awesome-python/-/value_stream_analytics)
    * **Analytics**
    *     * [ Value stream  ](/vinta/awesome-python/-/value_stream_analytics)
    * [ CI/CD  ](/vinta/awesome-python/-/pipelines/charts)
    * [ Repository  ](/vinta/awesome-python/-/graphs/master/charts)
  * [ Wiki  ](/vinta/awesome-python/-/wikis/home)
    * **Wiki**
  * [ Snippets  ](/vinta/awesome-python/-/snippets)
    * **Snippets**
  * [ Activity ](/vinta/awesome-python/activity)
  * [ Graph ](/vinta/awesome-python/-/network/master)
  * [ Create a new issue ](/vinta/awesome-python/-/issues/new)
  * [ Jobs ](/vinta/awesome-python/-/jobs)
  * [ Commits ](/vinta/awesome-python/-/commits/master)
  * [ Issue Boards ](/vinta/awesome-python/-/boards)

Collapse sidebar  Close sidebar 

<::after>

You can't push or pull repositories using SSH until you add an SSH key to your profile. 

[ Add SSH key ](/-/profile/keys) [ Don't show again ](/-/profile?user%5Bhide_no_ssh_key%5D=true)

Open sidebar 

  * [ Vinta Chen ](/vinta)
  * [ awesome-python  ](/vinta/awesome-python)



A 

#  awesome-python 

Project ID: 84  [ Request Access ](/vinta/awesome-python/-/project_members/request_access)

  * Global  Use your global notification setting 

  * Watch  You will receive notifications for any activity 

  * Participate  You will only receive notifications for threads you have participated in 

  * On mention  You will receive notifications only for comments in which you were @mentioned 

  * Disabled  You will not get any notifications via email 

  * * * *

  * Custom  You will only receive notifications for the events you choose 




Star  [ 29 ](/vinta/awesome-python/-/starrers "Starrers")

[ Fork  ](/vinta/awesome-python/-/forks/new) [ 0 ](/vinta/awesome-python/-/forks "Forks")

  * [ **1,632** Commits ](/vinta/awesome-python/-/commits/master)
  * [ **318** Branches ](/vinta/awesome-python/-/branches)
  * [ **0** Tags ](/vinta/awesome-python/-/tags)
  * **37.6 MB** Project Storage 




A curated list of awesome Python frameworks, libraries, software and resources 

Read more 

Python  92.6%  ">

Makefile  7.4%  ">

<::after>

[ Merge pull request #2297 from hofrob/remove-abandoned-project-pyannotate ](/vinta/awesome-python/-/commit/091e9e6c4e4edc592f5d2a3449e32d6c7a6db871)

Vinta Chen authored  1 year ago 

4AEE18F83AFDEB23  [ Learn more about signing commits ](/help/user/project/repository/gpg_signed_commits/index.md) " data-html="true" data-placement="top" data-title=" 

This commit was signed with an **unverified** signature. 

" data-toggle="popover" role="button" tabindex="0"> Unverified 

091e9e6c 

master 

Select Git revision 

  * Branches  318 

  * gh-pages 

  * github/fork/AgnostiqHQ/master 

  * github/fork/AhmedRAlmansoori/sqlmodel 

  * github/fork/AlaShibanAtKlo/master 

  * github/fork/AlbertLucianto/master 

  * github/fork/AlephaNull/ursina 

  * github/fork/AvnerCohen/patch-cornell 

  * github/fork/Code0x58/add-python-jsonstore 

  * github/fork/CodeBleu/patch-1 

  * github/fork/ComicShrimp/master 

  * github/fork/DhirenGala/master 

  * github/fork/FabianSt305/patch-1 

  * github/fork/FaraPy/master 

  * github/fork/Faral-Ghaemi/master 

  * github/fork/Fatal1ty/master 

  * github/fork/FilBot3/awesome/cicd-buildbot 

  * github/fork/ForkRepo/master 

  * github/fork/Fredpwol/add-textblob 

  * github/fork/GT-ZhangAcer/PaddleOCR 

  * github/fork/Git-Harshit/patch-1 




  1. [ awesome-python ](/vinta/awesome-python/-/tree/master/)
  2. <::before>

Add to tree 

     * [ New file  ](/vinta/awesome-python/-/forks?continue%5Bnotice%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+has+been+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.&continue%5Bnotice_now%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+is+being+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.&continue%5Bto%5D=%2Fvinta%2Fawesome-python%2F-%2Fnew%2Fmaster&namespace_key=2505)
     * [ Upload file  ](/vinta/awesome-python/-/forks?continue%5Bnotice%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+has+been+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.+Try+to+upload+a+file+again.&continue%5Bnotice_now%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+is+being+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.&continue%5Bto%5D=%2Fvinta%2Fawesome-python&namespace_key=2505)
     * [ New directory  ](/vinta/awesome-python/-/forks?continue%5Bnotice%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+has+been+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.+Try+to+create+a+new+directory+again.&continue%5Bnotice_now%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+is+being+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.&continue%5Bto%5D=%2Fvinta%2Fawesome-python&namespace_key=2505)




[ Find file ](/vinta/awesome-python/-/find_file/master)

Web IDE 

Select Archive Format 

#####  Download source code 

[ zip ](/vinta/awesome-python/-/archive/master/awesome-python-master.zip) [ tar.gz ](/vinta/awesome-python/-/archive/master/awesome-python-master.tar.gz) [ tar.bz2 ](/vinta/awesome-python/-/archive/master/awesome-python-master.tar.bz2) [ tar ](/vinta/awesome-python/-/archive/master/awesome-python-master.tar)

Clone 

  * Clone with SSH 

  * Clone with HTTP 

  *   * Open in your IDE  [ Visual Studio Code (SSH)  ](vscode://vscode.git/clone?url=ssh%3A%2F%2Fgit%40metis.lti.cs.cmu.edu%3A2222%2Fvinta%2Fawesome-python.git) [ Visual Studio Code (HTTPS)  ](vscode://vscode.git/clone?url=http%3A%2F%2Fmetis.lti.cs.cmu.edu%3A8023%2Fvinta%2Fawesome-python.git) [ IntelliJ IDEA (SSH)  ](jetbrains://idea/checkout/git?idea.required.plugins.id=Git4Idea&checkout.repo=ssh%3A%2F%2Fgit%40metis.lti.cs.cmu.edu%3A2222%2Fvinta%2Fawesome-python.git) [ IntelliJ IDEA (HTTPS)  ](jetbrains://idea/checkout/git?idea.required.plugins.id=Git4Idea&checkout.repo=http%3A%2F%2Fmetis.lti.cs.cmu.edu%3A8023%2Fvinta%2Fawesome-python.git)



Copy HTTP clone URL 

  * [ **Copy SSH clone URL** ssh://git@metis.lti.cs.cmu.edu:2222/vinta/awesome-python.git  ](ssh://git@metis.lti.cs.cmu.edu:2222/vinta/awesome-python.git)
  * [ **Copy HTTP clone URL** http://metis.lti.cs.cmu.edu:8023/vinta/awesome-python.git  ](http://metis.lti.cs.cmu.edu:8023/vinta/awesome-python.git)



  * [ README ](/vinta/awesome-python/-/blob/master/README.md)
  * [ LICENSE  ](/vinta/awesome-python/-/blob/master/LICENSE)
  * [ CONTRIBUTING ](/vinta/awesome-python/-/blob/master/CONTRIBUTING.md)



Name  |  Last commit  |  Last update   
---|---|---  
[ <::before> .github  ](/vinta/awesome-python/-/tree/master/.github ".github") |  [ cleanup ](/vinta/awesome-python/-/commit/279487124faf90b326af10ea0d5269acc89be053 "cleanup
") |  3 years ago   
[ <::before> docs  ](/vinta/awesome-python/-/tree/master/docs "docs") |  [ Removed dead css ](/vinta/awesome-python/-/commit/13f9cc6a019d7daf9569c175cf8bd8bb410904f1 "Removed dead css") |  5 years ago   
[ <::before> .gitignore  ](/vinta/awesome-python/-/blob/master/.gitignore ".gitignore") |  [ Sort readme and add to docs build ](/vinta/awesome-python/-/commit/396b17f269bbbf13351f5c4f2b9a203402433778 "Sort readme and add to docs build
") |  4 years ago   
[ <::before> .travis.yml  ](/vinta/awesome-python/-/blob/master/.travis.yml ".travis.yml") |  [ Sort readme and add to docs build ](/vinta/awesome-python/-/commit/396b17f269bbbf13351f5c4f2b9a203402433778 "Sort readme and add to docs build
") |  4 years ago   
[ <::before> CONTRIBUTING.md  ](/vinta/awesome-python/-/blob/master/CONTRIBUTING.md "CONTRIBUTING.md") |  [ Update CONTRIBUTING.md ](/vinta/awesome-python/-/commit/aa4e0ee1a96baf54fa730a60f789e62d1c90b297 "Update CONTRIBUTING.md

fixed a typo") |  3 years ago   
[ <::before> LICENSE  ](/vinta/awesome-python/-/blob/master/LICENSE "LICENSE") |  [ add LICENSE Fixes ](/vinta/awesome-python/-/commit/ea513dda48f05d2bda1fcd1fb9ae7a1b1631c647 "add LICENSE Fixes #328
") [ #328 ](/vinta/awesome-python/-/issues/328 "Please add a license file to the repo") |  9 years ago   
[ <::before> Makefile  ](/vinta/awesome-python/-/blob/master/Makefile "Makefile") |  [ update Makefile ](/vinta/awesome-python/-/commit/97dd41712a5bf197af87c5695895348ff0fa52af "update Makefile
") |  5 years ago   
[ <::before> README.md  ](/vinta/awesome-python/-/blob/master/README.md "README.md") |  [ Remove abandoned project pyannotate ](/vinta/awesome-python/-/commit/58d33989365338dd9e3ae1f09a7120be78676c11 "Remove abandoned project pyannotate
") |  1 year ago   
[ <::before> mkdocs.yml  ](/vinta/awesome-python/-/blob/master/mkdocs.yml "mkdocs.yml") |  [ update mkdocs.yml ](/vinta/awesome-python/-/commit/c56f3b6db2f3230b4bcc52bf04703c8312d1b585 "update mkdocs.yml
") |  5 years ago   
[ <::before> requirements.txt  ](/vinta/awesome-python/-/blob/master/requirements.txt "requirements.txt") |  [ add requirements.txt ](/vinta/awesome-python/-/commit/85583e196c41b67594e90d0ba2820417d8ad6507 "add requirements.txt
") |  5 years ago   
[ <::before> sort.py  ](/vinta/awesome-python/-/blob/master/sort.py "sort.py") |  [ Sort readme and add to docs build ](/vinta/awesome-python/-/commit/396b17f269bbbf13351f5c4f2b9a203402433778 "Sort readme and add to docs build
") |  4 years ago   
  
[ **README.md** ](/vinta/awesome-python/-/blob/master/README.md)

#  Menu 

[ ](/search?project_id=84)

Create new... 

  * This project 
  * [ New issue  ](/vinta/awesome-python/-/issues/new)
  * * * *

  * GitLab 
  * [ New project/repository  ](/projects/new)
  * [ New group  ](/groups/new)
  * [ New snippet  ](/-/snippets/new)




**Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)



Step 4:
act - **IPythonRunCellAction**
THOUGHT: To determine the number of commits of the contributor who has the most commits to the `main` branch of the `vinta/awesome-python` project, we can follow these steps:

1. **Get the project ID**: We need the project ID to make API calls related to the project.
2. **List all commits on the `main` branch**: Retrieve all commits on the `main` branch.
3. **Identify the top contributor**: Analyze the commits to find the contributor with the most commits.
4. **Count the commits of the top contributor**: Count the number of commits made by the top contributor.

Let's start by getting the project ID. From the accessibility tree, we can see that the project ID is `84`.

Next, we will list all commits on the `main` branch using the GitLab API.

### Step 1: Get API Documentation for Listing Commits
First, let's get the detailed API documentation for listing commits in a project.
CODE:
from utils import get_api_documentation_gitlab
get_api_documentation_gitlab('GET /api/v4/projects/{id}/repository/commits')
obs - **IPythonRunCellObservation**
'## List repository commits\n\n> - Commits by author [introduced](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/114417) in GitLab 15.10.\n\nGet a list of repository commits in a project.\n\n```plaintext\nGET /projects/:id/repository/commits\n```\n\n| Attribute | Type | Required | Description |\n| --------- | ---- | -------- | ----------- |\n| `id`      | integer/string | yes | The ID or [URL-encoded path of the project](rest/index.md#namespaced-path-encoding) owned by the authenticated user |\n| `ref_name` | string | no | The name of a repository branch, tag or revision range, or if not given the default branch |\n| `since` | string | no | Only commits after or on this date are returned in ISO 8601 format `YYYY-MM-DDTHH:MM:SSZ` |\n| `until` | string | no | Only commits before or on this date are returned in ISO 8601 format `YYYY-MM-DDTHH:MM:SSZ` |\n| `path` | string | no | The file path |\n| `author` | string | no | Search commits by commit author.|\n| `all` | boolean | no | Retrieve every commit from the repository |\n| `with_stats` | boolean | no | Stats about each commit are added to the response |\n| `first_parent` | boolean | no | Follow only the first parent commit upon seeing a merge commit |\n| `order` | string | no | List commits in order. Possible values: `default`, [`topo`](https://git-scm.com/docs/git-log#Documentation/git-log.txt---topo-order). Defaults to `default`, the commits are shown in reverse chronological order. |\n| `trailers` | boolean | no | Parse and include [Git trailers](https://git-scm.com/docs/git-interpret-trailers) for every commit |\n\n```shell\ncurl --header "PRIVATE-TOKEN: <your_access_token>" \\\n  --url "https://gitlab.example.com/api/v4/projects/5/repository/commits"\n```\n\nExample response:\n\n```json\n[\n  {\n    "id": "ed899a2f4b50b4370feeea94676502b42383c746",\n    "short_id": "ed899a2f4b5",\n    "title": "Replace sanitize with escape once",\n    "author_name": "Example User",\n    "author_email": "user@example.com",\n    "authored_date": "2021-09-20T11:50:22.001+00:00",\n    "committer_name": "Administrator",\n    "committer_email": "admin@example.com",\n    "committed_date": "2021-09-20T11:50:22.001+00:00",\n    "created_at": "2021-09-20T11:50:22.001+00:00",\n    "message": "Replace sanitize with escape once",\n    "parent_ids": [\n      "6104942438c14ec7bd21c6cd5bd995272b3faff6"\n    ],\n    "web_url": "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746",\n    "trailers": {},\n    "extended_trailers": {}\n  },\n  {\n    "id": "6104942438c14ec7bd21c6cd5bd995272b3faff6",\n    "short_id": "6104942438c",\n    "title": "Sanitize for network graph",\n    "author_name": "randx",\n    "author_email": "user@example.com",\n    "committer_name": "ExampleName",\n    "committer_email": "user@example.com",\n    "created_at": "2021-09-20T09:06:12.201+00:00",\n    "message": "Sanitize for network graph\\nCc: John Doe <johndoe@gitlab.com>\\nCc: Jane Doe <janedoe@gitlab.com>",\n    "parent_ids": [\n      "ae1d9fb46aa2b07ee9836d49862ec4e2c46fbbba"\n    ],\n    "web_url": "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746",\n    "trailers": { "Cc": "Jane Doe <janedoe@gitlab.com>" },\n    "extended_trailers": { "Cc": ["John Doe <johndoe@gitlab.com>", "Jane Doe <janedoe@gitlab.com>"] }\n  }\n]\n```'

Step 5:
act - **IPythonRunCellAction**
THOUGHT: ### Step 2: List All Commits on the `main` Branch
We will use the `GET /api/v4/projects/{id}/repository/commits` API to list all commits on the `main` branch of the `vinta/awesome-python` project.

Let's make the API call to get the commits on the `main` branch.
CODE:
import requests

# Define the project ID and the branch name
project_id = 84
branch_name = "main"
access_token = "glpat-KygcYjwtD2JfA6wU4wBd"

# Define the API URL
url = f"http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/api/v4/projects/{project_id}/repository/commits"

# Define the headers
headers = {
    "PRIVATE-TOKEN": access_token
}

# Define the parameters
params = {
    "ref_name": branch_name,
    "per_page": 100  # Get 100 commits per page
}

# Make the API call
response = requests.get(url, headers=headers, params=params)
commits = response.json()

# Print the first few commits to understand the structure
commits[:5]
obs - **IPythonRunCellObservation**
[]

Step 6:
act - **BrowseInteractiveAction**
BROWSER_ACTIONS: goto("http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/commits/main")
obs - **BrowserOutputObservation**
URL: http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/commits/main
Status code: 200
Error: False
Open pages: ['http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/commits/main']
Active page index: 0
Last browser action: goto("http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/commits/main")
Last browser action error: 
Focused element bid: 5
CONTENT: ###  Page Not Found 

Make sure the address is correct and the page hasn't moved. 

Please contact your GitLab administrator if you think this is a mistake. 

Search 

  * [ Home ](/)
  * <::before> Sign out and sign in with a different account 
  * <::before> [ Help ](/help)





Step 7:
act - **BrowseInteractiveAction**
BROWSER_ACTIONS: goto("http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python")
obs - **BrowserOutputObservation**
URL: http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python
Status code: 200
Error: False
Open pages: ['http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python']
Active page index: 0
Last browser action: goto("http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python")
Last browser action error: 
Focused element bid: 65
CONTENT: Skip to content 

GitLab  [ ](/ "Dashboard")

  *     * **Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)

Frequently visited 

      * Projects you visit often will appear here 

[ View all projects  ](/dashboard/projects)




[ Projects ](/dashboard/projects) [ Groups ](/dashboard/groups) [ Milestones ](/dashboard/milestones) [ Snippets ](/dashboard/snippets) [ Activity ](/dashboard/activity)

  * ` / `

  * [ ](/search?project_id=84 "Search")



  * [ ](/projects/new "Create new...")

    * This project 
    * [ New issue ](/vinta/awesome-python/-/issues/new)
    *     * GitLab 
    * [ New project/repository ](/projects/new)
    * [ New group ](/groups/new)
    * [ New snippet ](/-/snippets/new)

  * [ 16  ](/dashboard/issues?assignee_username=byteblaze "Issues")
  * [ 13  ](/dashboard/merge_requests?assignee_username=byteblaze "Merge requests")

    * Merge requests 
    * [ Assigned to you  5  ](/dashboard/merge_requests?assignee_username=byteblaze)
    * [ Review requests for you  8  ](/dashboard/merge_requests?reviewer_username=byteblaze)

  * [ 9  ](/dashboard/todos "To-Do List")
  * [ Help  ](/help)

    *     * What's new  10 
    * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * Keyboard shortcuts ` ? `
    *     * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)

  * [ ](/byteblaze)

    * [ Byte Blaze  @byteblaze  🌴  Out of Office  ](/byteblaze)
    *     * Edit status 
    * [ Edit profile ](/-/profile)
    * [ Preferences ](/-/profile/preferences)
    *     * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)
    *     * [ Sign out ](/users/sign_out)




Toggle navigation  Menu 

  * [ A  awesome-python  ](/vinta/awesome-python)
  * [ Project information  ](/vinta/awesome-python/activity)
    * **Project information**
    *     * [ Activity  ](/vinta/awesome-python/activity)
    * [ Labels  ](/vinta/awesome-python/-/labels)
    * [ Members  ](/vinta/awesome-python/-/project_members)
  * [ Repository  ](/vinta/awesome-python/-/tree/master)
    * **Repository**
    *     * [ Files  ](/vinta/awesome-python/-/tree/master)
    * [ Commits  ](/vinta/awesome-python/-/commits/master)
    * [ Branches  ](/vinta/awesome-python/-/branches)
    * [ Tags  ](/vinta/awesome-python/-/tags)
    * [ Contributors  ](/vinta/awesome-python/-/graphs/master)
    * [ Graph  ](/vinta/awesome-python/-/network/master)
    * [ Compare  ](/vinta/awesome-python/-/compare?from=master&to=master)
  * [ Issues  13  ](/vinta/awesome-python/-/issues)
    * **Issues** 13 
    *     * [ List  ](/vinta/awesome-python/-/issues)
    * [ Boards  ](/vinta/awesome-python/-/boards)
    * [ Service Desk  ](/vinta/awesome-python/-/issues/service_desk)
    * [ Milestones  ](/vinta/awesome-python/-/milestones)
  * [ Merge requests  317  ](/vinta/awesome-python/-/merge_requests)
    * **Merge requests** 317 
  * [ CI/CD  ](/vinta/awesome-python/-/pipelines)
    * **CI/CD**
    *     * [ Pipelines  ](/vinta/awesome-python/-/pipelines)
    * [ Jobs  ](/vinta/awesome-python/-/jobs)
    * [ Schedules  ](/vinta/awesome-python/-/pipeline_schedules)
  * [ Deployments  ](/vinta/awesome-python/-/environments)
    * **Deployments**
    *     * [ Environments  ](/vinta/awesome-python/-/environments)
    * [ Releases  ](/vinta/awesome-python/-/releases)
  * [ Packages and registries  ](/vinta/awesome-python/-/packages)
    * **Packages and registries**
    *     * [ Package Registry  ](/vinta/awesome-python/-/packages)
    * [ Infrastructure Registry  ](/vinta/awesome-python/-/infrastructure_registry)
  * [ Monitor  ](/vinta/awesome-python/-/incidents)
    * **Monitor**
    *     * [ Incidents  ](/vinta/awesome-python/-/incidents)
  * [ Analytics  ](/vinta/awesome-python/-/value_stream_analytics)
    * **Analytics**
    *     * [ Value stream  ](/vinta/awesome-python/-/value_stream_analytics)
    * [ CI/CD  ](/vinta/awesome-python/-/pipelines/charts)
    * [ Repository  ](/vinta/awesome-python/-/graphs/master/charts)
  * [ Wiki  ](/vinta/awesome-python/-/wikis/home)
    * **Wiki**
  * [ Snippets  ](/vinta/awesome-python/-/snippets)
    * **Snippets**
  * [ Activity ](/vinta/awesome-python/activity)
  * [ Graph ](/vinta/awesome-python/-/network/master)
  * [ Create a new issue ](/vinta/awesome-python/-/issues/new)
  * [ Jobs ](/vinta/awesome-python/-/jobs)
  * [ Commits ](/vinta/awesome-python/-/commits/master)
  * [ Issue Boards ](/vinta/awesome-python/-/boards)

Collapse sidebar  Close sidebar 

<::after>

You can't push or pull repositories using SSH until you add an SSH key to your profile. 

[ Add SSH key ](/-/profile/keys) [ Don't show again ](/-/profile?user%5Bhide_no_ssh_key%5D=true)

Open sidebar 

  * [ Vinta Chen ](/vinta)
  * [ awesome-python  ](/vinta/awesome-python)



A 

#  awesome-python 

Project ID: 84  [ Request Access ](/vinta/awesome-python/-/project_members/request_access)

  * Global  Use your global notification setting 

  * Watch  You will receive notifications for any activity 

  * Participate  You will only receive notifications for threads you have participated in 

  * On mention  You will receive notifications only for comments in which you were @mentioned 

  * Disabled  You will not get any notifications via email 

  * * * *

  * Custom  You will only receive notifications for the events you choose 




Star  [ 29 ](/vinta/awesome-python/-/starrers "Starrers")

[ Fork  ](/vinta/awesome-python/-/forks/new) [ 0 ](/vinta/awesome-python/-/forks "Forks")

  * [ **1,632** Commits ](/vinta/awesome-python/-/commits/master)
  * [ **318** Branches ](/vinta/awesome-python/-/branches)
  * [ **0** Tags ](/vinta/awesome-python/-/tags)
  * **37.6 MB** Project Storage 




A curated list of awesome Python frameworks, libraries, software and resources 

Read more 

Python  92.6%  ">

Makefile  7.4%  ">

<::after>

[ Merge pull request #2297 from hofrob/remove-abandoned-project-pyannotate ](/vinta/awesome-python/-/commit/091e9e6c4e4edc592f5d2a3449e32d6c7a6db871)

Vinta Chen authored  1 year ago 

4AEE18F83AFDEB23  [ Learn more about signing commits ](/help/user/project/repository/gpg_signed_commits/index.md) " data-html="true" data-placement="top" data-title=" 

This commit was signed with an **unverified** signature. 

" data-toggle="popover" role="button" tabindex="0"> Unverified 

091e9e6c 

master 

Select Git revision 

  * Branches  318 

  * gh-pages 

  * github/fork/AgnostiqHQ/master 

  * github/fork/AhmedRAlmansoori/sqlmodel 

  * github/fork/AlaShibanAtKlo/master 

  * github/fork/AlbertLucianto/master 

  * github/fork/AlephaNull/ursina 

  * github/fork/AvnerCohen/patch-cornell 

  * github/fork/Code0x58/add-python-jsonstore 

  * github/fork/CodeBleu/patch-1 

  * github/fork/ComicShrimp/master 

  * github/fork/DhirenGala/master 

  * github/fork/FabianSt305/patch-1 

  * github/fork/FaraPy/master 

  * github/fork/Faral-Ghaemi/master 

  * github/fork/Fatal1ty/master 

  * github/fork/FilBot3/awesome/cicd-buildbot 

  * github/fork/ForkRepo/master 

  * github/fork/Fredpwol/add-textblob 

  * github/fork/GT-ZhangAcer/PaddleOCR 

  * github/fork/Git-Harshit/patch-1 




  1. [ awesome-python ](/vinta/awesome-python/-/tree/master/)
  2. <::before>

Add to tree 

     * [ New file  ](/vinta/awesome-python/-/forks?continue%5Bnotice%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+has+been+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.&continue%5Bnotice_now%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+is+being+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.&continue%5Bto%5D=%2Fvinta%2Fawesome-python%2F-%2Fnew%2Fmaster&namespace_key=2505)
     * [ Upload file  ](/vinta/awesome-python/-/forks?continue%5Bnotice%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+has+been+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.+Try+to+upload+a+file+again.&continue%5Bnotice_now%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+is+being+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.&continue%5Bto%5D=%2Fvinta%2Fawesome-python&namespace_key=2505)
     * [ New directory  ](/vinta/awesome-python/-/forks?continue%5Bnotice%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+has+been+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.+Try+to+create+a+new+directory+again.&continue%5Bnotice_now%5D=You%27re+not+allowed+to+make+changes+to+this+project+directly.+A+fork+of+this+project+is+being+created+that+you+can+make+changes+in%2C+so+you+can+submit+a+merge+request.&continue%5Bto%5D=%2Fvinta%2Fawesome-python&namespace_key=2505)




[ Find file ](/vinta/awesome-python/-/find_file/master)

Web IDE 

Select Archive Format 

#####  Download source code 

[ zip ](/vinta/awesome-python/-/archive/master/awesome-python-master.zip) [ tar.gz ](/vinta/awesome-python/-/archive/master/awesome-python-master.tar.gz) [ tar.bz2 ](/vinta/awesome-python/-/archive/master/awesome-python-master.tar.bz2) [ tar ](/vinta/awesome-python/-/archive/master/awesome-python-master.tar)

Clone 

  * Clone with SSH 

  * Clone with HTTP 

  *   * Open in your IDE  [ Visual Studio Code (SSH)  ](vscode://vscode.git/clone?url=ssh%3A%2F%2Fgit%40metis.lti.cs.cmu.edu%3A2222%2Fvinta%2Fawesome-python.git) [ Visual Studio Code (HTTPS)  ](vscode://vscode.git/clone?url=http%3A%2F%2Fmetis.lti.cs.cmu.edu%3A8023%2Fvinta%2Fawesome-python.git) [ IntelliJ IDEA (SSH)  ](jetbrains://idea/checkout/git?idea.required.plugins.id=Git4Idea&checkout.repo=ssh%3A%2F%2Fgit%40metis.lti.cs.cmu.edu%3A2222%2Fvinta%2Fawesome-python.git) [ IntelliJ IDEA (HTTPS)  ](jetbrains://idea/checkout/git?idea.required.plugins.id=Git4Idea&checkout.repo=http%3A%2F%2Fmetis.lti.cs.cmu.edu%3A8023%2Fvinta%2Fawesome-python.git)



Copy HTTP clone URL 

  * [ **Copy SSH clone URL** ssh://git@metis.lti.cs.cmu.edu:2222/vinta/awesome-python.git  ](ssh://git@metis.lti.cs.cmu.edu:2222/vinta/awesome-python.git)
  * [ **Copy HTTP clone URL** http://metis.lti.cs.cmu.edu:8023/vinta/awesome-python.git  ](http://metis.lti.cs.cmu.edu:8023/vinta/awesome-python.git)



  * [ README ](/vinta/awesome-python/-/blob/master/README.md)
  * [ LICENSE  ](/vinta/awesome-python/-/blob/master/LICENSE)
  * [ CONTRIBUTING ](/vinta/awesome-python/-/blob/master/CONTRIBUTING.md)



Name  |  Last commit  |  Last update   
---|---|---  
[ <::before> .github  ](/vinta/awesome-python/-/tree/master/.github ".github") |  [ cleanup ](/vinta/awesome-python/-/commit/279487124faf90b326af10ea0d5269acc89be053 "cleanup
") |  3 years ago   
[ <::before> docs  ](/vinta/awesome-python/-/tree/master/docs "docs") |  [ Removed dead css ](/vinta/awesome-python/-/commit/13f9cc6a019d7daf9569c175cf8bd8bb410904f1 "Removed dead css") |  5 years ago   
[ <::before> .gitignore  ](/vinta/awesome-python/-/blob/master/.gitignore ".gitignore") |  [ Sort readme and add to docs build ](/vinta/awesome-python/-/commit/396b17f269bbbf13351f5c4f2b9a203402433778 "Sort readme and add to docs build
") |  4 years ago   
[ <::before> .travis.yml  ](/vinta/awesome-python/-/blob/master/.travis.yml ".travis.yml") |  [ Sort readme and add to docs build ](/vinta/awesome-python/-/commit/396b17f269bbbf13351f5c4f2b9a203402433778 "Sort readme and add to docs build
") |  4 years ago   
[ <::before> CONTRIBUTING.md  ](/vinta/awesome-python/-/blob/master/CONTRIBUTING.md "CONTRIBUTING.md") |  [ Update CONTRIBUTING.md ](/vinta/awesome-python/-/commit/aa4e0ee1a96baf54fa730a60f789e62d1c90b297 "Update CONTRIBUTING.md

fixed a typo") |  3 years ago   
[ <::before> LICENSE  ](/vinta/awesome-python/-/blob/master/LICENSE "LICENSE") |  [ add LICENSE Fixes ](/vinta/awesome-python/-/commit/ea513dda48f05d2bda1fcd1fb9ae7a1b1631c647 "add LICENSE Fixes #328
") [ #328 ](/vinta/awesome-python/-/issues/328 "Please add a license file to the repo") |  9 years ago   
[ <::before> Makefile  ](/vinta/awesome-python/-/blob/master/Makefile "Makefile") |  [ update Makefile ](/vinta/awesome-python/-/commit/97dd41712a5bf197af87c5695895348ff0fa52af "update Makefile
") |  5 years ago   
[ <::before> README.md  ](/vinta/awesome-python/-/blob/master/README.md "README.md") |  [ Remove abandoned project pyannotate ](/vinta/awesome-python/-/commit/58d33989365338dd9e3ae1f09a7120be78676c11 "Remove abandoned project pyannotate
") |  1 year ago   
[ <::before> mkdocs.yml  ](/vinta/awesome-python/-/blob/master/mkdocs.yml "mkdocs.yml") |  [ update mkdocs.yml ](/vinta/awesome-python/-/commit/c56f3b6db2f3230b4bcc52bf04703c8312d1b585 "update mkdocs.yml
") |  5 years ago   
[ <::before> requirements.txt  ](/vinta/awesome-python/-/blob/master/requirements.txt "requirements.txt") |  [ add requirements.txt ](/vinta/awesome-python/-/commit/85583e196c41b67594e90d0ba2820417d8ad6507 "add requirements.txt
") |  5 years ago   
[ <::before> sort.py  ](/vinta/awesome-python/-/blob/master/sort.py "sort.py") |  [ Sort readme and add to docs build ](/vinta/awesome-python/-/commit/396b17f269bbbf13351f5c4f2b9a203402433778 "Sort readme and add to docs build
") |  4 years ago   
  
[ **README.md** ](/vinta/awesome-python/-/blob/master/README.md)

#  <::after> Awesome Python [ ](https://github.com/sindresorhus/awesome)

A curated list of awesome Python frameworks, libraries, software and resources. 

Inspired by [ awesome-php ](https://github.com/ziadoz/awesome-php) . 

  * <::marker> Awesome Python 
    * <::marker> Admin Panels 
    * <::marker> Algorithms and Design Patterns 
    * <::marker> ASGI Servers 
    * <::marker> Asynchronous Programming 
    * <::marker> Audio 
    * <::marker> Authentication 
    * <::marker> Build Tools 
    * <::marker> Built-in Classes Enhancement 
    * <::marker> Caching 
    * <::marker> ChatOps Tools 
    * <::marker> CMS 
    * <::marker> Code Analysis 
    * <::marker> Command-line Interface Development 
    * <::marker> Command-line Tools 
    * <::marker> Compatibility 
    * <::marker> Computer Vision 
    * <::marker> Concurrency and Parallelism 
    * <::marker> Configuration 
    * <::marker> Cryptography 
    * <::marker> Data Analysis 
    * <::marker> Data Validation 
    * <::marker> Data Visualization 
    * <::marker> Database Drivers 
    * <::marker> Database 
    * <::marker> Date and Time 
    * <::marker> Debugging Tools 
    * <::marker> Deep Learning 
    * <::marker> DevOps Tools 
    * <::marker> Distributed Computing 
    * <::marker> Distribution 
    * <::marker> Documentation 
    * <::marker> Downloader 
    * <::marker> E-commerce 
    * <::marker> Editor Plugins and IDEs 
    * <::marker> Email 
    * <::marker> Enterprise Application Integrations 
    * <::marker> Environment Management 
    * <::marker> Files 
    * <::marker> Foreign Function Interface 
    * <::marker> Forms 
    * <::marker> Functional Programming 
    * <::marker> Game Development 
    * <::marker> Geolocation 
    * <::marker> GUI Development 
    * <::marker> Hardware 
    * <::marker> HTML Manipulation 
    * <::marker> HTTP Clients 
    * <::marker> Image Processing 
    * <::marker> Implementations 
    * <::marker> Interactive Interpreter 
    * <::marker> Internationalization 
    * <::marker> Job Scheduler 
    * <::marker> Logging 
    * <::marker> Machine Learning 
    * <::marker> Miscellaneous 
    * <::marker> Natural Language Processing 
    * <::marker> Network Virtualization 
    * <::marker> News Feed 
    * <::marker> ORM 
    * <::marker> Package Management 
    * <::marker> Package Repositories 
    * <::marker> Penetration testing 
    * <::marker> Permissions 
    * <::marker> Processes 
    * <::marker> Recommender Systems 
    * <::marker> Refactoring 
    * <::marker> RESTful API 
    * <::marker> Robotics 
    * <::marker> RPC Servers 
    * <::marker> Science 
    * <::marker> Search 
    * <::marker> Serialization 
    * <::marker> Serverless Frameworks 
    * <::marker> Shell 
    * <::marker> Specific Formats Processing 
    * <::marker> Static Site Generator 
    * <::marker> Tagging 
    * <::marker> Task Queues 
    * <::marker> Template Engine 
    * <::marker> Testing 
    * <::marker> Text Processing 
    * <::marker> Third-party APIs 
    * <::marker> URL Manipulation 
    * <::marker> Video 
    * <::marker> Web Asset Management 
    * <::marker> Web Content Extracting 
    * <::marker> Web Crawling 
    * <::marker> Web Frameworks 
    * <::marker> WebSocket 
    * <::marker> WSGI Servers 
  * <::marker> Resources 
    * <::marker> Books 
    * <::marker> Newsletters 
    * <::marker> Podcasts 
    * <::marker> Websites 
  * <::marker> Contributing 



* * *

##  <::after> Admin Panels 

_Libraries for administrative interfaces._

  * <::marker> [ ajenti ](https://github.com/ajenti/ajenti) \- The admin panel your servers deserve. 
  * <::marker> [ django-grappelli ](https://grappelliproject.com/) \- A jazzy skin for the Django Admin-Interface. 
  * <::marker> [ django-jet ](https://github.com/geex-arts/django-jet) \- Modern responsive template for the Django admin interface with improved functionality. 
  * <::marker> [ django-suit ](https://djangosuit.com/) \- Alternative Django Admin-Interface (free only for Non-commercial use). 
  * <::marker> [ django-xadmin ](https://github.com/sshwsfc/xadmin) \- Drop-in replacement of Django admin comes with lots of goodies. 
  * <::marker> [ flask-admin ](https://github.com/flask-admin/flask-admin) \- Simple and extensible administrative interface framework for Flask. 
  * <::marker> [ flower ](https://github.com/mher/flower) \- Real-time monitor and web admin for Celery. 
  * <::marker> [ jet-bridge ](https://github.com/jet-admin/jet-bridge) \- Admin panel framework for any application with nice UI (ex Jet Django). 
  * <::marker> [ wooey ](https://github.com/wooey/wooey) \- A Django app which creates automatic web UIs for Python scripts. 



##  <::after> Algorithms and Design Patterns 

_Python implementation of data structures, algorithms and design patterns. Also see[ awesome-algorithms ](https://github.com/tayllan/awesome-algorithms) . _

  * <::marker>Algorithms 
    * <::marker> [ algorithms ](https://github.com/keon/algorithms) \- Minimal examples of data structures and algorithms. 
    * <::marker> [ python-ds ](https://github.com/prabhupant/python-ds) \- A collection of data structure and algorithms for coding interviews. 
    * <::marker> [ sortedcontainers ](https://github.com/grantjenks/python-sortedcontainers) \- Fast and pure-Python implementation of sorted collections. 
    * <::marker> [ TheAlgorithms ](https://github.com/TheAlgorithms/Python) \- All Algorithms implemented in Python. 
  * <::marker>Design Patterns 
    * <::marker> [ PyPattyrn ](https://github.com/tylerlaberge/PyPattyrn) \- A simple yet effective library for implementing common design patterns. 
    * <::marker> [ python-patterns ](https://github.com/faif/python-patterns) \- A collection of design patterns in Python. 
    * <::marker> [ transitions ](https://github.com/pytransitions/transitions) \- A lightweight, object-oriented finite state machine implementation. 



##  <::after> ASGI Servers 

_[ ASGI ](https://asgi.readthedocs.io/en/latest/) -compatible web servers. _

  * <::marker> [ daphne ](https://github.com/django/daphne) \- A HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP. 
  * <::marker> [ uvicorn ](https://github.com/encode/uvicorn) \- A lightning-fast ASGI server implementation, using uvloop and httptools. 



##  <::after> Asynchronous Programming 

  * <::marker> [ asyncio ](https://docs.python.org/3/library/asyncio.html) \- (Python standard library) Asynchronous I/O, event loop, coroutines and tasks. 
    * <::marker> [ awesome-asyncio ](https://github.com/timofurrer/awesome-asyncio)
  * <::marker> [ trio ](https://github.com/python-trio/trio) \- A friendly library for async concurrency and I/O. 
  * <::marker> [ Twisted ](https://twistedmatrix.com/trac/) \- An event-driven networking engine. 
  * <::marker> [ uvloop ](https://github.com/MagicStack/uvloop) \- Ultra fast asyncio event loop. 



##  <::after> Audio 

_Libraries for manipulating audio and its metadata._

  * <::marker>Audio 
    * <::marker> [ audioread ](https://github.com/beetbox/audioread) \- Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding. 
    * <::marker> [ dejavu ](https://github.com/worldveil/dejavu) \- Audio fingerprinting and recognition. 
    * <::marker> [ kapre ](https://github.com/keunwoochoi/kapre) \- Keras Audio Preprocessors. 
    * <::marker> [ librosa ](https://github.com/librosa/librosa) \- Python library for audio and music analysis. 
    * <::marker> [ matchering ](https://github.com/sergree/matchering) \- A library for automated reference audio mastering. 
    * <::marker> [ mingus ](http://bspaans.github.io/python-mingus/) \- An advanced music theory and notation package with MIDI file and playback support. 
    * <::marker> [ pyAudioAnalysis ](https://github.com/tyiannak/pyAudioAnalysis) \- Audio feature extraction, classification, segmentation and applications. 
    * <::marker> [ pydub ](https://github.com/jiaaro/pydub) \- Manipulate audio with a simple and easy high level interface. 
    * <::marker> [ TimeSide ](https://github.com/Parisson/TimeSide) \- Open web audio processing framework. 
  * <::marker>Metadata 
    * <::marker> [ beets ](https://github.com/beetbox/beets) \- A music library manager and [ MusicBrainz ](https://musicbrainz.org/) tagger. 
    * <::marker> [ eyeD3 ](https://github.com/nicfit/eyeD3) \- A tool for working with audio files, specifically MP3 files containing ID3 metadata. 
    * <::marker> [ mutagen ](https://github.com/quodlibet/mutagen) \- A Python module to handle audio metadata. 
    * <::marker> [ tinytag ](https://github.com/devsnd/tinytag) \- A library for reading music meta data of MP3, OGG, FLAC and Wave files. 



##  <::after> Authentication 

_Libraries for implementing authentications schemes._

  * <::marker>OAuth 
    * <::marker> [ authlib ](https://github.com/lepture/authlib) \- JavaScript Object Signing and Encryption draft implementation. 
    * <::marker> [ django-allauth ](https://github.com/pennersr/django-allauth) \- Authentication app for Django that "just works." 
    * <::marker> [ django-oauth-toolkit ](https://github.com/evonove/django-oauth-toolkit) \- OAuth 2 goodies for Django. 
    * <::marker> [ oauthlib ](https://github.com/idan/oauthlib) \- A generic and thorough implementation of the OAuth request-signing logic. 
    * <::marker> [ python-oauth2 ](https://github.com/joestump/python-oauth2) \- A fully tested, abstract interface to creating OAuth clients and servers. 
    * <::marker> [ python-social-auth ](https://github.com/omab/python-social-auth) \- An easy-to-setup social authentication mechanism. 
  * <::marker>JWT 
    * <::marker> [ pyjwt ](https://github.com/jpadilla/pyjwt) \- JSON Web Token implementation in Python. 
    * <::marker> [ python-jose ](https://github.com/mpdavis/python-jose/) \- A JOSE implementation in Python. 
    * <::marker> [ python-jwt ](https://github.com/davedoesdev/python-jwt) \- A module for generating and verifying JSON Web Tokens. 



##  <::after> Build Tools 

_Compile software from source code._

  * <::marker> [ BitBake ](http://www.yoctoproject.org/docs/1.6/bitbake-user-manual/bitbake-user-manual.html) \- A make-like build tool for embedded Linux. 
  * <::marker> [ buildout ](http://www.buildout.org/en/latest/) \- A build system for creating, assembling and deploying applications from multiple parts. 
  * <::marker> [ PlatformIO ](https://github.com/platformio/platformio-core) \- A console tool to build code with different development platforms. 
  * <::marker> [ pybuilder ](https://github.com/pybuilder/pybuilder) \- A continuous build tool written in pure Python. 
  * <::marker> [ SCons ](http://www.scons.org/) \- A software construction tool. 



##  <::after> Built-in Classes Enhancement 

_Libraries for enhancing Python built-in classes._

  * <::marker> [ attrs ](https://github.com/python-attrs/attrs) \- Replacement for ` __init__ ` , ` __eq__ ` , ` __repr__ ` , etc. boilerplate in class definitions. 
  * <::marker> [ bidict ](https://github.com/jab/bidict) \- Efficient, Pythonic bidirectional map data structures and related functionality.. 
  * <::marker> [ Box ](https://github.com/cdgriffith/Box) \- Python dictionaries with advanced dot notation access. 
  * <::marker> [ dataclasses ](https://docs.python.org/3/library/dataclasses.html) \- (Python standard library) Data classes. 
  * <::marker> [ DottedDict ](https://github.com/carlosescri/DottedDict) \- A library that provides a method of accessing lists and dicts with a dotted path notation. 



##  <::after> CMS 

_Content Management Systems._

  * <::marker> [ django-cms ](https://www.django-cms.org/en/) \- An Open source enterprise CMS based on the Django. 
  * <::marker> [ feincms ](https://github.com/feincms/feincms) \- One of the most advanced Content Management Systems built on Django. 
  * <::marker> [ indico ](https://github.com/indico/indico) \- A feature-rich event management system, made @ [ CERN ](https://en.wikipedia.org/wiki/CERN) . 
  * <::marker> [ Kotti ](https://github.com/Kotti/Kotti) \- A high-level, Pythonic web application framework built on Pyramid. 
  * <::marker> [ mezzanine ](https://github.com/stephenmcd/mezzanine) \- A powerful, consistent, and flexible content management platform. 
  * <::marker> [ plone ](https://plone.org/) \- A CMS built on top of the open source application server Zope. 
  * <::marker> [ quokka ](https://github.com/rochacbruno/quokka) \- Flexible, extensible, small CMS powered by Flask and MongoDB. 
  * <::marker> [ wagtail ](https://wagtail.io/) \- A Django content management system. 



##  <::after> Caching 

_Libraries for caching data._

  * <::marker> [ beaker ](https://github.com/bbangert/beaker) \- A WSGI middleware for sessions and caching. 
  * <::marker> [ django-cache-machine ](https://github.com/django-cache-machine/django-cache-machine) \- Automatic caching and invalidation for Django models. 
  * <::marker> [ django-cacheops ](https://github.com/Suor/django-cacheops) \- A slick ORM cache with automatic granular event-driven invalidation. 
  * <::marker> [ dogpile.cache ](http://dogpilecache.readthedocs.io/en/latest/) \- dogpile.cache is a next generation replacement for Beaker made by the same authors. 
  * <::marker> [ HermesCache ](https://pypi.org/project/HermesCache/) \- Python caching library with tag-based invalidation and dogpile effect prevention. 
  * <::marker> [ pylibmc ](https://github.com/lericson/pylibmc) \- A Python wrapper around the [ libmemcached ](https://libmemcached.org/libMemcached.html) interface. 
  * <::marker> [ python-diskcache ](http://www.grantjenks.com/docs/diskcache/) \- SQLite and file backed cache backend with faster lookups than memcached and redis. 



##  <::after> ChatOps Tools 

_Libraries for chatbot development._

  * <::marker> [ errbot ](https://github.com/errbotio/errbot/) \- The easiest and most popular chatbot to implement ChatOps. 



##  <::after> Code Analysis 

_Tools of static analysis, linters and code quality checkers. Also see[ awesome-static-analysis ](https://github.com/mre/awesome-static-analysis) . _

  * <::marker>Code Analysis 
    * <::marker> [ coala ](https://github.com/coala/coala/) \- Language independent and easily extendable code analysis application. 
    * <::marker> [ code2flow ](https://github.com/scottrogowski/code2flow) \- Turn your Python and JavaScript code into DOT flowcharts. 
    * <::marker> [ prospector ](https://github.com/PyCQA/prospector) \- A tool to analyse Python code. 
    * <::marker> [ pycallgraph ](https://github.com/gak/pycallgraph) \- A library that visualises the flow (call graph) of your Python application. 
    * <::marker> [ vulture ](https://github.com/jendrikseipp/vulture) \- A tool for finding and analysing dead Python code. 
  * <::marker>Code Linters 
    * <::marker> [ flake8 ](https://pypi.org/project/flake8/) \- A wrapper around ` pycodestyle ` , ` pyflakes ` and McCabe. 
      * <::marker> [ awesome-flake8-extensions ](https://github.com/DmytroLitvinov/awesome-flake8-extensions)
    * <::marker> [ pylama ](https://github.com/klen/pylama) \- A code audit tool for Python and JavaScript. 
    * <::marker> [ pylint ](https://www.pylint.org/) \- A fully customizable source code analyzer. 
    * <::marker> [ wemake-python-styleguide ](https://github.com/wemake-services/wemake-python-styleguide) \- The strictest and most opinionated python linter ever. 
  * <::marker>Code Formatters 
    * <::marker> [ black ](https://github.com/python/black) \- The uncompromising Python code formatter. 
    * <::marker> [ isort ](https://github.com/timothycrosley/isort) \- A Python utility / library to sort imports. 
    * <::marker> [ yapf ](https://github.com/google/yapf) \- Yet another Python code formatter from Google. 
  * <::marker>Static Type Checkers, also see [ awesome-python-typing ](https://github.com/typeddjango/awesome-python-typing)
    * <::marker> [ mypy ](http://mypy-lang.org/) \- Check variable types during compile time. 
    * <::marker> [ pyre-check ](https://github.com/facebook/pyre-check) \- Performant type checking. 
    * <::marker> [ typeshed ](https://github.com/python/typeshed) \- Collection of library stubs for Python, with static types. 
  * <::marker>Static Type Annotations Generators 
    * <::marker> [ MonkeyType ](https://github.com/Instagram/MonkeyType) \- A system for Python that generates static type annotations by collecting runtime types. 
    * <::marker> [ pytype ](https://github.com/google/pytype) \- Pytype checks and infers types for Python code - without requiring type annotations. 



##  <::after> Command-line Interface Development 

_Libraries for building command-line applications._

  * <::marker>Command-line Application Development 
    * <::marker> [ cement ](http://builtoncement.com/) \- CLI Application Framework for Python. 
    * <::marker> [ click ](http://click.pocoo.org/dev/) \- A package for creating beautiful command line interfaces in a composable way. 
    * <::marker> [ cliff ](https://docs.openstack.org/developer/cliff/) \- A framework for creating command-line programs with multi-level commands. 
    * <::marker> [ docopt ](http://docopt.org/) \- Pythonic command line arguments parser. 
    * <::marker> [ python-fire ](https://github.com/google/python-fire) \- A library for creating command line interfaces from absolutely any Python object. 
    * <::marker> [ python-prompt-toolkit ](https://github.com/jonathanslenders/python-prompt-toolkit) \- A library for building powerful interactive command lines. 
  * <::marker>Terminal Rendering 
    * <::marker> [ alive-progress ](https://github.com/rsalmei/alive-progress) \- A new kind of Progress Bar, with real-time throughput, eta and very cool animations. 
    * <::marker> [ asciimatics ](https://github.com/peterbrittain/asciimatics) \- A package to create full-screen text UIs (from interactive forms to ASCII animations). 
    * <::marker> [ bashplotlib ](https://github.com/glamp/bashplotlib) \- Making basic plots in the terminal. 
    * <::marker> [ colorama ](https://pypi.org/project/colorama/) \- Cross-platform colored terminal text. 
    * <::marker> [ rich ](https://github.com/willmcgugan/rich) \- Python library for rich text and beautiful formatting in the terminal. Also provides a great ` RichHandler ` log handler. 
    * <::marker> [ tqdm ](https://github.com/tqdm/tqdm) \- Fast, extensible progress bar for loops and CLI. 



##  <::after> Command-line Tools 

_Useful CLI-based tools for productivity._

  * <::marker>Productivity Tools 
    * <::marker> [ copier ](https://github.com/pykong/copier) \- A library and command-line utility for rendering projects templates. 
    * <::marker> [ cookiecutter ](https://github.com/audreyr/cookiecutter) \- A command-line utility that creates projects from cookiecutters (project templates). 
    * <::marker> [ doitlive ](https://github.com/sloria/doitlive) \- A tool for live presentations in the terminal. 
    * <::marker> [ howdoi ](https://github.com/gleitz/howdoi) \- Instant coding answers via the command line. 
    * <::marker> [ Invoke ](https://github.com/pyinvoke/invoke#readme) \- A tool for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. 
    * <::marker> [ PathPicker ](https://github.com/facebook/PathPicker) \- Select files out of bash output. 
    * <::marker> [ percol ](https://github.com/mooz/percol) \- Adds flavor of interactive selection to the traditional pipe concept on UNIX. 
    * <::marker> [ thefuck ](https://github.com/nvbn/thefuck) \- Correcting your previous console command. 
    * <::marker> [ tmuxp ](https://github.com/tony/tmuxp) \- A [ tmux ](https://github.com/tmux/tmux) session manager. 
    * <::marker> [ try ](https://github.com/timofurrer/try) \- A dead simple CLI to try out python packages - it's never been easier. 
  * <::marker>CLI Enhancements 
    * <::marker> [ httpie ](https://github.com/jakubroztocil/httpie) \- A command line HTTP client, a user-friendly cURL replacement. 
    * <::marker> [ iredis ](https://github.com/laixintao/iredis) \- Redis CLI with autocompletion and syntax highlighting. 
    * <::marker> [ kube-shell ](https://github.com/cloudnativelabs/kube-shell) \- An integrated shell for working with the Kubernetes CLI. 
    * <::marker> [ litecli ](https://github.com/dbcli/litecli) \- SQLite CLI with autocompletion and syntax highlighting. 
    * <::marker> [ mycli ](https://github.com/dbcli/mycli) \- MySQL CLI with autocompletion and syntax highlighting. 
    * <::marker> [ pgcli ](https://github.com/dbcli/pgcli) \- PostgreSQL CLI with autocompletion and syntax highlighting. 
    * <::marker> [ saws ](https://github.com/donnemartin/saws) \- A Supercharged [ aws-cli ](https://github.com/aws/aws-cli) . 



##  <::after> Compatibility 

_Libraries for migrating from Python 2 to 3._

  * <::marker> [ python-future ](http://python-future.org/index.html) \- The missing compatibility layer between Python 2 and Python 3. 
  * <::marker> [ modernize ](https://github.com/PyCQA/modernize) \- Modernizes Python code for eventual Python 3 migration. 
  * <::marker> [ six ](https://pypi.org/project/six/) \- Python 2 and 3 compatibility utilities. 



##  <::after> Computer Vision 

_Libraries for Computer Vision._

  * <::marker> [ EasyOCR ](https://github.com/JaidedAI/EasyOCR) \- Ready-to-use OCR with 40+ languages supported. 
  * <::marker> [ Face Recognition ](https://github.com/ageitgey/face_recognition) \- Simple facial recognition library. 
  * <::marker> [ Kornia ](https://github.com/kornia/kornia/) \- Open Source Differentiable Computer Vision Library for PyTorch. 
  * <::marker> [ OpenCV ](https://opencv.org/) \- Open Source Computer Vision Library. 
  * <::marker> [ pytesseract ](https://github.com/madmaze/pytesseract) \- A wrapper for [ Google Tesseract OCR ](https://github.com/tesseract-ocr) . 
  * <::marker> [ SimpleCV ](https://github.com/sightmachine/SimpleCV) \- An open source framework for building computer vision applications. 
  * <::marker> [ tesserocr ](https://github.com/sirfz/tesserocr) \- Another simple, Pillow-friendly, wrapper around the ` tesseract-ocr ` API for OCR. 



##  <::after> Concurrency and Parallelism 

_Libraries for concurrent and parallel execution. Also see[ awesome-asyncio ](https://github.com/timofurrer/awesome-asyncio) . _

  * <::marker> [ concurrent.futures ](https://docs.python.org/3/library/concurrent.futures.html) \- (Python standard library) A high-level interface for asynchronously executing callables. 
  * <::marker> [ eventlet ](http://eventlet.net/) \- Asynchronous framework with WSGI support. 
  * <::marker> [ gevent ](http://www.gevent.org/) \- A coroutine-based Python networking library that uses [ greenlet ](https://github.com/python-greenlet/greenlet) . 
  * <::marker> [ multiprocessing ](https://docs.python.org/3/library/multiprocessing.html) \- (Python standard library) Process-based parallelism. 
  * <::marker> [ scoop ](https://github.com/soravux/scoop) \- Scalable Concurrent Operations in Python. 
  * <::marker> [ uvloop ](https://github.com/MagicStack/uvloop) \- Ultra fast implementation of ` asyncio ` event loop on top of ` libuv ` . 



##  <::after> Configuration 

_Libraries for storing and parsing configuration options._

  * <::marker> [ configobj ](https://github.com/DiffSK/configobj) \- INI file parser with validation. 
  * <::marker> [ configparser ](https://docs.python.org/3/library/configparser.html) \- (Python standard library) INI file parser. 
  * <::marker> [ hydra ](https://github.com/facebookresearch/hydra) \- Hydra is a framework for elegantly configuring complex applications. 
  * <::marker> [ profig ](https://profig.readthedocs.io/en/latest/) \- Config from multiple formats with value conversion. 
  * <::marker> [ python-decouple ](https://github.com/henriquebastos/python-decouple) \- Strict separation of settings from code. 



##  <::after> Cryptography 

  * <::marker> [ cryptography ](https://cryptography.io/en/latest/) \- A package designed to expose cryptographic primitives and recipes to Python developers. 
  * <::marker> [ paramiko ](https://github.com/paramiko/paramiko) \- The leading native Python SSHv2 protocol library. 
  * <::marker> [ passlib ](https://passlib.readthedocs.io/en/stable/) \- Secure password storage/hashing library, very high level. 
  * <::marker> [ pynacl ](https://github.com/pyca/pynacl) \- Python binding to the Networking and Cryptography (NaCl) library. 



##  <::after> Data Analysis 

_Libraries for data analyzing._

  * <::marker> [ AWS Data Wrangler ](https://github.com/awslabs/aws-data-wrangler) \- Pandas on AWS. 
  * <::marker> [ Blaze ](https://github.com/blaze/blaze) \- NumPy and Pandas interface to Big Data. 
  * <::marker> [ Open Mining ](https://github.com/mining/mining) \- Business Intelligence (BI) in Pandas interface. 
  * <::marker> [ Optimus ](https://github.com/ironmussa/Optimus) \- Agile Data Science Workflows made easy with PySpark. 
  * <::marker> [ Orange ](https://orange.biolab.si/) \- Data mining, data visualization, analysis and machine learning through visual programming or scripts. 
  * <::marker> [ Pandas ](http://pandas.pydata.org/) \- A library providing high-performance, easy-to-use data structures and data analysis tools. 



##  <::after> Data Validation 

_Libraries for validating data. Used for forms in many cases._

  * <::marker> [ Cerberus ](https://github.com/pyeve/cerberus) \- A lightweight and extensible data validation library. 
  * <::marker> [ colander ](https://docs.pylonsproject.org/projects/colander/en/latest/) \- Validating and deserializing data obtained via XML, JSON, an HTML form post. 
  * <::marker> [ jsonschema ](https://github.com/Julian/jsonschema) \- An implementation of [ JSON Schema ](http://json-schema.org/) for Python. 
  * <::marker> [ schema ](https://github.com/keleshev/schema) \- A library for validating Python data structures. 
  * <::marker> [ Schematics ](https://github.com/schematics/schematics) \- Data Structure Validation. 
  * <::marker> [ valideer ](https://github.com/podio/valideer) \- Lightweight extensible data validation and adaptation library. 
  * <::marker> [ voluptuous ](https://github.com/alecthomas/voluptuous) \- A Python data validation library. 



##  <::after> Data Visualization 

_Libraries for visualizing data. Also see[ awesome-javascript ](https://github.com/sorrycc/awesome-javascript#data-visualization) . _

  * <::marker> [ Altair ](https://github.com/altair-viz/altair) \- Declarative statistical visualization library for Python. 
  * <::marker> [ Bokeh ](https://github.com/bokeh/bokeh) \- Interactive Web Plotting for Python. 
  * <::marker> [ bqplot ](https://github.com/bloomberg/bqplot) \- Interactive Plotting Library for the Jupyter Notebook. 
  * <::marker> [ Cartopy ](https://github.com/SciTools/cartopy) \- A cartographic python library with matplotlib support. 
  * <::marker> [ Dash ](https://plot.ly/products/dash/) \- Built on top of Flask, React and Plotly aimed at analytical web applications. 
    * <::marker> [ awesome-dash ](https://github.com/Acrotrend/awesome-dash)
  * <::marker> [ diagrams ](https://github.com/mingrammer/diagrams) \- Diagram as Code. 
  * <::marker> [ Matplotlib ](http://matplotlib.org/) \- A Python 2D plotting library. 
  * <::marker> [ plotnine ](https://github.com/has2k1/plotnine) \- A grammar of graphics for Python based on ggplot2. 
  * <::marker> [ Pygal ](http://www.pygal.org/en/latest/) \- A Python SVG Charts Creator. 
  * <::marker> [ PyGraphviz ](https://pypi.org/project/pygraphviz/) \- Python interface to [ Graphviz ](http://www.graphviz.org/) . 
  * <::marker> [ PyQtGraph ](http://www.pyqtgraph.org/) \- Interactive and realtime 2D/3D/Image plotting and science/engineering widgets. 
  * <::marker> [ Seaborn ](https://github.com/mwaskom/seaborn) \- Statistical data visualization using Matplotlib. 
  * <::marker> [ VisPy ](https://github.com/vispy/vispy) \- High-performance scientific visualization based on OpenGL. 



##  <::after> Database 

_Databases implemented in Python._

  * <::marker> [ pickleDB ](https://github.com/patx/pickledb) \- A simple and lightweight key-value store for Python. 
  * <::marker> [ tinydb ](https://github.com/msiemens/tinydb) \- A tiny, document-oriented database. 
  * <::marker> [ ZODB ](https://github.com/zopefoundation/ZODB) \- A native object database for Python. A key-value and object graph database. 



##  <::after> Database Drivers 

_Libraries for connecting and operating databases._

  * <::marker>MySQL - [ awesome-mysql ](http://shlomi-noach.github.io/awesome-mysql/)
    * <::marker> [ mysqlclient ](https://github.com/PyMySQL/mysqlclient-python) \- MySQL connector with Python 3 support ( [ mysql-python ](https://sourceforge.net/projects/mysql-python/) fork). 
    * <::marker> [ PyMySQL ](https://github.com/PyMySQL/PyMySQL) \- A pure Python MySQL driver compatible to mysql-python. 
  * <::marker>PostgreSQL - [ awesome-postgres ](https://github.com/dhamaniasad/awesome-postgres)
    * <::marker> [ psycopg2 ](http://initd.org/psycopg/) \- The most popular PostgreSQL adapter for Python. 
    * <::marker> [ queries ](https://github.com/gmr/queries) \- A wrapper of the psycopg2 library for interacting with PostgreSQL. 
  * <::marker>SQlite - [ awesome-sqlite ](https://github.com/planetopendata/awesome-sqlite)
    * <::marker> [ sqlite3 ](https://docs.python.org/3/library/sqlite3.html) \- (Python standard library) SQlite interface compliant with DB-API 2.0 
    * <::marker> [ SuperSQLite ](https://github.com/plasticityai/supersqlite) \- A supercharged SQLite library built on top of [ apsw ](https://github.com/rogerbinns/apsw) . 
  * <::marker>Other Relational Databases 
    * <::marker> [ pymssql ](https://pymssql.readthedocs.io/en/latest/) \- A simple database interface to Microsoft SQL Server. 
    * <::marker> [ clickhouse-driver ](https://github.com/mymarilyn/clickhouse-driver) \- Python driver with native interface for ClickHouse. 
  * <::marker>NoSQL Databases 
    * <::marker> [ cassandra-driver ](https://github.com/datastax/python-driver) \- The Python Driver for Apache Cassandra. 
    * <::marker> [ happybase ](https://github.com/wbolster/happybase) \- A developer-friendly library for Apache HBase. 
    * <::marker> [ kafka-python ](https://github.com/dpkp/kafka-python) \- The Python client for Apache Kafka. 
    * <::marker> [ py2neo ](https://py2neo.org/) \- A client library and toolkit for working with Neo4j. 
    * <::marker> [ pymongo ](https://github.com/mongodb/mongo-python-driver) \- The official Python client for MongoDB. 
    * <::marker> [ redis-py ](https://github.com/andymccurdy/redis-py) \- The Python client for Redis. 
  * <::marker>Asynchronous Clients 
    * <::marker> [ motor ](https://github.com/mongodb/motor) \- The async Python driver for MongoDB. 



##  <::after> Date and Time 

_Libraries for working with dates and times._

  * <::marker> [ Arrow ](https://arrow.readthedocs.io/en/latest/) \- A Python library that offers a sensible and human-friendly approach to creating, manipulating, formatting and converting dates, times and timestamps. 
  * <::marker> [ Chronyk ](https://github.com/KoffeinFlummi/Chronyk) \- A Python 3 library for parsing human-written times and dates. 
  * <::marker> [ dateutil ](https://github.com/dateutil/dateutil) \- Extensions to the standard Python [ datetime ](https://docs.python.org/3/library/datetime.html) module. 
  * <::marker> [ delorean ](https://github.com/myusuf3/delorean/) \- A library for clearing up the inconvenient truths that arise dealing with datetimes. 
  * <::marker> [ maya ](https://github.com/timofurrer/maya) \- Datetimes for Humans. 
  * <::marker> [ moment ](https://github.com/zachwill/moment) \- A Python library for dealing with dates/times. Inspired by [ Moment.js ](http://momentjs.com/) . 
  * <::marker> [ Pendulum ](https://github.com/sdispater/pendulum) \- Python datetimes made easy. 
  * <::marker> [ PyTime ](https://github.com/shinux/PyTime) \- An easy-to-use Python module which aims to operate date/time/datetime by string. 
  * <::marker> [ pytz ](https://launchpad.net/pytz) \- World timezone definitions, modern and historical. Brings the [ tz database ](https://en.wikipedia.org/wiki/Tz_database) into Python. 
  * <::marker> [ when.py ](https://github.com/dirn/When.py) \- Providing user-friendly functions to help perform common date and time actions. 



##  <::after> Debugging Tools 

_Libraries for debugging code._

  * <::marker>pdb-like Debugger 
    * <::marker> [ ipdb ](https://github.com/gotcha/ipdb) \- IPython-enabled [ pdb ](https://docs.python.org/3/library/pdb.html) . 
    * <::marker> [ pdb++ ](https://github.com/antocuni/pdb) \- Another drop-in replacement for pdb. 
    * <::marker> [ pudb ](https://github.com/inducer/pudb) \- A full-screen, console-based Python debugger. 
    * <::marker> [ wdb ](https://github.com/Kozea/wdb) \- An improbable web debugger through WebSockets. 
  * <::marker>Tracing 
    * <::marker> [ lptrace ](https://github.com/khamidou/lptrace) \- [ strace ](http://man7.org/linux/man-pages/man1/strace.1.html) for Python programs. 
    * <::marker> [ manhole ](https://github.com/ionelmc/python-manhole) \- Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt. 
    * <::marker> [ pyringe ](https://github.com/google/pyringe) \- Debugger capable of attaching to and injecting code into Python processes. 
    * <::marker> [ python-hunter ](https://github.com/ionelmc/python-hunter) \- A flexible code tracing toolkit. 
  * <::marker>Profiler 
    * <::marker> [ line_profiler ](https://github.com/rkern/line_profiler) \- Line-by-line profiling. 
    * <::marker> [ memory_profiler ](https://github.com/fabianp/memory_profiler) \- Monitor Memory usage of Python code. 
    * <::marker> [ py-spy ](https://github.com/benfred/py-spy) \- A sampling profiler for Python programs. Written in Rust. 
    * <::marker> [ pyflame ](https://github.com/uber/pyflame) \- A ptracing profiler For Python. 
    * <::marker> [ vprof ](https://github.com/nvdv/vprof) \- Visual Python profiler. 
  * <::marker>Others 
    * <::marker> [ django-debug-toolbar ](https://github.com/jazzband/django-debug-toolbar) \- Display various debug information for Django. 
    * <::marker> [ django-devserver ](https://github.com/dcramer/django-devserver) \- A drop-in replacement for Django's runserver. 
    * <::marker> [ flask-debugtoolbar ](https://github.com/mgood/flask-debugtoolbar) \- A port of the django-debug-toolbar to flask. 
    * <::marker> [ icecream ](https://github.com/gruns/icecream) \- Inspect variables, expressions, and program execution with a single, simple function call. 
    * <::marker> [ pyelftools ](https://github.com/eliben/pyelftools) \- Parsing and analyzing ELF files and DWARF debugging information. 



##  <::after> Deep Learning 

_Frameworks for Neural Networks and Deep Learning. Also see[ awesome-deep-learning ](https://github.com/ChristosChristofidis/awesome-deep-learning) . _

  * <::marker> [ caffe ](https://github.com/BVLC/caffe) \- A fast open framework for deep learning.. 
  * <::marker> [ keras ](https://github.com/keras-team/keras) \- A high-level neural networks library and capable of running on top of either TensorFlow or Theano. 
  * <::marker> [ mxnet ](https://github.com/dmlc/mxnet) \- A deep learning framework designed for both efficiency and flexibility. 
  * <::marker> [ pytorch ](https://github.com/pytorch/pytorch) \- Tensors and Dynamic neural networks in Python with strong GPU acceleration. 
  * <::marker> [ SerpentAI ](https://github.com/SerpentAI/SerpentAI) \- Game agent framework. Use any video game as a deep learning sandbox. 
  * <::marker> [ tensorflow ](https://github.com/tensorflow/tensorflow) \- The most popular Deep Learning framework created by Google. 
  * <::marker> [ Theano ](https://github.com/Theano/Theano) \- A library for fast numerical computation. 



##  <::after> DevOps Tools 

_Software and libraries for DevOps._

  * <::marker>Configuration Management 
    * <::marker> [ ansible ](https://github.com/ansible/ansible) \- A radically simple IT automation platform. 
    * <::marker> [ cloudinit ](https://cloudinit.readthedocs.io/en/latest/) \- A multi-distribution package that handles early initialization of a cloud instance. 
    * <::marker> [ OpenStack ](https://www.openstack.org/) \- Open source software for building private and public clouds. 
    * <::marker> [ pyinfra ](https://github.com/Fizzadar/pyinfra) \- A versatile CLI tools and python libraries to automate infrastructure. 
    * <::marker> [ saltstack ](https://github.com/saltstack/salt) \- Infrastructure automation and management system. 
  * <::marker>SSH-style Deployment 
    * <::marker> [ cuisine ](https://github.com/sebastien/cuisine) \- Chef-like functionality for Fabric. 
    * <::marker> [ fabric ](https://github.com/fabric/fabric) \- A simple, Pythonic tool for remote execution and deployment. 
    * <::marker> [ fabtools ](https://github.com/fabtools/fabtools) \- Tools for writing awesome Fabric files. 
  * <::marker>Process Management 
    * <::marker> [ honcho ](https://github.com/nickstenning/honcho) \- A Python clone of [ Foreman ](https://github.com/ddollar/foreman) , for managing Procfile-based applications. 
    * <::marker> [ supervisor ](https://github.com/Supervisor/supervisor) \- Supervisor process control system for UNIX. 
  * <::marker>Monitoring 
    * <::marker> [ psutil ](https://github.com/giampaolo/psutil) \- A cross-platform process and system utilities module. 
  * <::marker>Backup 
    * <::marker> [ BorgBackup ](https://www.borgbackup.org/) \- A deduplicating archiver with compression and encryption. 
  * <::marker>Others 
    * <::marker> [ docker-compose ](https://docs.docker.com/compose/) \- Fast, isolated development environments using [ Docker ](https://www.docker.com/) . 



##  <::after> Distributed Computing 

_Frameworks and libraries for Distributed Computing._

  * <::marker>Batch Processing 
    * <::marker> [ dask ](https://github.com/dask/dask) \- A flexible parallel computing library for analytic computing. 
    * <::marker> [ luigi ](https://github.com/spotify/luigi) \- A module that helps you build complex pipelines of batch jobs. 
    * <::marker> [ mrjob ](https://github.com/Yelp/mrjob) \- Run MapReduce jobs on Hadoop or Amazon Web Services. 
    * <::marker> [ PySpark ](https://pypi.org/project/pyspark/) \- [ Apache Spark ](https://spark.apache.org/) Python API. 
    * <::marker> [ Ray ](https://github.com/ray-project/ray/) \- A system for parallel and distributed Python that unifies the machine learning ecosystem. 
  * <::marker>Stream Processing 
    * <::marker> [ faust ](https://github.com/robinhood/faust) \- A stream processing library, porting the ideas from [ Kafka Streams ](https://kafka.apache.org/documentation/streams/) to Python. 
    * <::marker> [ streamparse ](https://github.com/Parsely/streamparse) \- Run Python code against real-time streams of data via [ Apache Storm ](http://storm.apache.org/) . 



##  <::after> Distribution 

_Libraries to create packaged executables for release distribution._

  * <::marker> [ dh-virtualenv ](https://github.com/spotify/dh-virtualenv) \- Build and distribute a virtualenv as a Debian package. 
  * <::marker> [ Nuitka ](http://nuitka.net/) \- Compile scripts, modules, packages to an executable or extension module. 
  * <::marker> [ py2app ](http://pythonhosted.org/py2app/) \- Freezes Python scripts (Mac OS X). 
  * <::marker> [ py2exe ](http://www.py2exe.org/) \- Freezes Python scripts (Windows). 
  * <::marker> [ pyarmor ](https://github.com/dashingsoft/pyarmor) \- A tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts. 
  * <::marker> [ PyInstaller ](https://github.com/pyinstaller/pyinstaller) \- Converts Python programs into stand-alone executables (cross-platform). 
  * <::marker> [ pynsist ](http://pynsist.readthedocs.io/en/latest/) \- A tool to build Windows installers, installers bundle Python itself. 
  * <::marker> [ shiv ](https://github.com/linkedin/shiv) \- A command line utility for building fully self-contained zipapps (PEP 441), but with all their dependencies included. 



##  <::after> Documentation 

_Libraries for generating project documentation._

  * <::marker> [ sphinx ](https://github.com/sphinx-doc/sphinx/) \- Python Documentation generator. 
    * <::marker> [ awesome-sphinxdoc ](https://github.com/yoloseem/awesome-sphinxdoc)
  * <::marker> [ pdoc ](https://github.com/mitmproxy/pdoc) \- Epydoc replacement to auto generate API documentation for Python libraries. 
  * <::marker> [ pycco ](https://github.com/pycco-docs/pycco) \- The literate-programming-style documentation generator. 



##  <::after> Downloader 

_Libraries for downloading._

  * <::marker> [ akshare ](https://github.com/jindaxiang/akshare) \- A financial data interface library, built for human beings! 
  * <::marker> [ s3cmd ](https://github.com/s3tools/s3cmd) \- A command line tool for managing Amazon S3 and CloudFront. 
  * <::marker> [ s4cmd ](https://github.com/bloomreach/s4cmd) \- Super S3 command line tool, good for higher performance. 
  * <::marker> [ you-get ](https://you-get.org/) \- A YouTube/Youku/Niconico video downloader written in Python 3. 
  * <::marker> [ youtube-dl ](https://rg3.github.io/youtube-dl/) \- A small command-line program to download videos from YouTube. 



##  <::after> E-commerce 

_Frameworks and libraries for e-commerce and payments._

  * <::marker> [ alipay ](https://github.com/lxneng/alipay) \- Unofficial Alipay API for Python. 
  * <::marker> [ Cartridge ](https://github.com/stephenmcd/cartridge) \- A shopping cart app built using the Mezzanine. 
  * <::marker> [ django-oscar ](http://oscarcommerce.com/) \- An open-source e-commerce framework for Django. 
  * <::marker> [ django-shop ](https://github.com/awesto/django-shop) \- A Django based shop system. 
  * <::marker> [ forex-python ](https://github.com/MicroPyramid/forex-python) \- Foreign exchange rates, Bitcoin price index and currency conversion. 
  * <::marker> [ merchant ](https://github.com/agiliq/merchant) \- A Django app to accept payments from various payment processors. 
  * <::marker> [ money ](https://github.com/carlospalol/money) \- ` Money ` class with optional CLDR-backed locale-aware formatting and an extensible currency exchange. 
  * <::marker> [ python-currencies ](https://github.com/Alir3z4/python-currencies) \- Display money format and its filthy currencies. 
  * <::marker> [ saleor ](https://saleor.io/) \- Headless open-source e-commerce platform. 
  * <::marker> [ shoop ](https://www.shuup.com/en/) \- An open source E-Commerce platform based on Django. 



##  <::after> Editor Plugins and IDEs 

  * <::marker>Emacs 
    * <::marker> [ elpy ](https://github.com/jorgenschaefer/elpy) \- Emacs Python Development Environment. 
  * <::marker>Sublime Text 
    * <::marker> [ anaconda ](https://github.com/DamnWidget/anaconda) \- Anaconda turns your Sublime Text 3 in a full featured Python development IDE. 
    * <::marker> [ SublimeJEDI ](https://github.com/srusskih/SublimeJEDI) \- A Sublime Text plugin to the awesome auto-complete library Jedi. 
  * <::marker>Vim 
    * <::marker> [ jedi-vim ](https://github.com/davidhalter/jedi-vim) \- Vim bindings for the Jedi auto-completion library for Python. 
    * <::marker> [ python-mode ](https://github.com/python-mode/python-mode) \- An all in one plugin for turning Vim into a Python IDE. 
    * <::marker> [ YouCompleteMe ](https://github.com/Valloric/YouCompleteMe) \- Includes [ Jedi ](https://github.com/davidhalter/jedi) -based completion engine for Python. 
  * <::marker>Visual Studio 
    * <::marker> [ PTVS ](https://github.com/Microsoft/PTVS) \- Python Tools for Visual Studio. 
  * <::marker>Visual Studio Code 
    * <::marker> [ Python ](https://marketplace.visualstudio.com/items?itemName=ms-python.python) \- The official VSCode extension with rich support for Python. 
  * <::marker>IDE 
    * <::marker> [ PyCharm ](https://www.jetbrains.com/pycharm/) \- Commercial Python IDE by JetBrains. Has free community edition available. 
    * <::marker> [ spyder ](https://github.com/spyder-ide/spyder) \- Open Source Python IDE. 



##  <::after> Email 

_Libraries for sending and parsing email._

  * <::marker>Mail Servers 
    * <::marker> [ modoboa ](https://github.com/modoboa/modoboa) \- A mail hosting and management platform including a modern Web UI. 
    * <::marker> [ salmon ](https://github.com/moggers87/salmon) \- A Python Mail Server. 
  * <::marker>Clients 
    * <::marker> [ imbox ](https://github.com/martinrusev/imbox) \- Python IMAP for Humans. 
    * <::marker> [ yagmail ](https://github.com/kootenpv/yagmail) \- Yet another Gmail/SMTP client. 
  * <::marker>Others 
    * <::marker> [ flanker ](https://github.com/mailgun/flanker) \- An email address and Mime parsing library. 
    * <::marker> [ mailer ](https://github.com/marrow/mailer) \- High-performance extensible mail delivery framework. 



##  <::after> Enterprise Application Integrations 

_Platforms and tools for systems integrations in enterprise environments_

  * <::marker> [ Zato ](https://zato.io) \- ESB, SOA, REST, APIs and Cloud Integrations in Python. 



##  <::after> Environment Management 

_Libraries for Python version and virtual environment management._

  * <::marker> [ pyenv ](https://github.com/pyenv/pyenv) \- Simple Python version management. 
  * <::marker> [ virtualenv ](https://github.com/pypa/virtualenv) \- A tool to create isolated Python environments. 



##  <::after> Files 

_Libraries for file manipulation and MIME type detection._

  * <::marker> [ mimetypes ](https://docs.python.org/3/library/mimetypes.html) \- (Python standard library) Map filenames to MIME types. 
  * <::marker> [ path.py ](https://github.com/jaraco/path.py) \- A module wrapper for [ os.path ](https://docs.python.org/3/library/os.path.html) . 
  * <::marker> [ pathlib ](https://docs.python.org/3/library/pathlib.html) \- (Python standard library) An cross-platform, object-oriented path library. 
  * <::marker> [ PyFilesystem2 ](https://github.com/pyfilesystem/pyfilesystem2) \- Python's filesystem abstraction layer. 
  * <::marker> [ python-magic ](https://github.com/ahupp/python-magic) \- A Python interface to the libmagic file type identification library. 
  * <::marker> [ Unipath ](https://github.com/mikeorr/Unipath) \- An object-oriented approach to file/directory operations. 
  * <::marker> [ watchdog ](https://github.com/gorakhargosh/watchdog) \- API and shell utilities to monitor file system events. 



##  <::after> Foreign Function Interface 

_Libraries for providing foreign function interface._

  * <::marker> [ cffi ](https://pypi.org/project/cffi/) \- Foreign Function Interface for Python calling C code. 
  * <::marker> [ ctypes ](https://docs.python.org/3/library/ctypes.html) \- (Python standard library) Foreign Function Interface for Python calling C code. 
  * <::marker> [ PyCUDA ](https://mathema.tician.de/software/pycuda/) \- A Python wrapper for Nvidia's CUDA API. 
  * <::marker> [ SWIG ](http://www.swig.org/Doc1.3/Python.html) \- Simplified Wrapper and Interface Generator. 



##  <::after> Forms 

_Libraries for working with forms._

  * <::marker> [ Deform ](https://github.com/Pylons/deform) \- Python HTML form generation library influenced by the formish form generation library. 
  * <::marker> [ django-bootstrap3 ](https://github.com/dyve/django-bootstrap3) \- Bootstrap 3 integration with Django. 
  * <::marker> [ django-bootstrap4 ](https://github.com/zostera/django-bootstrap4) \- Bootstrap 4 integration with Django. 
  * <::marker> [ django-crispy-forms ](https://github.com/django-crispy-forms/django-crispy-forms) \- A Django app which lets you create beautiful forms in a very elegant and DRY way. 
  * <::marker> [ django-remote-forms ](https://github.com/WiserTogether/django-remote-forms) \- A platform independent Django form serializer. 
  * <::marker> [ WTForms ](https://github.com/wtforms/wtforms) \- A flexible forms validation and rendering library. 



##  <::after> Functional Programming 

_Functional Programming with Python._

  * <::marker> [ Coconut ](https://github.com/evhub/coconut) \- A variant of Python built for simple, elegant, Pythonic functional programming. 
  * <::marker> [ CyToolz ](https://github.com/pytoolz/cytoolz/) \- Cython implementation of ` Toolz ` : High performance functional utilities. 
  * <::marker> [ fn.py ](https://github.com/kachayev/fn.py) \- Functional programming in Python: implementation of missing features to enjoy FP. 
  * <::marker> [ funcy ](https://github.com/Suor/funcy) \- A fancy and practical functional tools. 
  * <::marker> [ more-itertools ](https://github.com/erikrose/more-itertools) \- More routines for operating on iterables, beyond ` itertools ` . 
  * <::marker> [ returns ](https://github.com/dry-python/returns) \- A set of type-safe monads, transformers, and composition utilities. 
  * <::marker> [ Toolz ](https://github.com/pytoolz/toolz) \- A collection of functional utilities for iterators, functions, and dictionaries. 



##  <::after> GUI Development 

_Libraries for working with graphical user interface applications._

  * <::marker> [ curses ](https://docs.python.org/3/library/curses.html) \- Built-in wrapper for [ ncurses ](http://www.gnu.org/software/ncurses/) used to create terminal GUI applications. 
  * <::marker> [ Eel ](https://github.com/ChrisKnott/Eel) \- A library for making simple Electron-like offline HTML/JS GUI apps. 
  * <::marker> [ enaml ](https://github.com/nucleic/enaml) \- Creating beautiful user-interfaces with Declarative Syntax like QML. 
  * <::marker> [ Flexx ](https://github.com/zoofIO/flexx) \- Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering. 
  * <::marker> [ Gooey ](https://github.com/chriskiehl/Gooey) \- Turn command line programs into a full GUI application with one line. 
  * <::marker> [ kivy ](https://kivy.org/) \- A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS. 
  * <::marker> [ pyglet ](https://github.com/pyglet/pyglet) \- A cross-platform windowing and multimedia library for Python. 
  * <::marker> [ PyGObject ](https://wiki.gnome.org/Projects/PyGObject) \- Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3). 
  * <::marker> [ PyQt ](https://doc.qt.io/qtforpython/) \- Python bindings for the [ Qt ](https://www.qt.io/) cross-platform application and UI framework. 
  * <::marker> [ PySimpleGUI ](https://github.com/PySimpleGUI/PySimpleGUI) \- Wrapper for tkinter, Qt, WxPython and Remi. 
  * <::marker> [ pywebview ](https://github.com/r0x0r/pywebview/) \- A lightweight cross-platform native wrapper around a webview component. 
  * <::marker> [ Tkinter ](https://wiki.python.org/moin/TkInter) \- Tkinter is Python's de-facto standard GUI package. 
  * <::marker> [ Toga ](https://github.com/pybee/toga) \- A Python native, OS native GUI toolkit. 
  * <::marker> [ urwid ](http://urwid.org/) \- A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc. 
  * <::marker> [ wxPython ](https://wxpython.org/) \- A blending of the wxWidgets C++ class library with the Python. 
  * <::marker> [ DearPyGui ](https://github.com/RaylockLLC/DearPyGui/) \- A Simple GPU accelerated Python GUI framework 



##  <::after> GraphQL 

_Libraries for working with GraphQL._

  * <::marker> [ graphene ](https://github.com/graphql-python/graphene/) \- GraphQL framework for Python. 
  * <::marker> [ tartiflette-aiohttp ](https://github.com/tartiflette/tartiflette-aiohttp/) \- An ` aiohttp ` -based wrapper for Tartiflette to expose GraphQL APIs over HTTP. 
  * <::marker> [ tartiflette-asgi ](https://github.com/tartiflette/tartiflette-asgi/) \- ASGI support for the Tartiflette GraphQL engine. 
  * <::marker> [ tartiflette ](https://tartiflette.io) \- SDL-first GraphQL engine implementation for Python 3.6+ and asyncio. 



##  <::after> Game Development 

_Awesome game development libraries._

  * <::marker> [ Arcade ](https://api.arcade.academy/en/latest/) \- Arcade is a modern Python framework for crafting games with compelling graphics and sound. 
  * <::marker> [ Cocos2d ](http://cocos2d.org/) \- cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications. 
  * <::marker> [ Harfang3D ](http://www.harfang3d.com) \- Python framework for 3D, VR and game development. 
  * <::marker> [ Panda3D ](https://www.panda3d.org/) \- 3D game engine developed by Disney. 
  * <::marker> [ Pygame ](http://www.pygame.org/news.html) \- Pygame is a set of Python modules designed for writing games. 
  * <::marker> [ PyOgre ](http://www.ogre3d.org/tikiwiki/PyOgre) \- Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D. 
  * <::marker> [ PyOpenGL ](http://pyopengl.sourceforge.net/) \- Python ctypes bindings for OpenGL and it's related APIs. 
  * <::marker> [ PySDL2 ](https://pysdl2.readthedocs.io) \- A ctypes based wrapper for the SDL2 library. 
  * <::marker> [ RenPy ](https://www.renpy.org/) \- A Visual Novel engine. 



##  <::after> Geolocation 

_Libraries for geocoding addresses and working with latitudes and longitudes._

  * <::marker> [ django-countries ](https://github.com/SmileyChris/django-countries) \- A Django app that provides a country field for models and forms. 
  * <::marker> [ GeoDjango ](https://docs.djangoproject.com/en/dev/ref/contrib/gis/) \- A world-class geographic web framework. 
  * <::marker> [ GeoIP ](https://github.com/maxmind/geoip-api-python) \- Python API for MaxMind GeoIP Legacy Database. 
  * <::marker> [ geojson ](https://github.com/frewsxcv/python-geojson) \- Python bindings and utilities for GeoJSON. 
  * <::marker> [ geopy ](https://github.com/geopy/geopy) \- Python Geocoding Toolbox. 



##  <::after> HTML Manipulation 

_Libraries for working with HTML and XML._

  * <::marker> [ BeautifulSoup ](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) \- Providing Pythonic idioms for iterating, searching, and modifying HTML or XML. 
  * <::marker> [ bleach ](https://github.com/mozilla/bleach) \- A whitelist-based HTML sanitization and text linkification library. 
  * <::marker> [ cssutils ](https://pypi.org/project/cssutils/) \- A CSS library for Python. 
  * <::marker> [ html5lib ](https://github.com/html5lib/html5lib-python) \- A standards-compliant library for parsing and serializing HTML documents and fragments. 
  * <::marker> [ lxml ](http://lxml.de/) \- A very fast, easy-to-use and versatile library for handling HTML and XML. 
  * <::marker> [ MarkupSafe ](https://github.com/pallets/markupsafe) \- Implements a XML/HTML/XHTML Markup safe string for Python. 
  * <::marker> [ pyquery ](https://github.com/gawel/pyquery) \- A jQuery-like library for parsing HTML. 
  * <::marker> [ untangle ](https://github.com/stchris/untangle) \- Converts XML documents to Python objects for easy access. 
  * <::marker> [ WeasyPrint ](http://weasyprint.org) \- A visual rendering engine for HTML and CSS that can export to PDF. 
  * <::marker> [ xmldataset ](https://xmldataset.readthedocs.io/en/latest/) \- Simple XML Parsing. 
  * <::marker> [ xmltodict ](https://github.com/martinblech/xmltodict) \- Working with XML feel like you are working with JSON. 



##  <::after> HTTP Clients 

_Libraries for working with HTTP._

  * <::marker> [ grequests ](https://github.com/spyoungtech/grequests) \- requests + gevent for asynchronous HTTP requests. 
  * <::marker> [ httplib2 ](https://github.com/httplib2/httplib2) \- Comprehensive HTTP client library. 
  * <::marker> [ httpx ](https://github.com/encode/httpx) \- A next generation HTTP client for Python. 
  * <::marker> [ requests ](https://github.com/psf/requests) \- HTTP Requests for Humans. 
  * <::marker> [ treq ](https://github.com/twisted/treq) \- Python requests like API built on top of Twisted's HTTP client. 
  * <::marker> [ urllib3 ](https://github.com/shazow/urllib3) \- A HTTP library with thread-safe connection pooling, file post support, sanity friendly. 



##  <::after> Hardware 

_Libraries for programming with hardware._

  * <::marker> [ ino ](http://inotool.org/) \- Command line toolkit for working with [ Arduino ](https://www.arduino.cc/) . 
  * <::marker> [ keyboard ](https://github.com/boppreh/keyboard) \- Hook and simulate global keyboard events on Windows and Linux. 
  * <::marker> [ mouse ](https://github.com/boppreh/mouse) \- Hook and simulate global mouse events on Windows and Linux. 
  * <::marker> [ Pingo ](http://www.pingo.io/) \- Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo, etc. 
  * <::marker> [ PyUserInput ](https://github.com/SavinaRoja/PyUserInput) \- A module for cross-platform control of the mouse and keyboard. 
  * <::marker> [ scapy ](https://github.com/secdev/scapy) \- A brilliant packet manipulation library. 



##  <::after> Image Processing 

_Libraries for manipulating images._

  * <::marker> [ hmap ](https://github.com/rossgoodwin/hmap) \- Image histogram remapping. 
  * <::marker> [ imgSeek ](https://sourceforge.net/projects/imgseek/) \- A project for searching a collection of images using visual similarity. 
  * <::marker> [ nude.py ](https://github.com/hhatto/nude.py) \- Nudity detection. 
  * <::marker> [ pagan ](https://github.com/daboth/pagan) \- Retro identicon (Avatar) generation based on input string and hash. 
  * <::marker> [ pillow ](https://github.com/python-pillow/Pillow) \- Pillow is the friendly [ PIL ](http://www.pythonware.com/products/pil/) fork. 
  * <::marker> [ python-barcode ](https://github.com/WhyNotHugo/python-barcode) \- Create barcodes in Python with no extra dependencies. 
  * <::marker> [ pygram ](https://github.com/ajkumar25/pygram) \- Instagram-like image filters. 
  * <::marker> [ PyMatting ](http://github.com/pymatting/pymatting) \- A library for alpha matting. 
  * <::marker> [ python-qrcode ](https://github.com/lincolnloop/python-qrcode) \- A pure Python QR Code generator. 
  * <::marker> [ pywal ](https://github.com/dylanaraps/pywal) \- A tool that generates color schemes from images. 
  * <::marker> [ pyvips ](https://github.com/libvips/pyvips) \- A fast image processing library with low memory needs. 
  * <::marker> [ Quads ](https://github.com/fogleman/Quads) \- Computer art based on quadtrees. 
  * <::marker> [ scikit-image ](http://scikit-image.org/) \- A Python library for (scientific) image processing. 
  * <::marker> [ thumbor ](https://github.com/thumbor/thumbor) \- A smart imaging service. It enables on-demand crop, re-sizing and flipping of images. 
  * <::marker> [ wand ](https://github.com/dahlia/wand) \- Python bindings for [ MagickWand ](http://www.imagemagick.org/script/magick-wand.php) , C API for ImageMagick. 



##  <::after> Implementations 

_Implementations of Python._

  * <::marker> [ CLPython ](https://github.com/metawilm/cl-python) \- Implementation of the Python programming language written in Common Lisp. 
  * <::marker> [ CPython ](https://github.com/python/cpython) \- **Default, most widely used implementation of the Python programming language written in C.**
  * <::marker> [ Cython ](http://cython.org/) \- Optimizing Static Compiler for Python. 
  * <::marker> [ Grumpy ](https://github.com/google/grumpy) \- More compiler than interpreter as more powerful CPython2.7 replacement (alpha). 
  * <::marker> [ IronPython ](https://github.com/IronLanguages/ironpython3) \- Implementation of the Python programming language written in C#. 
  * <::marker> [ Jython ](https://hg.python.org/jython) \- Implementation of Python programming language written in Java for the JVM. 
  * <::marker> [ MicroPython ](https://github.com/micropython/micropython) \- A lean and efficient Python programming language implementation. 
  * <::marker> [ Numba ](http://numba.pydata.org/) \- Python JIT compiler to LLVM aimed at scientific Python. 
  * <::marker> [ PeachPy ](https://github.com/Maratyszcza/PeachPy) \- x86-64 assembler embedded in Python. 
  * <::marker> [ Pyjion ](https://github.com/Microsoft/Pyjion) \- A JIT for Python based upon CoreCLR. 
  * <::marker> [ PyPy ](https://foss.heptapod.net/pypy/pypy) \- A very fast and compliant implementation of the Python language. 
  * <::marker> [ Pyston ](https://github.com/dropbox/pyston) \- A Python implementation using JIT techniques. 
  * <::marker> [ Stackless Python ](https://github.com/stackless-dev/stackless) \- An enhanced version of the Python programming language. 



##  <::after> Interactive Interpreter 

_Interactive Python interpreters (REPL)._

  * <::marker> [ bpython ](https://github.com/bpython/bpython) \- A fancy interface to the Python interpreter. 
  * <::marker> [ Jupyter Notebook (IPython) ](https://jupyter.org) \- A rich toolkit to help you make the most out of using Python interactively. 
    * <::marker> [ awesome-jupyter ](https://github.com/markusschanta/awesome-jupyter)
  * <::marker> [ ptpython ](https://github.com/jonathanslenders/ptpython) \- Advanced Python REPL built on top of the [ python-prompt-toolkit ](https://github.com/jonathanslenders/python-prompt-toolkit) . 



##  <::after> Internationalization 

_Libraries for working with i18n._

  * <::marker> [ Babel ](http://babel.pocoo.org/en/latest/) \- An internationalization library for Python. 
  * <::marker> [ PyICU ](https://github.com/ovalhub/pyicu) \- A wrapper of International Components for Unicode C++ library ( [ ICU ](http://site.icu-project.org/) ). 



##  <::after> Job Scheduler 

_Libraries for scheduling jobs._

  * <::marker> [ Airflow ](https://airflow.apache.org/) \- Airflow is a platform to programmatically author, schedule and monitor workflows. 
  * <::marker> [ APScheduler ](http://apscheduler.readthedocs.io/en/latest/) \- A light but powerful in-process task scheduler that lets you schedule functions. 
  * <::marker> [ django-schedule ](https://github.com/thauber/django-schedule) \- A calendaring app for Django. 
  * <::marker> [ doit ](http://pydoit.org/) \- A task runner and build tool. 
  * <::marker> [ gunnery ](https://github.com/gunnery/gunnery) \- Multipurpose task execution tool for distributed systems with web-based interface. 
  * <::marker> [ Joblib ](https://joblib.readthedocs.io/) \- A set of tools to provide lightweight pipelining in Python. 
  * <::marker> [ Plan ](https://github.com/fengsp/plan) \- Writing crontab file in Python like a charm. 
  * <::marker> [ Prefect ](https://github.com/PrefectHQ/prefect) \- A modern workflow orchestration framework that makes it easy to build, schedule and monitor robust data pipelines. 
  * <::marker> [ schedule ](https://github.com/dbader/schedule) \- Python job scheduling for humans. 
  * <::marker> [ Spiff ](https://github.com/knipknap/SpiffWorkflow) \- A powerful workflow engine implemented in pure Python. 
  * <::marker> [ TaskFlow ](https://docs.openstack.org/developer/taskflow/) \- A Python library that helps to make task execution easy, consistent and reliable. 



##  <::after> Logging 

_Libraries for generating and working with logs._

  * <::marker> [ logbook ](http://logbook.readthedocs.io/en/stable/) \- Logging replacement for Python. 
  * <::marker> [ logging ](https://docs.python.org/3/library/logging.html) \- (Python standard library) Logging facility for Python. 
  * <::marker> [ loguru ](https://github.com/Delgan/loguru) \- Library which aims to bring enjoyable logging in Python. 
  * <::marker> [ sentry-python ](https://github.com/getsentry/sentry-python) \- Sentry SDK for Python. 
  * <::marker> [ structlog ](https://www.structlog.org/en/stable/) \- Structured logging made easy. 



##  <::after> Machine Learning 

_Libraries for Machine Learning. Also see[ awesome-machine-learning ](https://github.com/josephmisiti/awesome-machine-learning#python) . _

  * <::marker> [ gym ](https://github.com/openai/gym) \- A toolkit for developing and comparing reinforcement learning algorithms. 
  * <::marker> [ H2O ](https://github.com/h2oai/h2o-3) \- Open Source Fast Scalable Machine Learning Platform. 
  * <::marker> [ Metrics ](https://github.com/benhamner/Metrics) \- Machine learning evaluation metrics. 
  * <::marker> [ NuPIC ](https://github.com/numenta/nupic) \- Numenta Platform for Intelligent Computing. 
  * <::marker> [ scikit-learn ](http://scikit-learn.org/) \- The most popular Python library for Machine Learning. 
  * <::marker> [ Spark ML ](http://spark.apache.org/docs/latest/ml-guide.html) \- [ Apache Spark ](http://spark.apache.org/) 's scalable Machine Learning library. 
  * <::marker> [ vowpal_porpoise ](https://github.com/josephreisinger/vowpal_porpoise) \- A lightweight Python wrapper for [ Vowpal Wabbit ](https://github.com/JohnLangford/vowpal_wabbit/) . 
  * <::marker> [ xgboost ](https://github.com/dmlc/xgboost) \- A scalable, portable, and distributed gradient boosting library. 
  * <::marker> [ MindsDB ](https://github.com/mindsdb/mindsdb) \- MindsDB is an open source AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries. 



##  <::after> Microsoft Windows 

_Python programming on Microsoft Windows._

  * <::marker> [ Python(x,y) ](http://python-xy.github.io/) \- Scientific-applications-oriented Python Distribution based on Qt and Spyder. 
  * <::marker> [ pythonlibs ](http://www.lfd.uci.edu/~gohlke/pythonlibs/) \- Unofficial Windows binaries for Python extension packages. 
  * <::marker> [ PythonNet ](https://github.com/pythonnet/pythonnet) \- Python Integration with the .NET Common Language Runtime (CLR). 
  * <::marker> [ PyWin32 ](https://github.com/mhammond/pywin32) \- Python Extensions for Windows. 
  * <::marker> [ WinPython ](https://winpython.github.io/) \- Portable development environment for Windows 7/8. 



##  <::after> Miscellaneous 

_Useful libraries or tools that don't fit in the categories above._

  * <::marker> [ blinker ](https://github.com/jek/blinker) \- A fast Python in-process signal/event dispatching system. 
  * <::marker> [ boltons ](https://github.com/mahmoud/boltons) \- A set of pure-Python utilities. 
  * <::marker> [ itsdangerous ](https://github.com/pallets/itsdangerous) \- Various helpers to pass trusted data to untrusted environments. 
  * <::marker> [ magenta ](https://github.com/magenta/magenta) \- A tool to generate music and art using artificial intelligence. 
  * <::marker> [ pluginbase ](https://github.com/mitsuhiko/pluginbase) \- A simple but flexible plugin system for Python. 
  * <::marker> [ tryton ](http://www.tryton.org/) \- A general purpose business framework. 



##  <::after> Natural Language Processing 

_Libraries for working with human languages._

  * <::marker>General 
    * <::marker> [ gensim ](https://github.com/RaRe-Technologies/gensim) \- Topic Modeling for Humans. 
    * <::marker> [ langid.py ](https://github.com/saffsd/langid.py) \- Stand-alone language identification system. 
    * <::marker> [ nltk ](http://www.nltk.org/) \- A leading platform for building Python programs to work with human language data. 
    * <::marker> [ pattern ](https://github.com/clips/pattern) \- A web mining module. 
    * <::marker> [ polyglot ](https://github.com/aboSamoor/polyglot) \- Natural language pipeline supporting hundreds of languages. 
    * <::marker> [ pytext ](https://github.com/facebookresearch/pytext) \- A natural language modeling framework based on PyTorch. 
    * <::marker> [ PyTorch-NLP ](https://github.com/PetrochukM/PyTorch-NLP) \- A toolkit enabling rapid deep learning NLP prototyping for research. 
    * <::marker> [ spacy ](https://spacy.io/) \- A library for industrial-strength natural language processing in Python and Cython. 
    * <::marker> [ Stanza ](https://github.com/stanfordnlp/stanza) \- The Stanford NLP Group's official Python library, supporting 60+ languages. 
  * <::marker>Chinese 
    * <::marker> [ funNLP ](https://github.com/fighting41love/funNLP) \- A collection of tools and datasets for Chinese NLP. 
    * <::marker> [ jieba ](https://github.com/fxsjy/jieba) \- The most popular Chinese text segmentation library. 
    * <::marker> [ pkuseg-python ](https://github.com/lancopku/pkuseg-python) \- A toolkit for Chinese word segmentation in various domains. 
    * <::marker> [ snownlp ](https://github.com/isnowfy/snownlp) \- A library for processing Chinese text. 



##  <::after> Network Virtualization 

_Tools and libraries for Virtual Networking and SDN (Software Defined Networking)._

  * <::marker> [ mininet ](https://github.com/mininet/mininet) \- A popular network emulator and API written in Python. 
  * <::marker> [ napalm ](https://github.com/napalm-automation/napalm) \- Cross-vendor API to manipulate network devices. 
  * <::marker> [ pox ](https://github.com/noxrepo/pox) \- A Python-based SDN control applications, such as OpenFlow SDN controllers. 



##  <::after> News Feed 

_Libraries for building user's activities._

  * <::marker> [ django-activity-stream ](https://github.com/justquick/django-activity-stream) \- Generating generic activity streams from the actions on your site. 
  * <::marker> [ Stream Framework ](https://github.com/tschellenbach/Stream-Framework) \- Building news feed and notification systems using Cassandra and Redis. 



##  <::after> ORM 

_Libraries that implement Object-Relational Mapping or data mapping techniques._

  * <::marker>Relational Databases 
    * <::marker> [ Django Models ](https://docs.djangoproject.com/en/dev/topics/db/models/) \- The Django ORM. 
    * <::marker> [ SQLAlchemy ](https://www.sqlalchemy.org/) \- The Python SQL Toolkit and Object Relational Mapper. 
      * <::marker> [ awesome-sqlalchemy ](https://github.com/dahlia/awesome-sqlalchemy)
    * <::marker> [ dataset ](https://github.com/pudo/dataset) \- Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL. 
    * <::marker> [ orator ](https://github.com/sdispater/orator) \- The Orator ORM provides a simple yet beautiful ActiveRecord implementation. 
    * <::marker> [ orm ](https://github.com/encode/orm) \- An async ORM. 
    * <::marker> [ peewee ](https://github.com/coleifer/peewee) \- A small, expressive ORM. 
    * <::marker> [ pony ](https://github.com/ponyorm/pony/) \- ORM that provides a generator-oriented interface to SQL. 
    * <::marker> [ pydal ](https://github.com/web2py/pydal/) \- A pure Python Database Abstraction Layer. 
  * <::marker>NoSQL Databases 
    * <::marker> [ hot-redis ](https://github.com/stephenmcd/hot-redis) \- Rich Python data types for Redis. 
    * <::marker> [ mongoengine ](https://github.com/MongoEngine/mongoengine) \- A Python Object-Document-Mapper for working with MongoDB. 
    * <::marker> [ PynamoDB ](https://github.com/pynamodb/PynamoDB) \- A Pythonic interface for [ Amazon DynamoDB ](https://aws.amazon.com/dynamodb/) . 
    * <::marker> [ redisco ](https://github.com/kiddouk/redisco) \- A Python Library for Simple Models and Containers Persisted in Redis. 



##  <::after> Package Management 

_Libraries for package and dependency management._

  * <::marker> [ pip ](https://pip.pypa.io/en/stable/) \- The package installer for Python. 
    * <::marker> [ pip-tools ](https://github.com/jazzband/pip-tools) \- A set of tools to keep your pinned Python dependencies fresh. 
    * <::marker> [ PyPI ](https://pypi.org/)
  * <::marker> [ conda ](https://github.com/conda/conda/) \- Cross-platform, Python-agnostic binary package manager. 
  * <::marker> [ poetry ](https://github.com/sdispater/poetry) \- Python dependency management and packaging made easy. 



##  <::after> Package Repositories 

_Local PyPI repository server and proxies._

  * <::marker> [ bandersnatch ](https://github.com/pypa/bandersnatch/) \- PyPI mirroring tool provided by Python Packaging Authority (PyPA). 
  * <::marker> [ devpi ](https://github.com/devpi/devpi) \- PyPI server and packaging/testing/release tool. 
  * <::marker> [ localshop ](https://github.com/jazzband/localshop) \- Local PyPI server (custom packages and auto-mirroring of pypi). 
  * <::marker> [ warehouse ](https://github.com/pypa/warehouse) \- Next generation Python Package Repository (PyPI). 



##  <::after> Penetration Testing 

_Frameworks and tools for penetration testing._

  * <::marker> [ fsociety ](https://github.com/Manisso/fsociety) \- A Penetration testing framework. 
  * <::marker> [ setoolkit ](https://github.com/trustedsec/social-engineer-toolkit) \- A toolkit for social engineering. 
  * <::marker> [ sqlmap ](https://github.com/sqlmapproject/sqlmap) \- Automatic SQL injection and database takeover tool. 



##  <::after> Permissions 

_Libraries that allow or deny users access to data or functionality._

  * <::marker> [ django-guardian ](https://github.com/django-guardian/django-guardian) \- Implementation of per object permissions for Django 1.2+ 
  * <::marker> [ django-rules ](https://github.com/dfunckt/django-rules) \- A tiny but powerful app providing object-level permissions to Django, without requiring a database. 



##  <::after> Processes 

_Libraries for starting and communicating with OS processes._

  * <::marker> [ delegator.py ](https://github.com/amitt001/delegator.py) \- [ Subprocesses ](https://docs.python.org/3/library/subprocess.html) for Humans 2.0. 
  * <::marker> [ sarge ](https://sarge.readthedocs.io/en/latest/) \- Yet another wrapper for subprocess. 
  * <::marker> [ sh ](https://github.com/amoffat/sh) \- A full-fledged subprocess replacement for Python. 



##  <::after> Recommender Systems 

_Libraries for building recommender systems._

  * <::marker> [ annoy ](https://github.com/spotify/annoy) \- Approximate Nearest Neighbors in C++/Python optimized for memory usage. 
  * <::marker> [ fastFM ](https://github.com/ibayer/fastFM) \- A library for Factorization Machines. 
  * <::marker> [ implicit ](https://github.com/benfred/implicit) \- A fast Python implementation of collaborative filtering for implicit datasets. 
  * <::marker> [ libffm ](https://github.com/guestwalk/libffm) \- A library for Field-aware Factorization Machine (FFM). 
  * <::marker> [ lightfm ](https://github.com/lyst/lightfm) \- A Python implementation of a number of popular recommendation algorithms. 
  * <::marker> [ spotlight ](https://github.com/maciejkula/spotlight) \- Deep recommender models using PyTorch. 
  * <::marker> [ Surprise ](https://github.com/NicolasHug/Surprise) \- A scikit for building and analyzing recommender systems. 
  * <::marker> [ tensorrec ](https://github.com/jfkirk/tensorrec) \- A Recommendation Engine Framework in TensorFlow. 



##  <::after> Refactoring 

_Refactoring tools and libraries for Python_

  * <::marker> [ Bicycle Repair Man ](http://bicyclerepair.sourceforge.net/) \- Bicycle Repair Man, a refactoring tool for Python. 
  * <::marker> [ Bowler ](https://pybowler.io/) \- Safe code refactoring for modern Python. 
  * <::marker> [ Rope ](https://github.com/python-rope/rope) \- Rope is a python refactoring library. 



##  <::after> RESTful API 

_Libraries for building RESTful APIs._

  * <::marker>Django 
    * <::marker> [ django-rest-framework ](http://www.django-rest-framework.org/) \- A powerful and flexible toolkit to build web APIs. 
    * <::marker> [ django-tastypie ](http://tastypieapi.org/) \- Creating delicious APIs for Django apps. 
  * <::marker>Flask 
    * <::marker> [ eve ](https://github.com/pyeve/eve) \- REST API framework powered by Flask, MongoDB and good intentions. 
    * <::marker> [ flask-api ](https://github.com/flask-api/flask-api) \- Browsable Web APIs for Flask. 
    * <::marker> [ flask-restful ](https://github.com/flask-restful/flask-restful) \- Quickly building REST APIs for Flask. 
  * <::marker>Pyramid 
    * <::marker> [ cornice ](https://github.com/Cornices/cornice) \- A RESTful framework for Pyramid. 
  * <::marker>Framework agnostic 
    * <::marker> [ apistar ](https://github.com/encode/apistar) \- A smart Web API framework, designed for Python 3. 
    * <::marker> [ falcon ](https://github.com/falconry/falcon) \- A high-performance framework for building cloud APIs and web app backends. 
    * <::marker> [ fastapi ](https://github.com/tiangolo/fastapi) \- A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints. 
    * <::marker> [ hug ](https://github.com/hugapi/hug) \- A Python 3 framework for cleanly exposing APIs. 
    * <::marker> [ sandman2 ](https://github.com/jeffknupp/sandman2) \- Automated REST APIs for existing database-driven systems. 
    * <::marker> [ sanic ](https://github.com/huge-success/sanic) \- A Python 3.6+ web server and web framework that's written to go fast. 
    * <::marker> [ vibora ](https://vibora.io/) \- Fast, efficient and asynchronous Web framework inspired by Flask. 



##  <::after> Robotics 

_Libraries for robotics._

  * <::marker> [ PythonRobotics ](https://github.com/AtsushiSakai/PythonRobotics) \- This is a compilation of various robotics algorithms with visualizations. 
  * <::marker> [ rospy ](http://wiki.ros.org/rospy) \- This is a library for ROS (Robot Operating System). 



##  <::after> RPC Servers 

_RPC-compatible servers._

  * <::marker> [ RPyC ](https://github.com/tomerfiliba/rpyc) (Remote Python Call) - A transparent and symmetric RPC library for Python 
  * <::marker> [ zeroRPC ](https://github.com/0rpc/zerorpc-python) \- zerorpc is a flexible RPC implementation based on [ ZeroMQ ](http://zeromq.org/) and [ MessagePack ](http://msgpack.org/) . 



##  <::after> Science 

_Libraries for scientific computing. Also see[ Python-for-Scientists ](https://github.com/TomNicholas/Python-for-Scientists) . _

  * <::marker> [ astropy ](http://www.astropy.org/) \- A community Python library for Astronomy. 
  * <::marker> [ bcbio-nextgen ](https://github.com/chapmanb/bcbio-nextgen) \- Providing best-practice pipelines for fully automated high throughput sequencing analysis. 
  * <::marker> [ bccb ](https://github.com/chapmanb/bcbb) \- Collection of useful code related to biological analysis. 
  * <::marker> [ Biopython ](http://biopython.org/wiki/Main_Page) \- Biopython is a set of freely available tools for biological computation. 
  * <::marker> [ cclib ](http://cclib.github.io/) \- A library for parsing and interpreting the results of computational chemistry packages. 
  * <::marker> [ Colour ](http://colour-science.org/) \- Implementing a comprehensive number of colour theory transformations and algorithms. 
  * <::marker> [ Karate Club ](https://github.com/benedekrozemberczki/karateclub) \- Unsupervised machine learning toolbox for graph structured data. 
  * <::marker> [ NetworkX ](https://networkx.github.io/) \- A high-productivity software for complex networks. 
  * <::marker> [ NIPY ](http://nipy.org) \- A collection of neuroimaging toolkits. 
  * <::marker> [ NumPy ](http://www.numpy.org/) \- A fundamental package for scientific computing with Python. 
  * <::marker> [ ObsPy ](https://github.com/obspy/obspy/wiki/) \- A Python toolbox for seismology. 
  * <::marker> [ Open Babel ](http://openbabel.org/wiki/Main_Page) \- A chemical toolbox designed to speak the many languages of chemical data. 
  * <::marker> [ PyDy ](http://www.pydy.org/) \- Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion. 
  * <::marker> [ PyMC ](https://github.com/pymc-devs/pymc3) \- Markov Chain Monte Carlo sampling toolkit. 
  * <::marker> [ QuTiP ](http://qutip.org/) \- Quantum Toolbox in Python. 
  * <::marker> [ RDKit ](http://www.rdkit.org/) \- Cheminformatics and Machine Learning Software. 
  * <::marker> [ SciPy ](https://www.scipy.org/) \- A Python-based ecosystem of open-source software for mathematics, science, and engineering. 
  * <::marker> [ SimPy ](https://gitlab.com/team-simpy/simpy) \- A process-based discrete-event simulation framework. 
  * <::marker> [ statsmodels ](https://github.com/statsmodels/statsmodels) \- Statistical modeling and econometrics in Python. 
  * <::marker> [ SymPy ](https://github.com/sympy/sympy) \- A Python library for symbolic mathematics. 
  * <::marker> [ Zipline ](https://github.com/quantopian/zipline) \- A Pythonic algorithmic trading library. 



##  <::after> Search 

_Libraries and software for indexing and performing search queries on data._

  * <::marker> [ django-haystack ](https://github.com/django-haystack/django-haystack) \- Modular search for Django. 
  * <::marker> [ elasticsearch-dsl-py ](https://github.com/elastic/elasticsearch-dsl-py) \- The official high-level Python client for Elasticsearch. 
  * <::marker> [ elasticsearch-py ](https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html) \- The official low-level Python client for [ Elasticsearch ](https://www.elastic.co/products/elasticsearch) . 
  * <::marker> [ pysolr ](https://github.com/django-haystack/pysolr) \- A lightweight Python wrapper for [ Apache Solr ](https://lucene.apache.org/solr/) . 
  * <::marker> [ whoosh ](http://whoosh.readthedocs.io/en/latest/) \- A fast, pure Python search engine library. 



##  <::after> Serialization 

_Libraries for serializing complex data types_

  * <::marker> [ marshmallow ](https://github.com/marshmallow-code/marshmallow) \- A lightweight library for converting complex objects to and from simple Python datatypes. 
  * <::marker> [ pysimdjson ](https://github.com/TkTech/pysimdjson) \- A Python bindings for [ simdjson ](https://github.com/lemire/simdjson) . 
  * <::marker> [ python-rapidjson ](https://github.com/python-rapidjson/python-rapidjson) \- A Python wrapper around [ RapidJSON ](https://github.com/Tencent/rapidjson) . 
  * <::marker> [ ultrajson ](https://github.com/esnme/ultrajson) \- A fast JSON decoder and encoder written in C with Python bindings. 



##  <::after> Serverless Frameworks 

_Frameworks for developing serverless Python code._

  * <::marker> [ python-lambda ](https://github.com/nficano/python-lambda) \- A toolkit for developing and deploying Python code in AWS Lambda. 
  * <::marker> [ Zappa ](https://github.com/Miserlou/Zappa) \- A tool for deploying WSGI applications on AWS Lambda and API Gateway. 



##  <::after> Shell 

_Shells based on Python._

  * <::marker> [ xonsh ](https://github.com/xonsh/xonsh/) \- A Python-powered, cross-platform, Unix-gazing shell language and command prompt. 



##  <::after> Specific Formats Processing 

_Libraries for parsing and manipulating specific text formats._

  * <::marker>General 
    * <::marker> [ tablib ](https://github.com/jazzband/tablib) \- A module for Tabular Datasets in XLS, CSV, JSON, YAML. 
  * <::marker>Office 
    * <::marker> [ docxtpl ](https://github.com/elapouya/python-docx-template) \- Editing a docx document by jinja2 template 
    * <::marker> [ openpyxl ](https://openpyxl.readthedocs.io/en/stable/) \- A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files. 
    * <::marker> [ pyexcel ](https://github.com/pyexcel/pyexcel) \- Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files. 
    * <::marker> [ python-docx ](https://github.com/python-openxml/python-docx) \- Reads, queries and modifies Microsoft Word 2007/2008 docx files. 
    * <::marker> [ python-pptx ](https://github.com/scanny/python-pptx) \- Python library for creating and updating PowerPoint (.pptx) files. 
    * <::marker> [ unoconv ](https://github.com/unoconv/unoconv) \- Convert between any document format supported by LibreOffice/OpenOffice. 
    * <::marker> [ XlsxWriter ](https://github.com/jmcnamara/XlsxWriter) \- A Python module for creating Excel .xlsx files. 
    * <::marker> [ xlwings ](https://github.com/ZoomerAnalytics/xlwings) \- A BSD-licensed library that makes it easy to call Python from Excel and vice versa. 
    * <::marker> [ xlwt ](https://github.com/python-excel/xlwt) / [ xlrd ](https://github.com/python-excel/xlrd) \- Writing and reading data and formatting information from Excel files. 
  * <::marker>PDF 
    * <::marker> [ PDFMiner ](https://github.com/euske/pdfminer) \- A tool for extracting information from PDF documents. 
    * <::marker> [ PyPDF2 ](https://github.com/mstamy2/PyPDF2) \- A library capable of splitting, merging and transforming PDF pages. 
    * <::marker> [ ReportLab ](https://www.reportlab.com/opensource/) \- Allowing Rapid creation of rich PDF documents. 
  * <::marker>Markdown 
    * <::marker> [ Mistune ](https://github.com/lepture/mistune) \- Fastest and full featured pure Python parsers of Markdown. 
    * <::marker> [ Python-Markdown ](https://github.com/waylan/Python-Markdown) \- A Python implementation of John Gruber’s Markdown. 
  * <::marker>YAML 
    * <::marker> [ PyYAML ](http://pyyaml.org/) \- YAML implementations for Python. 
  * <::marker>CSV 
    * <::marker> [ csvkit ](https://github.com/wireservice/csvkit) \- Utilities for converting to and working with CSV. 
  * <::marker>Archive 
    * <::marker> [ unp ](https://github.com/mitsuhiko/unp) \- A command line tool that can unpack archives easily. 



##  <::after> Static Site Generator 

_Static site generator is a software that takes some text + templates as input and produces HTML files on the output._

  * <::marker> [ lektor ](https://github.com/lektor/lektor) \- An easy to use static CMS and blog engine. 
  * <::marker> [ mkdocs ](https://github.com/mkdocs/mkdocs/) \- Markdown friendly documentation generator. 
  * <::marker> [ makesite ](https://github.com/sunainapai/makesite) \- Simple, lightweight, and magic-free static site/blog generator (< 130 lines). 
  * <::marker> [ nikola ](https://github.com/getnikola/nikola) \- A static website and blog generator. 
  * <::marker> [ pelican ](https://github.com/getpelican/pelican) \- Static site generator that supports Markdown and reST syntax. 



##  <::after> Tagging 

_Libraries for tagging items._

  * <::marker> [ django-taggit ](https://github.com/jazzband/django-taggit) \- Simple tagging for Django. 



##  <::after> Task Queues 

_Libraries for working with task queues._

  * <::marker> [ celery ](https://docs.celeryproject.org/en/stable/) \- An asynchronous task queue/job queue based on distributed message passing. 
  * <::marker> [ dramatiq ](https://github.com/Bogdanp/dramatiq) \- A fast and reliable background task processing library for Python 3. 
  * <::marker> [ huey ](https://github.com/coleifer/huey) \- Little multi-threaded task queue. 
  * <::marker> [ mrq ](https://github.com/pricingassistant/mrq) \- A distributed worker task queue in Python using Redis & gevent. 
  * <::marker> [ rq ](https://github.com/rq/rq) \- Simple job queues for Python. 



##  <::after> Template Engine 

_Libraries and tools for templating and lexing._

  * <::marker> [ Genshi ](https://genshi.edgewall.org/) \- Python templating toolkit for generation of web-aware output. 
  * <::marker> [ Jinja2 ](https://github.com/pallets/jinja) \- A modern and designer friendly templating language. 
  * <::marker> [ Mako ](http://www.makotemplates.org/) \- Hyperfast and lightweight templating for the Python platform. 



##  <::after> Testing 

_Libraries for testing codebases and generating test data._

  * <::marker>Testing Frameworks 
    * <::marker> [ hypothesis ](https://github.com/HypothesisWorks/hypothesis) \- Hypothesis is an advanced Quickcheck style property based testing library. 
    * <::marker> [ nose2 ](https://github.com/nose-devs/nose2) \- The successor to ` nose ` , based on `unittest2. 
    * <::marker> [ pytest ](https://docs.pytest.org/en/latest/) \- A mature full-featured Python testing tool. 
    * <::marker> [ Robot Framework ](https://github.com/robotframework/robotframework) \- A generic test automation framework. 
    * <::marker> [ unittest ](https://docs.python.org/3/library/unittest.html) \- (Python standard library) Unit testing framework. 
  * <::marker>Test Runners 
    * <::marker> [ green ](https://github.com/CleanCut/green) \- A clean, colorful test runner. 
    * <::marker> [ mamba ](http://nestorsalceda.github.io/mamba/) \- The definitive testing tool for Python. Born under the banner of BDD. 
    * <::marker> [ tox ](https://tox.readthedocs.io/en/latest/) \- Auto builds and tests distributions in multiple Python versions 
  * <::marker>GUI / Web Testing 
    * <::marker> [ locust ](https://github.com/locustio/locust) \- Scalable user load testing tool written in Python. 
    * <::marker> [ PyAutoGUI ](https://github.com/asweigart/pyautogui) \- PyAutoGUI is a cross-platform GUI automation Python module for human beings. 
    * <::marker> [ Schemathesis ](https://github.com/kiwicom/schemathesis) \- A tool for automatic property-based testing of web applications built with Open API / Swagger specifications. 
    * <::marker> [ Selenium ](https://pypi.org/project/selenium/) \- Python bindings for [ Selenium ](http://www.seleniumhq.org/) WebDriver. 
    * <::marker> [ sixpack ](https://github.com/seatgeek/sixpack) \- A language-agnostic A/B Testing framework. 
    * <::marker> [ splinter ](https://github.com/cobrateam/splinter) \- Open source tool for testing web applications. 
  * <::marker>Mock 
    * <::marker> [ doublex ](https://pypi.org/project/doublex/) \- Powerful test doubles framework for Python. 
    * <::marker> [ freezegun ](https://github.com/spulec/freezegun) \- Travel through time by mocking the datetime module. 
    * <::marker> [ httmock ](https://github.com/patrys/httmock) \- A mocking library for requests for Python 2.6+ and 3.2+. 
    * <::marker> [ httpretty ](https://github.com/gabrielfalcao/HTTPretty) \- HTTP request mock tool for Python. 
    * <::marker> [ mock ](https://docs.python.org/3/library/unittest.mock.html) \- (Python standard library) A mocking and patching library. 
    * <::marker> [ mocket ](https://github.com/mindflayer/python-mocket) \- A socket mock framework with gevent/asyncio/SSL support. 
    * <::marker> [ responses ](https://github.com/getsentry/responses) \- A utility library for mocking out the requests Python library. 
    * <::marker> [ VCR.py ](https://github.com/kevin1024/vcrpy) \- Record and replay HTTP interactions on your tests. 
  * <::marker>Object Factories 
    * <::marker> [ factory_boy ](https://github.com/FactoryBoy/factory_boy) \- A test fixtures replacement for Python. 
    * <::marker> [ mixer ](https://github.com/klen/mixer) \- Another fixtures replacement. Supports Django, Flask, SQLAlchemy, Peewee and etc. 
    * <::marker> [ model_mommy ](https://github.com/vandersonmota/model_mommy) \- Creating random fixtures for testing in Django. 
  * <::marker>Code Coverage 
    * <::marker> [ coverage ](https://pypi.org/project/coverage/) \- Code coverage measurement. 
  * <::marker>Fake Data 
    * <::marker> [ fake2db ](https://github.com/emirozer/fake2db) \- Fake database generator. 
    * <::marker> [ faker ](https://github.com/joke2k/faker) \- A Python package that generates fake data. 
    * <::marker> [ mimesis ](https://github.com/lk-geimfari/mimesis) \- is a Python library that help you generate fake data. 
    * <::marker> [ radar ](https://pypi.org/project/radar/) \- Generate random datetime / time. 



##  <::after> Text Processing 

_Libraries for parsing and manipulating plain texts._

  * <::marker>General 
    * <::marker> [ chardet ](https://github.com/chardet/chardet) \- Python 2/3 compatible character encoding detector. 
    * <::marker> [ difflib ](https://docs.python.org/3/library/difflib.html) \- (Python standard library) Helpers for computing deltas. 
    * <::marker> [ ftfy ](https://github.com/LuminosoInsight/python-ftfy) \- Makes Unicode text less broken and more consistent automagically. 
    * <::marker> [ fuzzywuzzy ](https://github.com/seatgeek/fuzzywuzzy) \- Fuzzy String Matching. 
    * <::marker> [ Levenshtein ](https://github.com/ztane/python-Levenshtein/) \- Fast computation of Levenshtein distance and string similarity. 
    * <::marker> [ pangu.py ](https://github.com/vinta/pangu.py) \- Paranoid text spacing. 
    * <::marker> [ pyfiglet ](https://github.com/pwaller/pyfiglet) \- An implementation of figlet written in Python. 
    * <::marker> [ pypinyin ](https://github.com/mozillazg/python-pinyin) \- Convert Chinese hanzi (漢字) to pinyin (拼音). 
    * <::marker> [ textdistance ](https://github.com/orsinium/textdistance) \- Compute distance between sequences with 30+ algorithms. 
    * <::marker> [ unidecode ](https://pypi.org/project/Unidecode/) \- ASCII transliterations of Unicode text. 
  * <::marker>Slugify 
    * <::marker> [ awesome-slugify ](https://github.com/dimka665/awesome-slugify) \- A Python slugify library that can preserve unicode. 
    * <::marker> [ python-slugify ](https://github.com/un33k/python-slugify) \- A Python slugify library that translates unicode to ASCII. 
    * <::marker> [ unicode-slugify ](https://github.com/mozilla/unicode-slugify) \- A slugifier that generates unicode slugs with Django as a dependency. 
  * <::marker>Unique identifiers 
    * <::marker> [ hashids ](https://github.com/davidaurelio/hashids-python) \- Implementation of [ hashids ](http://hashids.org) in Python. 
    * <::marker> [ shortuuid ](https://github.com/skorokithakis/shortuuid) \- A generator library for concise, unambiguous and URL-safe UUIDs. 
  * <::marker>Parser 
    * <::marker> [ ply ](https://github.com/dabeaz/ply) \- Implementation of lex and yacc parsing tools for Python. 
    * <::marker> [ pygments ](http://pygments.org/) \- A generic syntax highlighter. 
    * <::marker> [ pyparsing ](https://github.com/pyparsing/pyparsing) \- A general purpose framework for generating parsers. 
    * <::marker> [ python-nameparser ](https://github.com/derek73/python-nameparser) \- Parsing human names into their individual components. 
    * <::marker> [ python-phonenumbers ](https://github.com/daviddrysdale/python-phonenumbers) \- Parsing, formatting, storing and validating international phone numbers. 
    * <::marker> [ python-user-agents ](https://github.com/selwin/python-user-agents) \- Browser user agent parser. 
    * <::marker> [ sqlparse ](https://github.com/andialbrecht/sqlparse) \- A non-validating SQL parser. 



##  <::after> Third-party APIs 

_Libraries for accessing third party services APIs. Also see[ List of Python API Wrappers and Libraries ](https://github.com/realpython/list-of-python-api-wrappers) . _

  * <::marker> [ apache-libcloud ](https://libcloud.apache.org/) \- One Python library for all clouds. 
  * <::marker> [ boto3 ](https://github.com/boto/boto3) \- Python interface to Amazon Web Services. 
  * <::marker> [ django-wordpress ](https://github.com/istrategylabs/django-wordpress) \- WordPress models and views for Django. 
  * <::marker> [ facebook-sdk ](https://github.com/mobolic/facebook-sdk) \- Facebook Platform Python SDK. 
  * <::marker> [ google-api-python-client ](https://github.com/google/google-api-python-client) \- Google APIs Client Library for Python. 
  * <::marker> [ gspread ](https://github.com/burnash/gspread) \- Google Spreadsheets Python API. 
  * <::marker> [ twython ](https://github.com/ryanmcgrath/twython) \- A Python wrapper for the Twitter API. 



##  <::after> URL Manipulation 

_Libraries for parsing URLs._

  * <::marker> [ furl ](https://github.com/gruns/furl) \- A small Python library that makes parsing and manipulating URLs easy. 
  * <::marker> [ purl ](https://github.com/codeinthehole/purl) \- A simple, immutable URL class with a clean API for interrogation and manipulation. 
  * <::marker> [ pyshorteners ](https://github.com/ellisonleao/pyshorteners) \- A pure Python URL shortening lib. 
  * <::marker> [ webargs ](https://github.com/marshmallow-code/webargs) \- A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks. 



##  <::after> Video 

_Libraries for manipulating video and GIFs._

  * <::marker> [ moviepy ](https://zulko.github.io/moviepy/) \- A module for script-based movie editing with many formats, including animated GIFs. 
  * <::marker> [ scikit-video ](https://github.com/aizvorski/scikit-video) \- Video processing routines for SciPy. 
  * <::marker> [ vidgear ](https://github.com/abhiTronix/vidgear) \- Most Powerful multi-threaded Video Processing framework. 



##  <::after> Web Asset Management 

_Tools for managing, compressing and minifying website assets._

  * <::marker> [ django-compressor ](https://github.com/django-compressor/django-compressor) \- Compresses linked and inline JavaScript or CSS into a single cached file. 
  * <::marker> [ django-pipeline ](https://github.com/jazzband/django-pipeline) \- An asset packaging library for Django. 
  * <::marker> [ django-storages ](https://github.com/jschneier/django-storages) \- A collection of custom storage back ends for Django. 
  * <::marker> [ fanstatic ](http://www.fanstatic.org/en/latest/) \- Packages, optimizes, and serves static file dependencies as Python packages. 
  * <::marker> [ fileconveyor ](http://wimleers.com/fileconveyor) \- A daemon to detect and sync files to CDNs, S3 and FTP. 
  * <::marker> [ flask-assets ](https://github.com/miracle2k/flask-assets) \- Helps you integrate webassets into your Flask app. 
  * <::marker> [ webassets ](https://github.com/miracle2k/webassets) \- Bundles, optimizes, and manages unique cache-busting URLs for static resources. 



##  <::after> Web Content Extracting 

_Libraries for extracting web contents._

  * <::marker> [ html2text ](https://github.com/Alir3z4/html2text) \- Convert HTML to Markdown-formatted text. 
  * <::marker> [ lassie ](https://github.com/michaelhelmick/lassie) \- Web Content Retrieval for Humans. 
  * <::marker> [ micawber ](https://github.com/coleifer/micawber) \- A small library for extracting rich content from URLs. 
  * <::marker> [ newspaper ](https://github.com/codelucas/newspaper) \- News extraction, article extraction and content curation in Python. 
  * <::marker> [ python-readability ](https://github.com/buriy/python-readability) \- Fast Python port of arc90's readability tool. 
  * <::marker> [ requests-html ](https://github.com/psf/requests-html) \- Pythonic HTML Parsing for Humans. 
  * <::marker> [ sumy ](https://github.com/miso-belica/sumy) \- A module for automatic summarization of text documents and HTML pages. 
  * <::marker> [ textract ](https://github.com/deanmalmgren/textract) \- Extract text from any document, Word, PowerPoint, PDFs, etc. 
  * <::marker> [ toapi ](https://github.com/gaojiuli/toapi) \- Every web site provides APIs. 



##  <::after> Web Crawling 

_Libraries to automate web scraping._

  * <::marker> [ cola ](https://github.com/chineking/cola) \- A distributed crawling framework. 
  * <::marker> [ feedparser ](https://pythonhosted.org/feedparser/) \- Universal feed parser. 
  * <::marker> [ grab ](https://github.com/lorien/grab) \- Site scraping framework. 
  * <::marker> [ MechanicalSoup ](https://github.com/MechanicalSoup/MechanicalSoup) \- A Python library for automating interaction with websites. 
  * <::marker> [ portia ](https://github.com/scrapinghub/portia) \- Visual scraping for Scrapy. 
  * <::marker> [ pyspider ](https://github.com/binux/pyspider) \- A powerful spider system. 
  * <::marker> [ robobrowser ](https://github.com/jmcarp/robobrowser) \- A simple, Pythonic library for browsing the web without a standalone web browser. 
  * <::marker> [ scrapy ](https://scrapy.org/) \- A fast high-level screen scraping and web crawling framework. 



##  <::after> Web Frameworks 

_Traditional full stack web frameworks. Also see[ RESTful API ](https://github.com/vinta/awesome-python#restful-api) . _

  * <::marker>Synchronous 
    * <::marker> [ Django ](https://www.djangoproject.com/) \- The most popular web framework in Python. 
      * <::marker> [ awesome-django ](https://github.com/shahraizali/awesome-django)
      * <::marker> [ awesome-django ](https://github.com/wsvincent/awesome-django)
    * <::marker> [ Flask ](http://flask.pocoo.org/) \- A microframework for Python. 
      * <::marker> [ awesome-flask ](https://github.com/humiaozuzu/awesome-flask)
    * <::marker> [ Pyramid ](https://pylonsproject.org/) \- A small, fast, down-to-earth, open source Python web framework. 
      * <::marker> [ awesome-pyramid ](https://github.com/uralbash/awesome-pyramid)
    * <::marker> [ Masonite ](https://github.com/MasoniteFramework/masonite) \- The modern and developer centric Python web framework. 
  * <::marker>Asynchronous 
    * <::marker> [ Tornado ](http://www.tornadoweb.org/en/latest/) \- A web framework and asynchronous networking library. 



##  <::after> WebSocket 

_Libraries for working with WebSocket._

  * <::marker> [ autobahn-python ](https://github.com/crossbario/autobahn-python) \- WebSocket & WAMP for Python on Twisted and [ asyncio ](https://docs.python.org/3/library/asyncio.html) . 
  * <::marker> [ channels ](https://github.com/django/channels) \- Developer-friendly asynchrony for Django. 
  * <::marker> [ websockets ](https://github.com/aaugustin/websockets) \- A library for building WebSocket servers and clients with a focus on correctness and simplicity. 



##  <::after> WSGI Servers 

_WSGI-compatible web servers._

  * <::marker> [ bjoern ](https://github.com/jonashaag/bjoern) \- Asynchronous, very fast and written in C. 
  * <::marker> [ gunicorn ](https://github.com/benoitc/gunicorn) \- Pre-forked, ported from Ruby's Unicorn project. 
  * <::marker> [ uWSGI ](https://uwsgi-docs.readthedocs.io/en/latest/) \- A project aims at developing a full stack for building hosting services, written in C. 
  * <::marker> [ waitress ](https://github.com/Pylons/waitress) \- Multi-threaded, powers Pyramid. 
  * <::marker> [ werkzeug ](https://github.com/pallets/werkzeug) \- A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects. 



#  <::after> Resources 

Where to discover learning resources or new Python libraries. 

##  <::after> Books 

  * <::marker> [ Fluent Python ](https://www.oreilly.com/library/view/fluent-python/9781491946237/)
  * <::marker> [ Think Python ](https://greenteapress.com/wp/think-python-2e/)



##  <::after> Websites 

  * <::marker>Tutorials 
    * <::marker> [ Full Stack Python ](https://www.fullstackpython.com/)
    * <::marker> [ Python Cheatsheet ](https://www.pythoncheatsheet.org/)
    * <::marker> [ Real Python ](https://realpython.com)
    * <::marker> [ The Hitchhiker’s Guide to Python ](https://docs.python-guide.org/)
    * <::marker> [ Ultimate Python study guide ](https://github.com/huangsam/ultimate-python)
  * <::marker>Libraries 
    * <::marker> [ Awesome Python @LibHunt ](https://python.libhunt.com/)
  * <::marker>Others 
    * <::marker> [ Python ZEEF ](https://python.zeef.com/alan.richmond)
    * <::marker> [ Pythonic News ](https://news.python.sc/)
    * <::marker> [ What the f*ck Python! ](https://github.com/satwikkansal/wtfpython)



##  <::after> Newsletters 

  * <::marker> [ Awesome Python Newsletter ](http://python.libhunt.com/newsletter)
  * <::marker> [ Pycoder's Weekly ](http://pycoders.com/)
  * <::marker> [ Python Tricks ](https://realpython.com/python-tricks/)
  * <::marker> [ Python Weekly ](http://www.pythonweekly.com/)



##  <::after> Podcasts 

  * <::marker> [ Django Chat ](https://djangochat.com/)
  * <::marker> [ Podcast.__init__ ](https://podcastinit.com/)
  * <::marker> [ Python Bytes ](https://pythonbytes.fm)
  * <::marker> [ Running in Production ](https://runninginproduction.com/)
  * <::marker> [ Talk Python To Me ](https://talkpython.fm/)
  * <::marker> [ Test and Code ](https://testandcode.com/)
  * <::marker> [ The Real Python Podcast ](https://realpython.com/podcasts/rpp/)



#  <::after> Contributing 

Your contributions are always welcome! Please take a look at the [ contribution guidelines ](https://github.com/vinta/awesome-python/blob/master/CONTRIBUTING.md) first. 

I will keep some pull requests open if I'm not sure whether those libraries are awesome, you could [ vote for them ](https://github.com/vinta/awesome-python/pulls) by adding 👍 to them. Pull requests will be merged when their votes reach **20** . 

* * *

If you have any question about this opinionated list, do not hesitate to contact me [ @VintaChen ](https://twitter.com/VintaChen) on Twitter or open an issue on GitHub. 

#  Menu 

[ ](/search?project_id=84)

Create new... 

  * This project 
  * [ New issue  ](/vinta/awesome-python/-/issues/new)
  * * * *

  * GitLab 
  * [ New project/repository  ](/projects/new)
  * [ New group  ](/groups/new)
  * [ New snippet  ](/-/snippets/new)




**Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)



Step 8:
act - **BrowseInteractiveAction**
BROWSER_ACTIONS: click("597")
obs - **BrowserOutputObservation**
URL: http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/commits/master
Status code: 200
Error: True
Open pages: ['http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/commits/master']
Active page index: 0
Last browser action: click("597")
Last browser action error: TimeoutError: Timeout 500ms exceeded.
=========================== logs ===========================
waiting for get_by_test_id("597")
  locator resolved to <a bid="597" browsergym_set_of_marks="1" browsergym…>…</a>
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
============================================================
Focused element bid: 56
CONTENT: Skip to content 

GitLab  [ ](/ "Dashboard")

  *     * **Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)

Frequently visited 

      * Projects you visit often will appear here 

[ View all projects  ](/dashboard/projects)




[ Projects ](/dashboard/projects) [ Groups ](/dashboard/groups) [ Milestones ](/dashboard/milestones) [ Snippets ](/dashboard/snippets) [ Activity ](/dashboard/activity)

  * ` / `

  * [ ](/search?project_id=84 "Search")



  * [ ](/projects/new "Create new...")

    * This project 
    * [ New issue ](/vinta/awesome-python/-/issues/new)
    *     * GitLab 
    * [ New project/repository ](/projects/new)
    * [ New group ](/groups/new)
    * [ New snippet ](/-/snippets/new)

  * [ 16  ](/dashboard/issues?assignee_username=byteblaze "Issues")
  * [ 13  ](/dashboard/merge_requests?assignee_username=byteblaze "Merge requests")

    * Merge requests 
    * [ Assigned to you  5  ](/dashboard/merge_requests?assignee_username=byteblaze)
    * [ Review requests for you  8  ](/dashboard/merge_requests?reviewer_username=byteblaze)

  * [ 9  ](/dashboard/todos "To-Do List")
  * [ Help  ](/help)

    *     * What's new  10 
    * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * Keyboard shortcuts ` ? `
    *     * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)

  * [ ](/byteblaze)

    * [ Byte Blaze  @byteblaze  🌴  Out of Office  ](/byteblaze)
    *     * Edit status 
    * [ Edit profile ](/-/profile)
    * [ Preferences ](/-/profile/preferences)
    *     * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)
    *     * [ Sign out ](/users/sign_out)




Toggle navigation  Menu 

  * [ A  awesome-python  ](/vinta/awesome-python)
  * [ Project information  ](/vinta/awesome-python/activity)
    * **Project information**
    *     * [ Activity  ](/vinta/awesome-python/activity)
    * [ Labels  ](/vinta/awesome-python/-/labels)
    * [ Members  ](/vinta/awesome-python/-/project_members)
  * [ Repository  ](/vinta/awesome-python/-/tree/master)
    * **Repository**
    *     * [ Files  ](/vinta/awesome-python/-/tree/master)
    * [ Commits  ](/vinta/awesome-python/-/commits/master)
    * [ Branches  ](/vinta/awesome-python/-/branches)
    * [ Tags  ](/vinta/awesome-python/-/tags)
    * [ Contributors  ](/vinta/awesome-python/-/graphs/master)
    * [ Graph  ](/vinta/awesome-python/-/network/master)
    * [ Compare  ](/vinta/awesome-python/-/compare?from=master&to=master)
  * [ Issues  13  ](/vinta/awesome-python/-/issues)
    * **Issues** 13 
    *     * [ List  ](/vinta/awesome-python/-/issues)
    * [ Boards  ](/vinta/awesome-python/-/boards)
    * [ Service Desk  ](/vinta/awesome-python/-/issues/service_desk)
    * [ Milestones  ](/vinta/awesome-python/-/milestones)
  * [ Merge requests  317  ](/vinta/awesome-python/-/merge_requests)
    * **Merge requests** 317 
  * [ CI/CD  ](/vinta/awesome-python/-/pipelines)
    * **CI/CD**
    *     * [ Pipelines  ](/vinta/awesome-python/-/pipelines)
    * [ Jobs  ](/vinta/awesome-python/-/jobs)
    * [ Schedules  ](/vinta/awesome-python/-/pipeline_schedules)
  * [ Deployments  ](/vinta/awesome-python/-/environments)
    * **Deployments**
    *     * [ Environments  ](/vinta/awesome-python/-/environments)
    * [ Releases  ](/vinta/awesome-python/-/releases)
  * [ Packages and registries  ](/vinta/awesome-python/-/packages)
    * **Packages and registries**
    *     * [ Package Registry  ](/vinta/awesome-python/-/packages)
    * [ Infrastructure Registry  ](/vinta/awesome-python/-/infrastructure_registry)
  * [ Monitor  ](/vinta/awesome-python/-/incidents)
    * **Monitor**
    *     * [ Incidents  ](/vinta/awesome-python/-/incidents)
  * [ Analytics  ](/vinta/awesome-python/-/value_stream_analytics)
    * **Analytics**
    *     * [ Value stream  ](/vinta/awesome-python/-/value_stream_analytics)
    * [ CI/CD  ](/vinta/awesome-python/-/pipelines/charts)
    * [ Repository  ](/vinta/awesome-python/-/graphs/master/charts)
  * [ Wiki  ](/vinta/awesome-python/-/wikis/home)
    * **Wiki**
  * [ Snippets  ](/vinta/awesome-python/-/snippets)
    * **Snippets**
  * [ Activity ](/vinta/awesome-python/activity)
  * [ Graph ](/vinta/awesome-python/-/network/master)
  * [ Create a new issue ](/vinta/awesome-python/-/issues/new)
  * [ Jobs ](/vinta/awesome-python/-/jobs)
  * [ Commits ](/vinta/awesome-python/-/commits/master)
  * [ Issue Boards ](/vinta/awesome-python/-/boards)

Collapse sidebar  Close sidebar 

<::after>

Open sidebar 

  * [ Vinta Chen ](/vinta)
  * [ awesome-python  ](/vinta/awesome-python)
  * [ Commits ](/vinta/awesome-python/-/commits/master)



master 

Select Git revision 

  * Branches  318 

  * gh-pages 

  * github/fork/AgnostiqHQ/master 

  * github/fork/AhmedRAlmansoori/sqlmodel 

  * github/fork/AlaShibanAtKlo/master 

  * github/fork/AlbertLucianto/master 

  * github/fork/AlephaNull/ursina 

  * github/fork/AvnerCohen/patch-cornell 

  * github/fork/Code0x58/add-python-jsonstore 

  * github/fork/CodeBleu/patch-1 

  * github/fork/ComicShrimp/master 

  * github/fork/DhirenGala/master 

  * github/fork/FabianSt305/patch-1 

  * github/fork/FaraPy/master 

  * github/fork/Faral-Ghaemi/master 

  * github/fork/Fatal1ty/master 

  * github/fork/FilBot3/awesome/cicd-buildbot 

  * github/fork/ForkRepo/master 

  * github/fork/Fredpwol/add-textblob 

  * github/fork/GT-ZhangAcer/PaddleOCR 

  * github/fork/Git-Harshit/patch-1 




  * [ awesome-python ](/vinta/awesome-python/-/commits/master)



Author 

  * Search by author 
  * * * *

  * Any Author 

  * * * *

  * Vinta Chen 

vinta 




[ ](/vinta/awesome-python/-/commits/master?feed_token=TMN_bBn9Z48qVbUFZV45&format=atom "Commits feed")

  1. 05 Jan, 2023  1 commit 
  2.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #2297 from hofrob/remove-abandoned-project-pyannotate ](/vinta/awesome-python/-/commit/091e9e6c4e4edc592f5d2a3449e32d6c7a6db871) · 091e9e6c 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  1 year ago 

091e9e6c 

[ ](/vinta/awesome-python/-/tree/091e9e6c4e4edc592f5d2a3449e32d6c7a6db871 "Browse Files")

  3. 03 Jan, 2023  1 commit 
  4.      * <::after>

[ ](mailto:1058012%2Bhofrob@users.noreply.github.com)

[ Remove abandoned project pyannotate ](/vinta/awesome-python/-/commit/58d33989365338dd9e3ae1f09a7120be78676c11) · 58d33989 

[ Robert Hofer ](mailto:1058012%2Bhofrob@users.noreply.github.com) authored  1 year ago 

58d33989 

[ ](/vinta/awesome-python/-/tree/58d33989365338dd9e3ae1f09a7120be78676c11 "Browse Files")

  5. 04 Dec, 2022  1 commit 
  6.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #2247 from timuric/master ](/vinta/awesome-python/-/commit/10643e1ff335065acfbc4d1258fa8c926191b218) · 10643e1f 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  1 year ago 

10643e1f 

[ ](/vinta/awesome-python/-/tree/10643e1ff335065acfbc4d1258fa8c926191b218 "Browse Files")

  7. 03 Dec, 2022  1 commit 
  8.      * <::after>

[ ](mailto:timuric@gmail.com)

[ Add correct description of Saleor ](/vinta/awesome-python/-/commit/b153dfe8c936553b87f6eae8c0a5870ab704dc7a) · b153dfe8 

[ timur ](mailto:timuric@gmail.com) authored  1 year ago 

b153dfe8 

[ ](/vinta/awesome-python/-/tree/b153dfe8c936553b87f6eae8c0a5870ab704dc7a "Browse Files")

  9. 24 Oct, 2022  1 commit 
  10.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #2209 from anuragrao04/patch-1 ](/vinta/awesome-python/-/commit/1f3d73ef2fdc77ac34b78390097f1341e50e7612) · 1f3d73ef 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  1 year ago 
        
                redirected pyqt to official docs, which is more useful for a beginner

1f3d73ef 

[ ](/vinta/awesome-python/-/tree/1f3d73ef2fdc77ac34b78390097f1341e50e7612 "Browse Files")

  11. 23 Oct, 2022  1 commit 
  12.      * <::after>

[ ](mailto:77329899%2Banuragrao04@users.noreply.github.com)

[ Update README.md ](/vinta/awesome-python/-/commit/e7875575f96b5e2a6e6c76a67826bf33eb272bb6) · e7875575 

[ Anurag Rao ](mailto:77329899%2Banuragrao04@users.noreply.github.com) authored  1 year ago 
        
                redirected pyqt to link to official docs, which is more useful for a beginner

e7875575 

[ ](/vinta/awesome-python/-/tree/e7875575f96b5e2a6e6c76a67826bf33eb272bb6 "Browse Files")

  13. 27 Jul, 2022  1 commit 
  14.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #2122 from nishans08/master ](/vinta/awesome-python/-/commit/933e60743c84ad423b5bde3a907b895612e50ab7) · 933e6074 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  2 years ago 
        
                fix errors in README.md

933e6074 

[ ](/vinta/awesome-python/-/tree/933e60743c84ad423b5bde3a907b895612e50ab7 "Browse Files")

  15. 26 Jul, 2022  1 commit 
  16.      * <::after>

[ ](mailto:71048600%2Bnishans08@users.noreply.github.com)

[ fix errors in README.md ](/vinta/awesome-python/-/commit/7172dffdc9db52385f6b7017d9e6a42f7b79e4a9) · 7172dffd 

[ nishans08 ](mailto:71048600%2Bnishans08@users.noreply.github.com) authored  2 years ago 
        
                 dogpile.cache is next generation replacement for Beaker made by same authors ->  dogpile.cache is a next generation replacement for Beaker made by the same authors.

7172dffd 

[ ](/vinta/awesome-python/-/tree/7172dffdc9db52385f6b7017d9e6a42f7b79e4a9 "Browse Files")

  17. 17 Dec, 2021  2 commits 
  18.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1899 from pranavarora1895/link-updated-Arcade ](/vinta/awesome-python/-/commit/edf110dd9f2e05692966cb65a001ce697a2da0f2) · edf110dd 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  2 years ago 
        
                arcade link updated

edf110dd 

[ ](/vinta/awesome-python/-/tree/edf110dd9f2e05692966cb65a001ce697a2da0f2 "Browse Files")

     * <::after>

[ ](mailto:48170643%2Bpranavarora1895@users.noreply.github.com)

[ arcade link updated ](/vinta/awesome-python/-/commit/05fc6b3549b52dcc1240983779b284eca64622b6) · 05fc6b35 

[ Pranav Arora ](mailto:48170643%2Bpranavarora1895@users.noreply.github.com) authored  2 years ago 
        
                Arcade, a game development library, the previous link does not exist. So I updated it with the latest link.

05fc6b35 

[ ](/vinta/awesome-python/-/tree/05fc6b3549b52dcc1240983779b284eca64622b6 "Browse Files")

  19. 25 Jul, 2021  4 commits 
  20.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1794 from VaishnaviMudaliar/Updating-readme ](/vinta/awesome-python/-/commit/21258213c1e763dac62806d3b1c03f22e50edb18) · 21258213 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

21258213 

[ ](/vinta/awesome-python/-/tree/21258213c1e763dac62806d3b1c03f22e50edb18 "Browse Files")

     * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1795 from VaishnaviMudaliar/fixed-typo-in-contributing-readme ](/vinta/awesome-python/-/commit/b39086dc979ac015f4df46282d751d75d2dac447) · b39086dc 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

b39086dc 

[ ](/vinta/awesome-python/-/tree/b39086dc979ac015f4df46282d751d75d2dac447 "Browse Files")

     * <::after>

[ ](mailto:vaishnavim1311@gmail.com)

[ Update CONTRIBUTING.md ](/vinta/awesome-python/-/commit/aa4e0ee1a96baf54fa730a60f789e62d1c90b297) · aa4e0ee1 

[ Vaishnavi Mudaliar ](mailto:vaishnavim1311@gmail.com) authored  3 years ago 
        
                fixed a typo

aa4e0ee1 

[ ](/vinta/awesome-python/-/tree/aa4e0ee1a96baf54fa730a60f789e62d1c90b297 "Browse Files")

     * <::after>

[ ](mailto:vaishnavim1311@gmail.com)

[ Update README.md ](/vinta/awesome-python/-/commit/19dcbb025a698625622aefe3b567027d38629ae9) · 19dcbb02 

[ Vaishnavi Mudaliar ](mailto:vaishnavim1311@gmail.com) authored  3 years ago 

19dcbb02 

[ ](/vinta/awesome-python/-/tree/19dcbb025a698625622aefe3b567027d38629ae9 "Browse Files")

  21. 14 May, 2021  1 commit 
  22.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ remove wifi Close ](/vinta/awesome-python/-/commit/6831740c32b66105122d536be0e463e14a0c6e2a) [ #1712 ](/vinta/awesome-python/-/issues/1712 "Wifi is unmaintained") · 6831740c 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

6831740c 

[ ](/vinta/awesome-python/-/tree/6831740c32b66105122d536be0e463e14a0c6e2a "Browse Files")

  23. 04 Feb, 2021  1 commit 
  24.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1730 from ramonsaraiva/fix-dramatiq ](/vinta/awesome-python/-/commit/545b0535a9ba82da7e6f3be3d73bd2e4eb2acb63) · 545b0535 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

545b0535 

[ ](/vinta/awesome-python/-/tree/545b0535a9ba82da7e6f3be3d73bd2e4eb2acb63 "Browse Files")

  25. 03 Feb, 2021  1 commit 
  26.      * <::after>

[ ](mailto:ramonsaraiva@gmail.com)

[ Fix dramatiq spelling ](/vinta/awesome-python/-/commit/39d97c16372bb897a53cb9548d6637a055de0432) · 39d97c16 

[ Ramon Saraiva ](mailto:ramonsaraiva@gmail.com) authored  3 years ago 

39d97c16 

[ ](/vinta/awesome-python/-/tree/39d97c16372bb897a53cb9548d6637a055de0432 "Browse Files")

  27. 25 Jan, 2021  2 commits 
  28.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1725 from yhay81/master ](/vinta/awesome-python/-/commit/9d41288f425c15736d5aca0cd3caf6145b489e33) · 9d41288f 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 
        
                Fix gunicorn description

9d41288f 

[ ](/vinta/awesome-python/-/tree/9d41288f425c15736d5aca0cd3caf6145b489e33 "Browse Files")

     * <::after>

[ ](mailto:yusuke8h@gmail.com)

[ Fix gunicorn description ](/vinta/awesome-python/-/commit/c64a0103ca2f2f149da0dd996830901f1c2274d0) · c64a0103 

[ Yusuke Hayashi ](mailto:yusuke8h@gmail.com) authored  3 years ago 

c64a0103 

[ ](/vinta/awesome-python/-/tree/c64a0103ca2f2f149da0dd996830901f1c2274d0 "Browse Files")

  29. 22 Jan, 2021  5 commits 
  30.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1720 from norweeg/add_sqlite3 ](/vinta/awesome-python/-/commit/98f9992e6c8ca3497af67177a3dee02e595b8cef) · 98f9992e 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

98f9992e 

[ ](/vinta/awesome-python/-/tree/98f9992e6c8ca3497af67177a3dee02e595b8cef "Browse Files")

     * <::after>

[ ](mailto:5969754%2Bnorweeg@users.noreply.github.com)

[ fixed spelling error ](/vinta/awesome-python/-/commit/5e52e9e90c0f478c8015e9722890f3f70c459066) · 5e52e9e9 

[ Brennen Raimer ](mailto:5969754%2Bnorweeg@users.noreply.github.com) authored  3 years ago 

5e52e9e9 

[ ](/vinta/awesome-python/-/tree/5e52e9e90c0f478c8015e9722890f3f70c459066 "Browse Files")

     * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1718 from norweeg/add_sqlite3 ](/vinta/awesome-python/-/commit/adc73bbe7a48acf6db4e4bba6596d5391e60296a) · adc73bbe 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

adc73bbe 

[ ](/vinta/awesome-python/-/tree/adc73bbe7a48acf6db4e4bba6596d5391e60296a "Browse Files")

     * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1707 from SamPetherbridge/patch-5 ](/vinta/awesome-python/-/commit/a124a5ec864c331f2204f5524ed61982825eff0b) · a124a5ec 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

a124a5ec 

[ ](/vinta/awesome-python/-/tree/a124a5ec864c331f2204f5524ed61982825eff0b "Browse Files")

     * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1706 from SamPetherbridge/patch-3 ](/vinta/awesome-python/-/commit/2ebe6febcdeead8bd1397c34a872af2f20ad8480) · 2ebe6feb 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

2ebe6feb 

[ ](/vinta/awesome-python/-/tree/2ebe6febcdeead8bd1397c34a872af2f20ad8480 "Browse Files")

  31. 21 Jan, 2021  2 commits 
  32.      * <::after>

[ ](mailto:5969754%2Bnorweeg@users.noreply.github.com)

[ add SQlite category and sqlite3 driver ](/vinta/awesome-python/-/commit/c0ade8ef07fca582b45442764d6d1ae58204c935) · c0ade8ef 

[ Brennen Raimer ](mailto:5969754%2Bnorweeg@users.noreply.github.com) authored  3 years ago 

c0ade8ef 

[ ](/vinta/awesome-python/-/tree/c0ade8ef07fca582b45442764d6d1ae58204c935 "Browse Files")

     * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1714 from kdiri/master ](/vinta/awesome-python/-/commit/5fc66f8157edf45a12441b9f29294d1cdab5182c) · 5fc66f81 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

5fc66f81 

[ ](/vinta/awesome-python/-/tree/5fc66f8157edf45a12441b9f29294d1cdab5182c "Browse Files")

  33. 16 Jan, 2021  1 commit 
  34.      * <::after>

[ ](mailto:kemal.diri@sewan.fr)

[ Add clickhouse-driver ](/vinta/awesome-python/-/commit/954dca36b3b0f4138c6421134e39ee519a81fdae) · 954dca36 

[ Kemal Diri ](mailto:kemal.diri@sewan.fr) authored  3 years ago 

954dca36 

[ ](/vinta/awesome-python/-/tree/954dca36b3b0f4138c6421134e39ee519a81fdae "Browse Files")

  35. 08 Jan, 2021  2 commits 
  36.      * <::after>

[ ](mailto:Sam@Peth.Me)

[ 🗑  ](/vinta/awesome-python/-/commit/d19f5d581c96301b8ef45730d386a625119340c7) [ Remove pygeoip ](/vinta/awesome-python/-/commit/d19f5d581c96301b8ef45730d386a625119340c7) · d19f5d58 

[ Sam Petherbridge ](mailto:Sam@Peth.Me) authored  3 years ago 
        
                Repo is no longer supported, is archived and read-only. Maintainer is recommending people use the Maxmind's GeoIP2 Python API.
        Maxmind's GeoIP2 Python API.: <https://github.com/maxmind/GeoIP2-python>
        pygeoip: <https://github.com/appliedsec/pygeoip>

d19f5d58 

[ ](/vinta/awesome-python/-/tree/d19f5d581c96301b8ef45730d386a625119340c7 "Browse Files")

     * <::after>

[ ](mailto:Sam@Peth.Me)

[ 🗑  ](/vinta/awesome-python/-/commit/069da96862b875a839e6373eb969b3052ca75fd5) [ Remove profiling ](/vinta/awesome-python/-/commit/069da96862b875a839e6373eb969b3052ca75fd5) · 069da968 

[ Sam Petherbridge ](mailto:Sam@Peth.Me) authored  3 years ago 
        
                Remove the profiling repo as it has been archived and no longer maintained. The repo owner is highly recommending people switching to py-spy which provides better performance and usability.
        Repo: <https://github.com/what-studio/profiling>

069da968 

[ ](/vinta/awesome-python/-/tree/069da96862b875a839e6373eb969b3052ca75fd5 "Browse Files")

  37. 04 Dec, 2020  2 commits 
  38.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1685 from SpeksForks/master ](/vinta/awesome-python/-/commit/55bb9e02de59347f73353dd66a94452461e87db2) · 55bb9e02 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 
        
                Readability

55bb9e02 

[ ](/vinta/awesome-python/-/tree/55bb9e02de59347f73353dd66a94452461e87db2 "Browse Files")

     * <::after>

[ ](mailto:spekulatius@users.noreply.github.com)

[ Readability ](/vinta/awesome-python/-/commit/4d33c0e4a4590610f9389c25147f6c4601416e5c) · 4d33c0e4 

[ Peter Thaleikis ](mailto:spekulatius@users.noreply.github.com) authored  3 years ago 

4d33c0e4 

[ ](/vinta/awesome-python/-/tree/4d33c0e4a4590610f9389c25147f6c4601416e5c "Browse Files")

  39. 18 Nov, 2020  1 commit 
  40.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ add Think Python Fixes #1670 ](/vinta/awesome-python/-/commit/e0ed13b31c2c793ca6b31a4e012026f51e1bbafa) · e0ed13b3 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

e0ed13b3 

[ ](/vinta/awesome-python/-/tree/e0ed13b31c2c793ca6b31a4e012026f51e1bbafa "Browse Files")

  41. 17 Nov, 2020  3 commits 
  42.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1679 from dsuch/master ](/vinta/awesome-python/-/commit/d5139695d8311ace16860c053b170560e7d93986) · d5139695 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 
        
                Add "Enterprise Application Integrations" to the table of contents.

d5139695 

[ ](/vinta/awesome-python/-/tree/d5139695d8311ace16860c053b170560e7d93986 "Browse Files")

     * <::after>

[ ](mailto:dsuch-github@m.zato.io)

[ Add "Enterprise Application Integrations" to the table of contents. ](/vinta/awesome-python/-/commit/e6283079dc5f87720006e62c76a6ed4b59889839) · e6283079 

[ Dariusz Suchojad ](mailto:dsuch-github@m.zato.io) authored  3 years ago 

e6283079 

[ ](/vinta/awesome-python/-/tree/e6283079dc5f87720006e62c76a6ed4b59889839 "Browse Files")

     * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1677 from dsuch/master ](/vinta/awesome-python/-/commit/fa49dbf0e75d18faa29c892ed3ba4050cb9b4e99) · fa49dbf0 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 
        
                Add Zato to Enterprise Application Integrations.

fa49dbf0 

[ ](/vinta/awesome-python/-/tree/fa49dbf0e75d18faa29c892ed3ba4050cb9b4e99 "Browse Files")

  43. 13 Nov, 2020  1 commit 
  44.      * <::after>

[ ](mailto:dsuch@example.com)

[ Add Zato to Enterprise Application Integrations. ](/vinta/awesome-python/-/commit/2d48b117fa0ec94f871829d0b823bdd2be76707d) · 2d48b117 

[ dsuch ](mailto:dsuch@example.com) authored  3 years ago 

2d48b117 

[ ](/vinta/awesome-python/-/tree/2d48b117fa0ec94f871829d0b823bdd2be76707d "Browse Files")

  45. 04 Nov, 2020  1 commit 
  46.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Merge pull request #1669 from SpekBin/master ](/vinta/awesome-python/-/commit/e76501af64e5a7d48e0ad8b64b187f59cdbc5ab2) · e76501af 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 
        
                Typo

e76501af 

[ ](/vinta/awesome-python/-/tree/e76501af64e5a7d48e0ad8b64b187f59cdbc5ab2 "Browse Files")

  47. 03 Nov, 2020  1 commit 
  48.      * <::after>

[ ](mailto:spekulatius@users.noreply.github.com)

[ Typo ](/vinta/awesome-python/-/commit/08e15d02efd39f5bb906a0c7899c8a4aaf41e4c3) · 08e15d02 

[ Peter Thaleikis ](mailto:spekulatius@users.noreply.github.com) authored  3 years ago 

08e15d02 

[ ](/vinta/awesome-python/-/tree/08e15d02efd39f5bb906a0c7899c8a4aaf41e4c3 "Browse Files")

  49. 30 Oct, 2020  2 commits 
  50.      * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ cleanup ](/vinta/awesome-python/-/commit/279487124faf90b326af10ea0d5269acc89be053) · 27948712 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

27948712 

[ ](/vinta/awesome-python/-/tree/279487124faf90b326af10ea0d5269acc89be053 "Browse Files")

     * <::after>

[ ](mailto:vinta.chen@gmail.com)

[ Create FUNDING.yml ](/vinta/awesome-python/-/commit/1a4006d13d3f19685b73ff09e21e57c5c5c6bde7) · 1a4006d1 

[ Vinta Chen ](mailto:vinta.chen@gmail.com) authored  3 years ago 

1a4006d1 

[ ](/vinta/awesome-python/-/tree/1a4006d13d3f19685b73ff09e21e57c5c5c6bde7 "Browse Files")




#  Menu 

[ ](/search?project_id=84)

Create new... 

  * This project 
  * [ New issue  ](/vinta/awesome-python/-/issues/new)
  * * * *

  * GitLab 
  * [ New project/repository  ](/projects/new)
  * [ New group  ](/groups/new)
  * [ New snippet  ](/-/snippets/new)




**Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)



Step 9:
act - **BrowseInteractiveAction**
BROWSER_ACTIONS: click("307")
obs - **BrowserOutputObservation**
URL: http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/graphs/master
Status code: 200
Error: True
Open pages: ['http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/graphs/master']
Active page index: 0
Last browser action: click("307")
Last browser action error: TimeoutError: Timeout 500ms exceeded.
=========================== logs ===========================
waiting for get_by_test_id("307")
  locator resolved to <a bid="307" class="gl-link" aria-label="Contributo…>…</a>
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
============================================================
Focused element bid: 56
CONTENT: Skip to content 

GitLab  [ ](/ "Dashboard")

  *     * **Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)

Frequently visited 

      * Projects you visit often will appear here 

[ View all projects  ](/dashboard/projects)




[ Projects ](/dashboard/projects) [ Groups ](/dashboard/groups) [ Milestones ](/dashboard/milestones) [ Snippets ](/dashboard/snippets) [ Activity ](/dashboard/activity)

  * ` / `

  * [ ](/search?project_id=84 "Search")



  * [ ](/projects/new "Create new...")

    * This project 
    * [ New issue ](/vinta/awesome-python/-/issues/new)
    *     * GitLab 
    * [ New project/repository ](/projects/new)
    * [ New group ](/groups/new)
    * [ New snippet ](/-/snippets/new)

  * [ 16  ](/dashboard/issues?assignee_username=byteblaze "Issues")
  * [ 13  ](/dashboard/merge_requests?assignee_username=byteblaze "Merge requests")

    * Merge requests 
    * [ Assigned to you  5  ](/dashboard/merge_requests?assignee_username=byteblaze)
    * [ Review requests for you  8  ](/dashboard/merge_requests?reviewer_username=byteblaze)

  * [ 9  ](/dashboard/todos "To-Do List")
  * [ Help  ](/help)

    *     * What's new  10 
    * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * Keyboard shortcuts ` ? `
    *     * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)

  * [ ](/byteblaze)

    * [ Byte Blaze  @byteblaze  🌴  Out of Office  ](/byteblaze)
    *     * Edit status 
    * [ Edit profile ](/-/profile)
    * [ Preferences ](/-/profile/preferences)
    *     * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)
    *     * [ Sign out ](/users/sign_out)




Toggle navigation  Menu 

  * [ A  awesome-python  ](/vinta/awesome-python)
  * [ Project information  ](/vinta/awesome-python/activity)
    * **Project information**
    *     * [ Activity  ](/vinta/awesome-python/activity)
    * [ Labels  ](/vinta/awesome-python/-/labels)
    * [ Members  ](/vinta/awesome-python/-/project_members)
  * [ Repository  ](/vinta/awesome-python/-/tree/master)
    * **Repository**
    *     * [ Files  ](/vinta/awesome-python/-/tree/master)
    * [ Commits  ](/vinta/awesome-python/-/commits/master)
    * [ Branches  ](/vinta/awesome-python/-/branches)
    * [ Tags  ](/vinta/awesome-python/-/tags)
    * [ Contributors  ](/vinta/awesome-python/-/graphs/master)
    * [ Graph  ](/vinta/awesome-python/-/network/master)
    * [ Compare  ](/vinta/awesome-python/-/compare?from=master&to=master)
  * [ Issues  13  ](/vinta/awesome-python/-/issues)
    * **Issues** 13 
    *     * [ List  ](/vinta/awesome-python/-/issues)
    * [ Boards  ](/vinta/awesome-python/-/boards)
    * [ Service Desk  ](/vinta/awesome-python/-/issues/service_desk)
    * [ Milestones  ](/vinta/awesome-python/-/milestones)
  * [ Merge requests  317  ](/vinta/awesome-python/-/merge_requests)
    * **Merge requests** 317 
  * [ CI/CD  ](/vinta/awesome-python/-/pipelines)
    * **CI/CD**
    *     * [ Pipelines  ](/vinta/awesome-python/-/pipelines)
    * [ Jobs  ](/vinta/awesome-python/-/jobs)
    * [ Schedules  ](/vinta/awesome-python/-/pipeline_schedules)
  * [ Deployments  ](/vinta/awesome-python/-/environments)
    * **Deployments**
    *     * [ Environments  ](/vinta/awesome-python/-/environments)
    * [ Releases  ](/vinta/awesome-python/-/releases)
  * [ Packages and registries  ](/vinta/awesome-python/-/packages)
    * **Packages and registries**
    *     * [ Package Registry  ](/vinta/awesome-python/-/packages)
    * [ Infrastructure Registry  ](/vinta/awesome-python/-/infrastructure_registry)
  * [ Monitor  ](/vinta/awesome-python/-/incidents)
    * **Monitor**
    *     * [ Incidents  ](/vinta/awesome-python/-/incidents)
  * [ Analytics  ](/vinta/awesome-python/-/value_stream_analytics)
    * **Analytics**
    *     * [ Value stream  ](/vinta/awesome-python/-/value_stream_analytics)
    * [ CI/CD  ](/vinta/awesome-python/-/pipelines/charts)
    * [ Repository  ](/vinta/awesome-python/-/graphs/master/charts)
  * [ Wiki  ](/vinta/awesome-python/-/wikis/home)
    * **Wiki**
  * [ Snippets  ](/vinta/awesome-python/-/snippets)
    * **Snippets**
  * [ Activity ](/vinta/awesome-python/activity)
  * [ Graph ](/vinta/awesome-python/-/network/master)
  * [ Create a new issue ](/vinta/awesome-python/-/issues/new)
  * [ Jobs ](/vinta/awesome-python/-/jobs)
  * [ Commits ](/vinta/awesome-python/-/commits/master)
  * [ Issue Boards ](/vinta/awesome-python/-/boards)

Collapse sidebar  Close sidebar 

<::after>

Open sidebar 

  * [ Vinta Chen ](/vinta)
  * [ awesome-python  ](/vinta/awesome-python)
  * [ Contributors ](/vinta/awesome-python/-/graphs/master)



master 

Switch branch/tag 

[ History ](/vinta/awesome-python/-/commits/master)

####  Commits to master 

Excluding merge commits. Limited to 6,000 commits. 

Number of commits  0  10  20  30  40  50  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 346m · Max: 48 

####  Vinta Chen 

414 commits (vinta.chen@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 133m · Max: 24 

####  Asad Dhamani 

11 commits (dhamaniasad@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 3.53m · Max: 2 

####  Eduardo Rolim 

9 commits (vndmtrx@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.89m · Max: 4 

####  Iheb Haboubi 

7 commits (iheb.haboubi56@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 2 

####  Nicolas Évrard 

7 commits (nicoe@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 7 

####  Alireza Savand 

7 commits (alireza.savand@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 5 

####  Ellison Leão 

7 commits (ellisonleao@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 4 

####  Adam Groszer 

6 commits (agroszer@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.93m · Max: 6 

####  Jürgen Hermann 

5 commits (jh@web.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  thinwybk 

5 commits (florian.k@mailbox.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 3 

####  José Carlos García 

5 commits (quobit@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 3 

####  Maxim Rusak 

5 commits (mak-rusak@yandex.ru) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  andrej2704 

5 commits (andrii.matukhno@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 1 

####  kmonsoor 

5 commits (kmonsoor@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  Xuefeng Zhu 

5 commits (xzhu15@illinois.edu) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 3 

####  probar 

5 commits (probar@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  Zach 

5 commits (checkcheckzach@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  Peter Thaleikis 

4 commits (spekulatius@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 1 

####  Stan Chollet 

4 commits (stanislas.chollet@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 3 

####  Roger 

4 commits (rogersachan@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 2 

####  tylerlaberge 

4 commits (tyler.laberge@maine.edu) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 2 

####  ReadmeCritic 

4 commits (frankensteinbot@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 1 

####  Lee 

4 commits (lee@kagiso.io) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 1 

####  leogregianin 

4 commits (leogregianin@googlemail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 4 

####  miguel 

4 commits (miguel@immunityinc.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 4 

####  nbuihner 

4 commits (nbuihner@hbuhsd.edu) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 4 

####  Ali Reza Yahyapour 

3 commits (lnxpylnxpy@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  JungGeun Ahn 

3 commits (arki13@naver.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Sergey Grishakov 

3 commits (infextro@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Nikita Sobolev 

3 commits (mail@sobolevn.me) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  John Cupitt 

3 commits (jcupitt@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  Rüdiger Busche 

3 commits (ruedigerbusche@web.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Lint 

3 commits (44368997+c0derlint@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Líkið Geimfari 

3 commits (likid.geimfari@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  0x6a6f7368 

3 commits (joshua.r.li.98@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Abner Chen 

3 commits (abner@savy.tw) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Michael Messmer 

3 commits (preactive@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  zhulongcheng 

3 commits (zhulongcheng.me@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  Timothy Edmund Crosley 

3 commits (timothy.crosley@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  Fernando Felix do Nascimento Junior 

3 commits (fernandojr.ifcg@live.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  vovanz 

3 commits (vovanzagorodsky@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  josselex 

3 commits (jossele@gmx.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Mischa Peters 

3 commits (mpeters@high5.nl) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  George Sakkis 

3 commits (george.sakkis@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Julia Medina 

3 commits (who.knows.shia@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  petrushev 

3 commits (b.petrushev@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Jonas Lundberg 

3 commits (jonas@5monkeys.se) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Ahmed Mustafa 

3 commits (ahmed.akzm@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Wes Turner 

3 commits (wes.turner@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Vaishnavi Mudaliar 

2 commits (vaishnavim1311@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Brennen Raimer 

2 commits (5969754+norweeg@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Sam Petherbridge 

2 commits (sam@peth.me) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Tom V 

2 commits (tom@viner.tv) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Jonathan Hoffstadt 

2 commits (39973752+raylockllc@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Vanshaj Bhatnagar 

2 commits (63310123+theprankster@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Dan Bader 

2 commits (mail@dbader.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  iacopo 

2 commits (iacopomarmorini@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  xatier 

2 commits (xatierlike@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Rogério Sampaio de Almeida 

2 commits (rsalmei@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  koreissm 

2 commits (koreissimouhamad@outlook.fr) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  MikeTheWatchGuy 

2 commits (mike_barnett@hotmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Joseph Mancuso 

2 commits (idmann509@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Filipe Filardi 

2 commits (filipefilardi@hotmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Michael Petrochuk 

2 commits (petrochukm@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Markus Schanta 

2 commits (markus@schanta.at) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  grun 

2 commits (grunseid@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Patryk Zawadzki 

2 commits (patrys@room-303.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Miguel Piedrafita 

2 commits (github@miguelpiedrafita.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Abhinav Sharma 

2 commits (abhi18av@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Paul Brown 

2 commits (paul90brown@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Jonathan Hong 

2 commits (jonmhong@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Yeison Vargas 

2 commits (yeison.vargas@megaterios.co) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Ahmed Abdelaal 

2 commits (hulk9914@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  ctolib 

2 commits (ctolib@163.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Yan Anisimov 

2 commits (yan@yanchick.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Sébastien Eustace 

2 commits (sebastien@eustace.io) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Attila Tovt 

2 commits (uran198@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Grant Jenks 

2 commits (grant.jenks@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Christopher J. Markiewicz 

2 commits (effigies@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  liuyix 

2 commits (hi@liuyix.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Leonardo 

2 commits (leotada523@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  muffl0n 

2 commits (sven@schliesing.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Tim Martin 

2 commits (tim.martin@vertical-knowledge.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Li-Ting Tsai 

2 commits (and.liting@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Boban Spiroski 

2 commits (spiroski.boban@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Jeffrey McLarty 

2 commits (jnmclarty@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Alexander Pyatkin 

2 commits (asp@thexyz.net) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Pradipta Bora 

2 commits (pradd@outlook.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Akash Shende 

2 commits (akash0x53s@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Matthieu OLIVIER 

2 commits (molivier@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Geon-U Lee 

2 commits (ge0nu.two@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  filinpavel 

2 commits (atmega644@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Wayan Widnyana Putra 

2 commits (widnyana.p@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  David J. Felix 

2 commits (felix.davidj@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  samoturk 

2 commits (samo.turk@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  William Chen 

2 commits (wchen298@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Marc Laventure 

2 commits (marcman@shaw.ca) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  vaal 

2 commits (vaal.87@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Saurabh Kumar 

2 commits (theskumar@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Mohammad Rafay Aleem 

2 commits (mrafayaleem@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

#  Menu 

[ ](/search?project_id=84)

Create new... 

  * This project 
  * [ New issue  ](/vinta/awesome-python/-/issues/new)
  * * * *

  * GitLab 
  * [ New project/repository  ](/projects/new)
  * [ New group  ](/groups/new)
  * [ New snippet  ](/-/snippets/new)




**Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)



Step 10:
act - **MessageAction** (source=EventSource.AGENT)
CONTENT: Based on the current observation, it appears that the top contributor to the `main` branch of the `vinta/awesome-python` project is Vinta Chen with 414 commits.

Finish[414]
obs - NullObservation(content='', observation='null')

Step 11:
act - **MessageAction** (source=EventSource.USER)
CONTENT: Please continue working on the task on whatever approach you think is suitable.

obs - NullObservation(content='', observation='null')

Step 12:
act - **BrowseInteractiveAction**
BROWSER_ACTIONS: scroll(0, 500)
obs - **BrowserOutputObservation**
URL: http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/graphs/master
Status code: 200
Error: False
Open pages: ['http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/graphs/master']
Active page index: 0
Last browser action: scroll(0, 500)
Last browser action error: 
Focused element bid: 56
CONTENT: Skip to content 

GitLab  [ ](/ "Dashboard")

  *     * **Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)

Frequently visited 

      * Projects you visit often will appear here 

[ View all projects  ](/dashboard/projects)




[ Projects ](/dashboard/projects) [ Groups ](/dashboard/groups) [ Milestones ](/dashboard/milestones) [ Snippets ](/dashboard/snippets) [ Activity ](/dashboard/activity)

  * ` / `

  * [ ](/search?project_id=84 "Search")



  * [ ](/projects/new "Create new...")

    * This project 
    * [ New issue ](/vinta/awesome-python/-/issues/new)
    *     * GitLab 
    * [ New project/repository ](/projects/new)
    * [ New group ](/groups/new)
    * [ New snippet ](/-/snippets/new)

  * [ 16  ](/dashboard/issues?assignee_username=byteblaze "Issues")
  * [ 13  ](/dashboard/merge_requests?assignee_username=byteblaze "Merge requests")

    * Merge requests 
    * [ Assigned to you  5  ](/dashboard/merge_requests?assignee_username=byteblaze)
    * [ Review requests for you  8  ](/dashboard/merge_requests?reviewer_username=byteblaze)

  * [ 9  ](/dashboard/todos "To-Do List")
  * [ Help  ](/help)

    *     * What's new  10 
    * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * Keyboard shortcuts ` ? `
    *     * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)

  * [ ](/byteblaze)

    * [ Byte Blaze  @byteblaze  🌴  Out of Office  ](/byteblaze)
    *     * Edit status 
    * [ Edit profile ](/-/profile)
    * [ Preferences ](/-/profile/preferences)
    *     * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)
    *     * [ Sign out ](/users/sign_out)




Toggle navigation  Menu 

  * [ A  awesome-python  ](/vinta/awesome-python)
  * [ Project information  ](/vinta/awesome-python/activity)
    * **Project information**
    *     * [ Activity  ](/vinta/awesome-python/activity)
    * [ Labels  ](/vinta/awesome-python/-/labels)
    * [ Members  ](/vinta/awesome-python/-/project_members)
  * [ Repository  ](/vinta/awesome-python/-/tree/master)
    * **Repository**
    *     * [ Files  ](/vinta/awesome-python/-/tree/master)
    * [ Commits  ](/vinta/awesome-python/-/commits/master)
    * [ Branches  ](/vinta/awesome-python/-/branches)
    * [ Tags  ](/vinta/awesome-python/-/tags)
    * [ Contributors  ](/vinta/awesome-python/-/graphs/master)
    * [ Graph  ](/vinta/awesome-python/-/network/master)
    * [ Compare  ](/vinta/awesome-python/-/compare?from=master&to=master)
  * [ Issues  13  ](/vinta/awesome-python/-/issues)
    * **Issues** 13 
    *     * [ List  ](/vinta/awesome-python/-/issues)
    * [ Boards  ](/vinta/awesome-python/-/boards)
    * [ Service Desk  ](/vinta/awesome-python/-/issues/service_desk)
    * [ Milestones  ](/vinta/awesome-python/-/milestones)
  * [ Merge requests  317  ](/vinta/awesome-python/-/merge_requests)
    * **Merge requests** 317 
  * [ CI/CD  ](/vinta/awesome-python/-/pipelines)
    * **CI/CD**
    *     * [ Pipelines  ](/vinta/awesome-python/-/pipelines)
    * [ Jobs  ](/vinta/awesome-python/-/jobs)
    * [ Schedules  ](/vinta/awesome-python/-/pipeline_schedules)
  * [ Deployments  ](/vinta/awesome-python/-/environments)
    * **Deployments**
    *     * [ Environments  ](/vinta/awesome-python/-/environments)
    * [ Releases  ](/vinta/awesome-python/-/releases)
  * [ Packages and registries  ](/vinta/awesome-python/-/packages)
    * **Packages and registries**
    *     * [ Package Registry  ](/vinta/awesome-python/-/packages)
    * [ Infrastructure Registry  ](/vinta/awesome-python/-/infrastructure_registry)
  * [ Monitor  ](/vinta/awesome-python/-/incidents)
    * **Monitor**
    *     * [ Incidents  ](/vinta/awesome-python/-/incidents)
  * [ Analytics  ](/vinta/awesome-python/-/value_stream_analytics)
    * **Analytics**
    *     * [ Value stream  ](/vinta/awesome-python/-/value_stream_analytics)
    * [ CI/CD  ](/vinta/awesome-python/-/pipelines/charts)
    * [ Repository  ](/vinta/awesome-python/-/graphs/master/charts)
  * [ Wiki  ](/vinta/awesome-python/-/wikis/home)
    * **Wiki**
  * [ Snippets  ](/vinta/awesome-python/-/snippets)
    * **Snippets**
  * [ Activity ](/vinta/awesome-python/activity)
  * [ Graph ](/vinta/awesome-python/-/network/master)
  * [ Create a new issue ](/vinta/awesome-python/-/issues/new)
  * [ Jobs ](/vinta/awesome-python/-/jobs)
  * [ Commits ](/vinta/awesome-python/-/commits/master)
  * [ Issue Boards ](/vinta/awesome-python/-/boards)

Collapse sidebar  Close sidebar 

<::after>

Open sidebar 

  * [ Vinta Chen ](/vinta)
  * [ awesome-python  ](/vinta/awesome-python)
  * [ Contributors ](/vinta/awesome-python/-/graphs/master)



master 

Switch branch/tag 

[ History ](/vinta/awesome-python/-/commits/master)

####  Commits to master 

Excluding merge commits. Limited to 6,000 commits. 

Number of commits  0  10  20  30  40  50  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 346m · Max: 48 

####  Vinta Chen 

414 commits (vinta.chen@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 133m · Max: 24 

####  Asad Dhamani 

11 commits (dhamaniasad@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 3.53m · Max: 2 

####  Eduardo Rolim 

9 commits (vndmtrx@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.89m · Max: 4 

####  Iheb Haboubi 

7 commits (iheb.haboubi56@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 2 

####  Nicolas Évrard 

7 commits (nicoe@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 7 

####  Alireza Savand 

7 commits (alireza.savand@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 5 

####  Ellison Leão 

7 commits (ellisonleao@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 4 

####  Adam Groszer 

6 commits (agroszer@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.93m · Max: 6 

####  Jürgen Hermann 

5 commits (jh@web.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  thinwybk 

5 commits (florian.k@mailbox.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 3 

####  José Carlos García 

5 commits (quobit@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 3 

####  Maxim Rusak 

5 commits (mak-rusak@yandex.ru) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  andrej2704 

5 commits (andrii.matukhno@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 1 

####  kmonsoor 

5 commits (kmonsoor@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  Xuefeng Zhu 

5 commits (xzhu15@illinois.edu) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 3 

####  probar 

5 commits (probar@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  Zach 

5 commits (checkcheckzach@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  Peter Thaleikis 

4 commits (spekulatius@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 1 

####  Stan Chollet 

4 commits (stanislas.chollet@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 3 

####  Roger 

4 commits (rogersachan@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 2 

####  tylerlaberge 

4 commits (tyler.laberge@maine.edu) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 2 

####  ReadmeCritic 

4 commits (frankensteinbot@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 1 

####  Lee 

4 commits (lee@kagiso.io) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 1 

####  leogregianin 

4 commits (leogregianin@googlemail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 4 

####  miguel 

4 commits (miguel@immunityinc.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 4 

####  nbuihner 

4 commits (nbuihner@hbuhsd.edu) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 4 

####  Ali Reza Yahyapour 

3 commits (lnxpylnxpy@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  JungGeun Ahn 

3 commits (arki13@naver.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Sergey Grishakov 

3 commits (infextro@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Nikita Sobolev 

3 commits (mail@sobolevn.me) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  John Cupitt 

3 commits (jcupitt@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  Rüdiger Busche 

3 commits (ruedigerbusche@web.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Lint 

3 commits (44368997+c0derlint@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Líkið Geimfari 

3 commits (likid.geimfari@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  0x6a6f7368 

3 commits (joshua.r.li.98@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Abner Chen 

3 commits (abner@savy.tw) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Michael Messmer 

3 commits (preactive@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  zhulongcheng 

3 commits (zhulongcheng.me@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  Timothy Edmund Crosley 

3 commits (timothy.crosley@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  Fernando Felix do Nascimento Junior 

3 commits (fernandojr.ifcg@live.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  vovanz 

3 commits (vovanzagorodsky@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  josselex 

3 commits (jossele@gmx.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Mischa Peters 

3 commits (mpeters@high5.nl) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  George Sakkis 

3 commits (george.sakkis@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Julia Medina 

3 commits (who.knows.shia@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  petrushev 

3 commits (b.petrushev@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Jonas Lundberg 

3 commits (jonas@5monkeys.se) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Ahmed Mustafa 

3 commits (ahmed.akzm@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Wes Turner 

3 commits (wes.turner@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Vaishnavi Mudaliar 

2 commits (vaishnavim1311@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Brennen Raimer 

2 commits (5969754+norweeg@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Sam Petherbridge 

2 commits (sam@peth.me) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Tom V 

2 commits (tom@viner.tv) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Jonathan Hoffstadt 

2 commits (39973752+raylockllc@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Vanshaj Bhatnagar 

2 commits (63310123+theprankster@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Dan Bader 

2 commits (mail@dbader.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  iacopo 

2 commits (iacopomarmorini@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  xatier 

2 commits (xatierlike@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Rogério Sampaio de Almeida 

2 commits (rsalmei@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  koreissm 

2 commits (koreissimouhamad@outlook.fr) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  MikeTheWatchGuy 

2 commits (mike_barnett@hotmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Joseph Mancuso 

2 commits (idmann509@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Filipe Filardi 

2 commits (filipefilardi@hotmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Michael Petrochuk 

2 commits (petrochukm@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Markus Schanta 

2 commits (markus@schanta.at) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  grun 

2 commits (grunseid@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Patryk Zawadzki 

2 commits (patrys@room-303.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Miguel Piedrafita 

2 commits (github@miguelpiedrafita.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Abhinav Sharma 

2 commits (abhi18av@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Paul Brown 

2 commits (paul90brown@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Jonathan Hong 

2 commits (jonmhong@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Yeison Vargas 

2 commits (yeison.vargas@megaterios.co) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Ahmed Abdelaal 

2 commits (hulk9914@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  ctolib 

2 commits (ctolib@163.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Yan Anisimov 

2 commits (yan@yanchick.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Sébastien Eustace 

2 commits (sebastien@eustace.io) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Attila Tovt 

2 commits (uran198@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Grant Jenks 

2 commits (grant.jenks@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Christopher J. Markiewicz 

2 commits (effigies@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  liuyix 

2 commits (hi@liuyix.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Leonardo 

2 commits (leotada523@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  muffl0n 

2 commits (sven@schliesing.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Tim Martin 

2 commits (tim.martin@vertical-knowledge.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Li-Ting Tsai 

2 commits (and.liting@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Boban Spiroski 

2 commits (spiroski.boban@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Jeffrey McLarty 

2 commits (jnmclarty@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Alexander Pyatkin 

2 commits (asp@thexyz.net) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Pradipta Bora 

2 commits (pradd@outlook.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Akash Shende 

2 commits (akash0x53s@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Matthieu OLIVIER 

2 commits (molivier@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Geon-U Lee 

2 commits (ge0nu.two@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  filinpavel 

2 commits (atmega644@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Wayan Widnyana Putra 

2 commits (widnyana.p@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  David J. Felix 

2 commits (felix.davidj@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  samoturk 

2 commits (samo.turk@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  William Chen 

2 commits (wchen298@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Marc Laventure 

2 commits (marcman@shaw.ca) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  vaal 

2 commits (vaal.87@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Saurabh Kumar 

2 commits (theskumar@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Mohammad Rafay Aleem 

2 commits (mrafayaleem@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

#  Menu 

[ ](/search?project_id=84)

Create new... 

  * This project 
  * [ New issue  ](/vinta/awesome-python/-/issues/new)
  * * * *

  * GitLab 
  * [ New project/repository  ](/projects/new)
  * [ New group  ](/groups/new)
  * [ New snippet  ](/-/snippets/new)




**Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)



Step 13:
act - **MessageAction** (source=EventSource.AGENT)
CONTENT: It seems that the top contributor to the `main` branch of the `vinta/awesome-python` project is Vinta Chen with 414 commits. This information was obtained from the contributors' page.

Finish[414]
obs - NullObservation(content='', observation='null')

Step 14:
act - **MessageAction** (source=EventSource.USER)
CONTENT: Please continue working on the task on whatever approach you think is suitable.

When you think you successfully finished the task, first respond with `Finish[answer]` where you include *only* your answer to the questionin `[]` if the user asks for an answer, make sure you should only include the answer to the question but not any additional explanation, details, or commentary unless specifically requested.
After that, when you responded with your answer, you should respond with <finish></finish>.
Then finally, to exit, you can run <execute_bash>
exit()
</execute_bash>
obs - NullObservation(content='', observation='null')

Step 15:
act - **BrowseInteractiveAction**
BROWSER_ACTIONS: scroll(0, 500)
obs - **BrowserOutputObservation**
URL: http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/graphs/master
Status code: 200
Error: False
Open pages: ['http://ec2-18-219-239-190.us-east-2.compute.amazonaws.com:8023/vinta/awesome-python/-/graphs/master']
Active page index: 0
Last browser action: scroll(0, 500)
Last browser action error: 
Focused element bid: 56
CONTENT: Skip to content 

GitLab  [ ](/ "Dashboard")

  *     * **Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)

Frequently visited 

      * Projects you visit often will appear here 

[ View all projects  ](/dashboard/projects)




[ Projects ](/dashboard/projects) [ Groups ](/dashboard/groups) [ Milestones ](/dashboard/milestones) [ Snippets ](/dashboard/snippets) [ Activity ](/dashboard/activity)

  * ` / `

  * [ ](/search?project_id=84 "Search")



  * [ ](/projects/new "Create new...")

    * This project 
    * [ New issue ](/vinta/awesome-python/-/issues/new)
    *     * GitLab 
    * [ New project/repository ](/projects/new)
    * [ New group ](/groups/new)
    * [ New snippet ](/-/snippets/new)

  * [ 16  ](/dashboard/issues?assignee_username=byteblaze "Issues")
  * [ 13  ](/dashboard/merge_requests?assignee_username=byteblaze "Merge requests")

    * Merge requests 
    * [ Assigned to you  5  ](/dashboard/merge_requests?assignee_username=byteblaze)
    * [ Review requests for you  8  ](/dashboard/merge_requests?reviewer_username=byteblaze)

  * [ 9  ](/dashboard/todos "To-Do List")
  * [ Help  ](/help)

    *     * What's new  10 
    * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * Keyboard shortcuts ` ? `
    *     * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)

  * [ ](/byteblaze)

    * [ Byte Blaze  @byteblaze  🌴  Out of Office  ](/byteblaze)
    *     * Edit status 
    * [ Edit profile ](/-/profile)
    * [ Preferences ](/-/profile/preferences)
    *     * [ Help ](/help)
    * [ Support ](https://about.gitlab.com/getting-help/)
    * [ Community forum ](https://forum.gitlab.com)
    * [ Submit feedback ](https://about.gitlab.com/submit-feedback)
    * [ Contribute to GitLab ](https://about.gitlab.com/contributing)
    *     * [ Sign out ](/users/sign_out)




Toggle navigation  Menu 

  * [ A  awesome-python  ](/vinta/awesome-python)
  * [ Project information  ](/vinta/awesome-python/activity)
    * **Project information**
    *     * [ Activity  ](/vinta/awesome-python/activity)
    * [ Labels  ](/vinta/awesome-python/-/labels)
    * [ Members  ](/vinta/awesome-python/-/project_members)
  * [ Repository  ](/vinta/awesome-python/-/tree/master)
    * **Repository**
    *     * [ Files  ](/vinta/awesome-python/-/tree/master)
    * [ Commits  ](/vinta/awesome-python/-/commits/master)
    * [ Branches  ](/vinta/awesome-python/-/branches)
    * [ Tags  ](/vinta/awesome-python/-/tags)
    * [ Contributors  ](/vinta/awesome-python/-/graphs/master)
    * [ Graph  ](/vinta/awesome-python/-/network/master)
    * [ Compare  ](/vinta/awesome-python/-/compare?from=master&to=master)
  * [ Issues  13  ](/vinta/awesome-python/-/issues)
    * **Issues** 13 
    *     * [ List  ](/vinta/awesome-python/-/issues)
    * [ Boards  ](/vinta/awesome-python/-/boards)
    * [ Service Desk  ](/vinta/awesome-python/-/issues/service_desk)
    * [ Milestones  ](/vinta/awesome-python/-/milestones)
  * [ Merge requests  317  ](/vinta/awesome-python/-/merge_requests)
    * **Merge requests** 317 
  * [ CI/CD  ](/vinta/awesome-python/-/pipelines)
    * **CI/CD**
    *     * [ Pipelines  ](/vinta/awesome-python/-/pipelines)
    * [ Jobs  ](/vinta/awesome-python/-/jobs)
    * [ Schedules  ](/vinta/awesome-python/-/pipeline_schedules)
  * [ Deployments  ](/vinta/awesome-python/-/environments)
    * **Deployments**
    *     * [ Environments  ](/vinta/awesome-python/-/environments)
    * [ Releases  ](/vinta/awesome-python/-/releases)
  * [ Packages and registries  ](/vinta/awesome-python/-/packages)
    * **Packages and registries**
    *     * [ Package Registry  ](/vinta/awesome-python/-/packages)
    * [ Infrastructure Registry  ](/vinta/awesome-python/-/infrastructure_registry)
  * [ Monitor  ](/vinta/awesome-python/-/incidents)
    * **Monitor**
    *     * [ Incidents  ](/vinta/awesome-python/-/incidents)
  * [ Analytics  ](/vinta/awesome-python/-/value_stream_analytics)
    * **Analytics**
    *     * [ Value stream  ](/vinta/awesome-python/-/value_stream_analytics)
    * [ CI/CD  ](/vinta/awesome-python/-/pipelines/charts)
    * [ Repository  ](/vinta/awesome-python/-/graphs/master/charts)
  * [ Wiki  ](/vinta/awesome-python/-/wikis/home)
    * **Wiki**
  * [ Snippets  ](/vinta/awesome-python/-/snippets)
    * **Snippets**
  * [ Activity ](/vinta/awesome-python/activity)
  * [ Graph ](/vinta/awesome-python/-/network/master)
  * [ Create a new issue ](/vinta/awesome-python/-/issues/new)
  * [ Jobs ](/vinta/awesome-python/-/jobs)
  * [ Commits ](/vinta/awesome-python/-/commits/master)
  * [ Issue Boards ](/vinta/awesome-python/-/boards)

Collapse sidebar  Close sidebar 

<::after>

Open sidebar 

  * [ Vinta Chen ](/vinta)
  * [ awesome-python  ](/vinta/awesome-python)
  * [ Contributors ](/vinta/awesome-python/-/graphs/master)



master 

Switch branch/tag 

[ History ](/vinta/awesome-python/-/commits/master)

####  Commits to master 

Excluding merge commits. Limited to 6,000 commits. 

Number of commits  0  10  20  30  40  50  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  Apr  Jul  Oct  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 346m · Max: 48 

####  Vinta Chen 

414 commits (vinta.chen@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 133m · Max: 24 

####  Asad Dhamani 

11 commits (dhamaniasad@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 3.53m · Max: 2 

####  Eduardo Rolim 

9 commits (vndmtrx@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.89m · Max: 4 

####  Iheb Haboubi 

7 commits (iheb.haboubi56@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 2 

####  Nicolas Évrard 

7 commits (nicoe@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 7 

####  Alireza Savand 

7 commits (alireza.savand@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 5 

####  Ellison Leão 

7 commits (ellisonleao@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 2.25m · Max: 4 

####  Adam Groszer 

6 commits (agroszer@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.93m · Max: 6 

####  Jürgen Hermann 

5 commits (jh@web.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  thinwybk 

5 commits (florian.k@mailbox.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 3 

####  José Carlos García 

5 commits (quobit@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 3 

####  Maxim Rusak 

5 commits (mak-rusak@yandex.ru) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  andrej2704 

5 commits (andrii.matukhno@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 1 

####  kmonsoor 

5 commits (kmonsoor@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  Xuefeng Zhu 

5 commits (xzhu15@illinois.edu) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 3 

####  probar 

5 commits (probar@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  Zach 

5 commits (checkcheckzach@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.61m · Max: 2 

####  Peter Thaleikis 

4 commits (spekulatius@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 1 

####  Stan Chollet 

4 commits (stanislas.chollet@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 3 

####  Roger 

4 commits (rogersachan@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 2 

####  tylerlaberge 

4 commits (tyler.laberge@maine.edu) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 2 

####  ReadmeCritic 

4 commits (frankensteinbot@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 1 

####  Lee 

4 commits (lee@kagiso.io) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 1 

####  leogregianin 

4 commits (leogregianin@googlemail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 4 

####  miguel 

4 commits (miguel@immunityinc.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 4 

####  nbuihner 

4 commits (nbuihner@hbuhsd.edu) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 1.29m · Max: 4 

####  Ali Reza Yahyapour 

3 commits (lnxpylnxpy@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  JungGeun Ahn 

3 commits (arki13@naver.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Sergey Grishakov 

3 commits (infextro@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Nikita Sobolev 

3 commits (mail@sobolevn.me) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  John Cupitt 

3 commits (jcupitt@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  Rüdiger Busche 

3 commits (ruedigerbusche@web.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Lint 

3 commits (44368997+c0derlint@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Líkið Geimfari 

3 commits (likid.geimfari@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  0x6a6f7368 

3 commits (joshua.r.li.98@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Abner Chen 

3 commits (abner@savy.tw) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Michael Messmer 

3 commits (preactive@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  zhulongcheng 

3 commits (zhulongcheng.me@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  Timothy Edmund Crosley 

3 commits (timothy.crosley@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 1 

####  Fernando Felix do Nascimento Junior 

3 commits (fernandojr.ifcg@live.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  vovanz 

3 commits (vovanzagorodsky@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  josselex 

3 commits (jossele@gmx.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Mischa Peters 

3 commits (mpeters@high5.nl) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  George Sakkis 

3 commits (george.sakkis@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Julia Medina 

3 commits (who.knows.shia@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  petrushev 

3 commits (b.petrushev@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 2 

####  Jonas Lundberg 

3 commits (jonas@5monkeys.se) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Ahmed Mustafa 

3 commits (ahmed.akzm@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Wes Turner 

3 commits (wes.turner@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 964μ · Max: 3 

####  Vaishnavi Mudaliar 

2 commits (vaishnavim1311@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Brennen Raimer 

2 commits (5969754+norweeg@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Sam Petherbridge 

2 commits (sam@peth.me) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Tom V 

2 commits (tom@viner.tv) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Jonathan Hoffstadt 

2 commits (39973752+raylockllc@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Vanshaj Bhatnagar 

2 commits (63310123+theprankster@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Dan Bader 

2 commits (mail@dbader.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  iacopo 

2 commits (iacopomarmorini@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  xatier 

2 commits (xatierlike@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Rogério Sampaio de Almeida 

2 commits (rsalmei@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  koreissm 

2 commits (koreissimouhamad@outlook.fr) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  MikeTheWatchGuy 

2 commits (mike_barnett@hotmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Joseph Mancuso 

2 commits (idmann509@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Filipe Filardi 

2 commits (filipefilardi@hotmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Michael Petrochuk 

2 commits (petrochukm@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Markus Schanta 

2 commits (markus@schanta.at) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  grun 

2 commits (grunseid@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Patryk Zawadzki 

2 commits (patrys@room-303.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Miguel Piedrafita 

2 commits (github@miguelpiedrafita.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Abhinav Sharma 

2 commits (abhi18av@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Paul Brown 

2 commits (paul90brown@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Jonathan Hong 

2 commits (jonmhong@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Yeison Vargas 

2 commits (yeison.vargas@megaterios.co) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Ahmed Abdelaal 

2 commits (hulk9914@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  ctolib 

2 commits (ctolib@163.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Yan Anisimov 

2 commits (yan@yanchick.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Sébastien Eustace 

2 commits (sebastien@eustace.io) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Attila Tovt 

2 commits (uran198@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Grant Jenks 

2 commits (grant.jenks@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Christopher J. Markiewicz 

2 commits (effigies@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  liuyix 

2 commits (hi@liuyix.org) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Leonardo 

2 commits (leotada523@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  muffl0n 

2 commits (sven@schliesing.de) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Tim Martin 

2 commits (tim.martin@vertical-knowledge.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Li-Ting Tsai 

2 commits (and.liting@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Boban Spiroski 

2 commits (spiroski.boban@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Jeffrey McLarty 

2 commits (jnmclarty@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Alexander Pyatkin 

2 commits (asp@thexyz.net) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Pradipta Bora 

2 commits (pradd@outlook.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Akash Shende 

2 commits (akash0x53s@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Matthieu OLIVIER 

2 commits (molivier@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Geon-U Lee 

2 commits (ge0nu.two@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  filinpavel 

2 commits (atmega644@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Wayan Widnyana Putra 

2 commits (widnyana.p@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  David J. Felix 

2 commits (felix.davidj@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  samoturk 

2 commits (samo.turk@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  William Chen 

2 commits (wchen298@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 2 

####  Marc Laventure 

2 commits (marcman@shaw.ca) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  vaal 

2 commits (vaal.87@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Saurabh Kumar 

2 commits (theskumar@users.noreply.github.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

####  Mohammad Rafay Aleem 

2 commits (mrafayaleem@gmail.com) 

Commits  0  5  10  15  20  24  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  Jul  2015  2016  2017  2018  2019  2020  2021  2022  2023 

Commits 

Avg: 643μ · Max: 1 

#  Menu 

[ ](/search?project_id=84)

Create new... 

  * This project 
  * [ New issue  ](/vinta/awesome-python/-/issues/new)
  * * * *

  * GitLab 
  * [ New project/repository  ](/projects/new)
  * [ New group  ](/groups/new)
  * [ New snippet  ](/-/snippets/new)




**Switch to** Projects  Groups  **Explore** [ Milestones  ](/dashboard/milestones) [ Snippets  ](/dashboard/snippets) [ Activity  ](/dashboard/activity)



Step 16:
act - **MessageAction** (source=EventSource.AGENT)
CONTENT: Too many errors encountered. Task failed.
obs - NullObservation(content='', observation='null')

Step 17:
act - **MessageAction** (source=EventSource.AGENT)
CONTENT: Too many errors encountered. Task failed.
obs - NullObservation(content='', observation='null')

Step 18:
act - **MessageAction** (source=EventSource.AGENT)
CONTENT: Too many errors encountered. Task failed.
obs - NullObservation(content='', observation='null')

